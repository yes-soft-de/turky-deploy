{"version":3,"sources":["./src/app/pages/chats/chats-routing.module.ts","./src/app/pages/chats/chats.module.ts","./src/app/pages/chats/components/all-chats/all-chats.component.ts","./src/app/pages/chats/components/all-chats/all-chats.component.html","./src/app/pages/chats/components/chat-details/chat-details.component.ts","./src/app/pages/chats/components/chat-details/chat-details.component.html","./src/app/pages/chats/services/chats.service.ts","./src/app/pages/chats/store/chat.actions.ts","./src/app/pages/chats/store/chat.effects.ts","./src/app/pages/chats/store/chat.reducer.ts","./src/app/pages/chats/store/chat.selector.ts"],"names":[],"mappings":"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","file":"chats-chats-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AllChatsComponent} from './components/all-chats/all-chats.component';\nimport {ChatDetailsComponent} from './components/chat-details/chat-details.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AllChatsComponent },\n  { path: ':id', component: ChatDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChatsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport {ThemeModule} from '../../@theme/theme.module';\n\nimport { ChatsRoutingModule } from './chats-routing.module';\nimport { AllChatsComponent } from './components/all-chats/all-chats.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromChat from './store/chat.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ChatEffects } from './store/chat.effects';\nimport { ChatDetailsComponent } from './components/chat-details/chat-details.component';\nimport {DatePipe} from '@angular/common';\nimport {ChatsService} from './services/chats.service';\n\n\n@NgModule({\n  declarations: [AllChatsComponent, ChatDetailsComponent],\n  imports: [\n    ThemeModule,\n    ChatsRoutingModule,\n    StoreModule.forFeature(fromChat.chatsFeatureKey, fromChat.reducer),\n    EffectsModule.forFeature([ChatEffects])\n  ],\n  providers: [ChatsService, DatePipe]\n})\nexport class ChatsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Chat} from '../../model/chat.model';\nimport {select, Store} from '@ngrx/store';\nimport {ChatState} from '../../store/chat.reducer';\nimport * as chatAction from '../../store/chat.actions';\nimport {chatsSelector} from '../../store/chat.selector';\nimport * as carAction from '../../../cars/store/car.actions';\nimport {ToastrService} from 'ngx-toastr';\nimport {ChatsService} from '../../services/chats.service';\n\n@Component({\n  selector: 'app-all-chats',\n  templateUrl: './all-chats.component.html',\n  styleUrls: ['./all-chats.component.scss']\n})\nexport class AllChatsComponent implements OnInit {\n  chats: Chat[];\n  chatsList: Chat[] = [];\n  config: any;\n  name: any;\n\n  constructor(private store: Store<ChatState>,\n              private chatService: ChatsService,\n              private toaster: ToastrService) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(chatAction.loadChats());\n    // Get All Chats\n    this.getAllChats();\n  }\n\n  getAllChats() {\n    this.store.pipe(select(chatsSelector)).subscribe(\n      response => {\n        console.log('chats: ', response);\n        this.chats = response;\n        this.chatsList = response;\n      }\n    );\n    this.config = {\n      itemsPerPage: 5,\n      currentPage: 1,\n      totalItems: this.chatsList.length\n    };\n  }\n\n  // Handle Response Error\n  handleError(error) {\n    console.log(error);\n    if (error.error.error) {\n      this.toaster.error(error.error.error);\n    } else if (error.error.msg) {\n      this.toaster.error(error.error.msg);\n    }\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  // Delete The Cars\n  delete(carId: number) {\n    if (confirm('Are You Sure You Want To Delete This Chat')) {\n      // this.isDeleted = true;\n      // this.store.dispatch(carAction.deleteCar({id: carId}));\n      // this.toaster.success('Car Successfully Deleted');\n      // fetch all product after delete Car\n      this.getAllChats();\n    } else {\n      return false;\n    }\n  }\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.chatsList = [...this.chats];\n    } else {\n      this.chatsList = [];\n      this.chatsList = this.chats.filter(res => {\n        if (res.username) {\n          const username = res.username.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (username) {\n            // display the Name Column\n            return username;\n          }\n        }\n      });\n    }\n  }\n}\n","<div class=\"chats\" *ngIf=\"chats.length != 0\">\r\n   <div class=\"container-fluid\">\r\n    <div class=\"card my-5\">\r\n      <div class=\"card-header\">\r\n        <h1 class=\"text-center details-title my-4\">{{'manage-chats-page' | translate}}</h1>\r\n      </div>\r\n      <div class=\"card-body p-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\r\n            <div class=\"form-group mb-0 mt-3\">\r\n              <input\r\n                id=\"exampleFormControlInput2\"\r\n                [(ngModel)]=\"name\"\r\n                (keyup)=\"applyFilter()\"\r\n                type=\"text\"\r\n                placeholder=\"{{'chat-search-input' | translate}}\"\r\n                title=\"{{'chat-search-input' | translate}}\"\r\n                class=\"form-control form-control-underlined border-primary search-input\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\r\n            <!-- <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/cars/add\">\r\n              <i class=\"fa fa-plus\"></i>\r\n              {{'add-new-car' | translate}}\r\n            </a> -->\r\n          </div>\r\n        </div>\r\n        <div class=\"messages-body my-3 pt-3 p-2\">\r\n          <div class=\"comment-block\" *ngFor=\"let chat of chatsList | paginate: config\">\r\n            <a routerLink=\"{{chat?.roomID}}\">\r\n              <div class=\"row\">\r\n                <div class=\"col-2 col-lg-1 text-center pr-0 align-self-center\">\r\n                  <div class=\"user-img\">\r\n                    <img class=\"res-image\"\r\n                        src=\"{{chat?.image ? chat?.image :  '../../../../../assets/default-avatar.jpg'}}\"\r\n                        alt=\"\"/>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-10 col-lg-11 mt-2 mt-sm-0\">\r\n                  <div class=\"comment-body py-2 px-3\">\r\n                    <div class=\"time\">\r\n                      <span class=\"pb-1\">{{chat?.username}} {{chat?.startAt != null ? '( ' + (chat?.startAt.timestamp * 1000 | date: 'medium') + ' )' : ''}}</span>\r\n                    </div>\r\n    <!--                <p class=\"comment m-0 mt-2\">-->\r\n    <!--                  {{comment.body}}-->\r\n    <!--                </p>-->\r\n                  </div>\r\n                </div>\r\n              </div><!--.row-->\r\n            </a>\r\n          </div><!--.comment-block-->\r\n        </div><!--.messages-body-->\r\n      </div><!--.card-body-->\r\n      <div class=\"card-footer\">\r\n        <pagination-controls class=\"my-pagination\"\r\n                             (pageChange)=\"pageChanged($event)\"\r\n                             autoHide=\"true\"\r\n                             maxSize=\"5\"\r\n                             responsive=\"true\"\r\n                             previousLabel=\"{{'prev' | translate}}\"\r\n                             nextLabel=\"{{'next' | translate}}\"\r\n                             screenReaderPaginationLabel=\"Pagination\"\r\n                             screenReaderPageLabel=\"page\"\r\n                             screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\r\n        </pagination-controls>\r\n      </div><!--.card-footer-->\r\n    </div><!--.card-->\r\n   </div>\r\n</div><!--.chats-->\r\n<div *ngIf=\"chats.length === 0\">\r\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n</div>\r\n","import {Component, Inject, OnDestroy, OnInit, Renderer2} from '@angular/core';\r\nimport { Action, DocumentSnapshot } from '@angular/fire/firestore';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {interval, Observable, pipe, Subject} from 'rxjs';\r\nimport {takeUntil, takeWhile, timeInterval} from 'rxjs/operators';\r\nimport {MessageModel} from '../../model/message-model';\r\nimport {ChatsService} from '../../services/chats.service';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-chat-details',\r\n  templateUrl: './chat-details.component.html',\r\n  styleUrls: ['./chat-details.component.scss']\r\n})\r\nexport class ChatDetailsComponent implements OnInit, OnDestroy {\r\n  private destroy$: Subject<void> = new Subject();\r\n  messageForm: FormGroup;\r\n  messages: MessageModel[];\r\n  firstSender: any;\r\n  secondSender: any;\r\n\r\n\r\n  constructor(private chatService: ChatsService,\r\n              private formBuilder: FormBuilder,\r\n              private toaster: ToastrService,\r\n              private activatedRoute: ActivatedRoute,\r\n              public translate: TranslateService,\r\n              private render: Renderer2,\r\n              @Inject(DOCUMENT) private document: Document) {}\r\n\r\n  ngOnInit(): void {\r\n    this.checkMessageBodyScrollHeight();\r\n    // Fetch Form Data\r\n    this.messageForm = this.formBuilder.group({\r\n      message: ['', Validators.required],\r\n      roomId: ['']\r\n    });\r\n\r\n    this.activatedRoute.params.subscribe(\r\n      params => {\r\n        console.log(params);\r\n        this.getMessages(params.id);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  getMessages(roomId: string) {\r\n    // Check Room Id exists\r\n    if (roomId) {\r\n      this.messageForm.get('roomId').setValue(roomId);\r\n      this.chatService.getMessagesObservable(roomId)\r\n      .pipe(\r\n        takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (messages) => {\r\n          // console.log('messages: ', messages);\r\n          this.messages = [];\r\n          messages.docs.forEach((e, i) => {\r\n            // Get ALl Message by e.data()\r\n            this.messages.push(e.data());\r\n          });\r\n          // Sort Messages Depending On Message Date\r\n          this.messages.sort((a, b) => a.sentDate.localeCompare(b.sentDate));\r\n          // console.log('after sort Messages : ', this.messages);\r\n          // Check if the messages is not empty\r\n          if (this.messages.length > 0) {\r\n            this.secondSender = 'admin';\r\n            for (let i = 0; i < this.messages.length - 1; i++) {\r\n              // check if firstSender And secondSender still empty\r\n              if (this.firstSender == null) {\r\n                // Check if the this sender equal to next sender\r\n                if (this.messages[i].sender != this.secondSender) {\r\n                  this.firstSender = this.messages[i].sender;\r\n                }\r\n              }\r\n              /* Second Way If firstSender And SecondSender is Undefined\r\n              if (this.firstSender == null || this.secondSender == null) {\r\n                // Check if the this sender equal to next sender\r\n                if (this.messages[i].sender == this.messages[i + 1].sender) {\r\n                  this.firstSender = this.messages[i].sender;\r\n                } else {\r\n                  // check if this sender not equal to The stored firstSender\r\n                  if (this.messages[i].sender != this.firstSender) {\r\n                    this.secondSender = this.messages[i].sender;\r\n                  } else {\r\n                    this.secondSender = this.messages[i + 1].sender;\r\n                  }\r\n                }\r\n              }*/\r\n            }}\r\n        }, error => console.log('Error ', error),\r\n        () => {\r\n          // Sort Messages Depending On Message Date\r\n          this.messages.sort((a, b) => a.sentDate.localeCompare(b.sentDate));\r\n          console.log('after sort Messages : ', this.messages);\r\n          // Check if the messages is not empty\r\n          if (this.messages.length > 0) {\r\n            this.secondSender = 'admin';\r\n            for (let i = 0; i < this.messages.length - 1; i++) {\r\n              // check if firstSender And secondSender still empty\r\n              if (this.firstSender == null) {\r\n                // Check if the this sender equal to next sender\r\n                if (this.messages[i].sender != this.secondSender) {\r\n                  this.firstSender = this.messages[i].sender;\r\n                }\r\n              }\r\n              /* Second Way If firstSender And SecondSender is Undefined\r\n              if (this.firstSender == null || this.secondSender == null) {\r\n                // Check if the this sender equal to next sender\r\n                if (this.messages[i].sender == this.messages[i + 1].sender) {\r\n                  this.firstSender = this.messages[i].sender;\r\n                } else {\r\n                  // check if this sender not equal to The stored firstSender\r\n                  if (this.messages[i].sender != this.firstSender) {\r\n                    this.secondSender = this.messages[i].sender;\r\n                  } else {\r\n                    this.secondSender = this.messages[i + 1].sender;\r\n                  }\r\n                }\r\n              }*/\r\n            }\r\n            console.log('firstSender : ', this.firstSender);\r\n            console.log('secondSender : ', this.secondSender);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  // Scroll to latest message when messages display\r\n  checkMessageBodyScrollHeight() {\r\n    const elementExists = setInterval(() => {\r\n      const messageBody = this.document.querySelector('.messages-body');\r\n      if (messageBody.scrollHeight > 40) {\r\n        messageBody.scrollTop = messageBody.scrollHeight;\r\n        clearInterval(elementExists);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  checkMessageDirectionForRtl() {\r\n    if (true) {\r\n      const elementExists = setInterval(() => {\r\n        const messageBody = this.document.querySelector('.messages-body');\r\n        if (messageBody.scrollHeight > 40) {\r\n          messageBody.scrollTop = messageBody.scrollHeight;\r\n          clearInterval(elementExists);\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.messageForm.valid) {\r\n      this.toaster.error('Error : Can\\'t Send An Empty Message');\r\n    } else {\r\n      const formMessages = this.messageForm.getRawValue();\r\n      console.log(formMessages);\r\n      if (formMessages.roomId) {\r\n        this.chatService.sendMessage(formMessages.roomId, formMessages.message, 'admin');\r\n      } else {\r\n        this.toaster.error('Error, Please Try Later');\r\n      }\r\n      this.messageForm.reset();\r\n      this.getMessages(formMessages.roomId);\r\n    }\r\n  }\r\n}\r\n","<div class=\"messages\">\r\n    <div class=\"container\">\r\n        <h1 class=\"text-center my-4\">{{'chat-room' | translate}}</h1>\r\n        <div class=\"col-12 col-md-8 mx-auto border mt-4\">\r\n            <div class=\"messages-body my-3 pt-3 p-2\">\r\n                <ng-container *ngFor=\"let message of messages\">\r\n                  <ng-container *ngIf=\"message.sender == firstSender\">\r\n                    <p class=\"col-12 col-sm-11 col-md-10 recieved-message text-white py-1 px-2 rounded bg-light-blue mr-custom-auto\">\r\n                      {{message?.msg ? message.msg : ''}}<br>\r\n                      <span class=\"message-time\">{{message.sentDate | date: 'h:mm a'}}</span>\r\n                    </p>\r\n                  </ng-container>\r\n                    <ng-container *ngIf=\"message.sender == secondSender\">\r\n                        <p class=\"col-12 col-sm-11 col-md-10 recieved-message text-white py-1 px-2 rounded bg-grey-blue ml-custom-auto\">\r\n                            {{message?.msg ? message.msg : ''}}<br>\r\n                            <span class=\"message-time\">{{message.sentDate | date: 'h:mm a'}}</span>\r\n                        </p>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <form [formGroup]=\"messageForm\" class=\"\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"input-group mb-3\">\r\n                    <input type=\"text\" class=\"form-control\" name=\"message\" formControlName=\"message\" placeholder=\"{{'type-here' | translate}}\" aria-label=\"Type here\" aria-describedby=\"basic-addon2\">\r\n                    <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!messageForm.valid\">{{'send' | translate}}</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {interval, Observable, throwError} from 'rxjs';\nimport {AdminConfig} from '../../AdminConfig';\nimport {ChatsResponse} from '../model/chats-response';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\nimport {AngularFirestore, QuerySnapshot} from '@angular/fire/firestore';\nimport {MessageModel} from '../model/message-model';\nimport {TokenService} from '../../admin-service/token/token.service';\nimport {DatePipe} from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatsService {\n\n  constructor(private httpClient: HttpClient,\n              private tokenService: TokenService,\n              private datePipe: DatePipe,\n              private firestore: AngularFirestore) { }\n\n  private static errorHandler(error: HttpErrorResponse) {\n    return throwError(error || 'Server Error');\n  }\n\n  getAllChats(): Observable<ChatsResponse> {\n    return this.httpClient.get<ChatsResponse>(\n      AdminConfig.chatsAPI,\n      this.tokenService.httpOptions()\n    ).pipe(catchError(ChatsService.errorHandler));\n  }\n\n  // This sends the message\n  sendMessage(chatRoomId: string, message: string, clientId: string): void {\n    const chatMsg: MessageModel = {\n      msg: message,\n      sender: clientId,\n      sentDate: this.datePipe.transform(new Date(), 'yyyy-MM-ddTHH:mm:ss', 'TZD').toString()\n    };\n\n    this.firestore.collection('chat_rooms')\n      .doc(chatRoomId)\n      .collection('messages').add(chatMsg);\n  }\n\n  // This Listens to messages changes in the chat room\n  getMessagesObservable(chatRoomId: string): Observable<QuerySnapshot<any>> {\n    if (chatRoomId) {\n      return interval(1000).pipe(\n        startWith(0),\n        switchMap(() => this.firestore.collection('chat_rooms')\n          .doc(chatRoomId).collection('messages').get())\n      );\n    }\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { Chat } from '../model/chat.model';\n\nexport const loadChats = createAction(\n  '[Chat/API] Load Chats'\n);\n\nexport const loadChatsSuccess = createAction(\n  '[Chat/API] Load Chats Success',\n  props<{ Data: any }>()\n);\n\nexport const loadChatsFailure = createAction(\n  '[Chat/API] Load Chats Failure',\n  props<{ error: string }>()\n);\n","import { Injectable } from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {ChatsService} from '../services/chats.service';\nimport * as chatAction from './chat.actions';\nimport {catchError, map, mergeMap} from 'rxjs/operators';\nimport {of} from 'rxjs';\n\n\n@Injectable()\nexport class ChatEffects {\n\n  constructor(private actions$: Actions,\n              private chatService: ChatsService) {}\n\n  loadChats$ = createEffect(() => this.actions$.pipe(\n    ofType(chatAction.loadChats),\n    mergeMap(() => this.chatService.getAllChats()\n      .pipe(\n        map(response => chatAction.loadChatsSuccess(response)),\n        catchError(error => of(chatAction.loadChatsFailure(error)))\n      ))\n  ));\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Chat } from '../model/chat.model';\nimport * as ChatActions from './chat.actions';\n\nexport const chatsFeatureKey = 'chats';\n\nexport interface ChatState extends EntityState<Chat> {\n  // additional entities state properties\n  Data: Chat[];\n  error: string;\n}\n\nexport const adapter: EntityAdapter<Chat> = createEntityAdapter<Chat>();\n\nexport const initialState: ChatState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(ChatActions.loadChatsSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(ChatActions.loadChatsFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  )\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {chatsFeatureKey, ChatState, selectAll} from './chat.reducer';\r\n\r\nconst chatFeatureState = createFeatureSelector<ChatState>(chatsFeatureKey);\r\n\r\nexport const chatsSelector = createSelector(chatFeatureState, selectAll);\r\n"],"sourceRoot":"webpack:///"}