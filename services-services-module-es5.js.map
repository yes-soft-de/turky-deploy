{"version":3,"sources":["webpack:///src/app/pages/services/components/all-services/all-services.component.ts","webpack:///src/app/pages/services/components/all-services/all-services.component.html","webpack:///src/app/pages/services/components/services-details/services-details.component.ts","webpack:///src/app/pages/services/components/services-details/services-details.component.html","webpack:///src/app/pages/services/services-routing.module.ts","webpack:///src/app/pages/services/services.module.ts","webpack:///src/app/pages/services/services/services.service.ts","webpack:///src/app/pages/services/store/service.actions.ts","webpack:///src/app/pages/services/store/service.effects.ts","webpack:///src/app/pages/services/store/service.reducer.ts","webpack:///src/app/pages/services/store/service.selector.ts"],"names":["AllServicesComponent","store","toaster","servicesList","servicesFilterList","isDeleted","dispatch","getAllServices","select","subscribe","allServices","console","log","services","config","itemsPerPage","currentPage","totalItems","length","error","msg","event","serviceId","confirm","id","setTimeout","name","filter","res","userName","username","toLocaleLowerCase","match","title","categoryName","selector","templateUrl","styleUrls","ServicesDetailsComponent","activatedRoute","document","render","serviceCommentsList","rendering","imagesRendering","serviceID","snapshot","paramMap","get","serviceDetails","data","service","comments","Document","routes","path","component","ServicesRoutingModule","forChild","imports","exports","ServicesModule","forFeature","declarations","ServicesService","httpClient","allServicesAPI","servicesAPI","providedIn","loadServices","loadServicesSuccess","loadServicesFailure","loadService","loadServiceSuccess","loadServiceFailure","deleteService","deleteServiceSuccess","deleteServiceFailure","addService","upsertService","addServices","upsertServices","updateService","updateServices","deleteServices","clearServices","ServiceEffects","actions$","loadServices$","pipe","response","Data","loadService$","action","deleteService$","success","servicesFeatureKey","adapter","initialState","getInitialState","undefined","reducer","state","setAll","removeOne","addOne","upsertOne","addMany","upsertMany","updateOne","updateMany","removeMany","ids","removeAll","getSelectors","selectIds","selectEntities","selectAll","selectTotal","ServiceState","allServicesSelector","serviceDetailsSelector"],"mappings":"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","file":"services-services-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { Service } from '../../model/service.model';\nimport * as serviceAction from '../../store/service.actions';\nimport { StateServices } from '../../store/service.reducer';\nimport { allServicesSelector } from '../../store/service.selector';\n\n\n@Component({\n  selector: 'app-all-services',\n  templateUrl: './all-services.component.html',\n  styleUrls: ['./all-services.component.scss']\n})\nexport class AllServicesComponent implements OnInit {\n  services: Service[];\n  servicesList: Service[] = [];\n  servicesFilterList: Service[] = [];                     // We Create It Second For Filter\n  error$: Observable<string>;\n  isDeleted = false;\n  config: any;                                          // Config Variable For Pagination Configuration\n  name: string;\n\n  constructor(private store: Store<StateServices>,\n              private toaster: ToastrService) { }\n\n \n  ngOnInit(): void {\n    this.store.dispatch(serviceAction.loadServices());\n    this.getAllServices();\n  }\n\n  getAllServices() {\n    this.store.select(allServicesSelector).subscribe(\n      (allServices: any) => {\n        if (allServices) {          \n          console.log('all services', allServices);\n          this.services = allServices;\n          this.servicesList = allServices;\n          this.servicesFilterList = this.servicesList;\n          this.isDeleted = false;\n          // pagination config\n          this.config = {\n            itemsPerPage: 5,\n            currentPage: 1,\n            totalItems: this.servicesList.length\n          };\n        }\n      }\n    );\n  }\n\n  // Handle Response Error\n  handleError(error) {\n    console.log('error : ', error);\n    if (error) {\n      if (error.error.error) {\n        this.toaster.error(error.error.error);\n      }\n      if (error.error.msg) {\n        this.toaster.error(error.error.msg);\n      } else {\n        this.toaster.error('Server Error');\n      }\n    }\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  // Delete The Service\n  delete(serviceId: string) {\n    if (confirm('Are You Sure You Want To Delete This Service')) {\n      this.isDeleted = true;\n      this.store.dispatch(serviceAction.deleteService({id: serviceId}));\n      // this.toaster.success('Device Successfully Deleted');\n      setTimeout(() => { this.isDeleted = false; }, 1000);\n    } else {\n      return false;\n    }\n  }\n\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.servicesFilterList = [...this.servicesList];\n    } else {\n      this.servicesFilterList = [];\n      this.servicesFilterList = this.servicesList.filter(res => {\n        if (res.userName) {\n          const username = res.userName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (username) {\n            // display the Name Column\n            return username;\n          }\n        }\n        if (res.title) {\n          const title = res.title.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (title) {\n            // display the Name Column\n            return title;\n          }\n        }\n        if (res.categoryName) {\n          const categoryName = res.categoryName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (categoryName) {\n            // display the Name Column\n            return categoryName;\n          }\n        }\n      });\n    }\n  }\n\n}\n","<div *ngIf=\"services != null\">\n    <div *ngIf=\"services.length !== 0\">\n      <!-- <div class=\"container-fluid\"> -->\n        <h1 class=\"text-center details-title my-4\">{{'manage-services-page' | translate}}</h1>\n          <div class=\"row\">\n              <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\n                  <div class=\"form-group mb-4\">\n                      <input\n                        id=\"exampleFormControlInput2\"\n                        [(ngModel)]=\"name\"\n                        (keyup)=\"applyFilter()\"\n                        type=\"text\"\n                        placeholder=\"{{'service-search-input' | translate}}\"\n                        title=\"{{'service-search-input' | translate}}\"\n                        class=\"form-control form-control-underlined border-primary search-input\">\n                  </div>\n              </div>\n              <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n                <!-- <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/services/add\">\n                  <i class=\"fa fa-plus\"></i>\n                  {{'add-new-car' | translate}}\n                </a> -->\n              </div>\n          </div>\n\n          <!-- reaction: [{reactionCount: number; createdBy: Boolean; }]; -->\n          <!-- userImage:  string; -->\n\n        <div class=\"table-responsive text-center\">\n            <table class=\"table table-bordered main-table\">\n                <tr class=\"bg-dark text-white\">\n                    <td>{{'image' | translate}}</td>\n                    <td>{{'service-title' | translate}}</td>\n                    <td>{{'user-image' | translate}}</td>                \n                    <td style=\"white-space: nowrap;\">{{'username' | translate}}</td>\n                    <td style=\"white-space: nowrap;\">{{'category-name' | translate}}</td>\n                    <td>{{'description' | translate}}</td>\n                    <td style=\"white-space: nowrap;\">{{'comments-number' | translate}}</td>\n                    <td>{{'createdAt' | translate}}</td>\n                    <td>{{'control' | translate}}</td>\n                </tr>\n                <tr *ngFor=\"let service of servicesFilterList | paginate: config\">\n                  <td><img src=\"{{service?.image}}\" alt=\"{{service.brand}} Image\" class=\"img-thumbnail img-custom\"></td>\n                  <td>{{service?.title ? service?.title : '-'}}</td>\n                  <td><img src=\"{{service?.userImage}}\" alt=\"{{service.brand}} Image\" class=\"img-thumbnail img-custom\"></td>\n                  <td>{{service?.userName ? service?.userName : '-'}}</td>\n                  <td>{{service?.categoryName ? service?.categoryName : '-'}}</td>\n                  <td class=\"td-custom\">{{service?.description ? service?.description : '-'}}</td>\n                  <td>{{service?.commentsNumber ? service?.commentsNumber : '-'}}</td>\n                  <td style=\"white-space: nowrap;\">{{service?.createdAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</td>\n                  <!-- <td style=\"white-space: nowrap;\">{{service.yearOfRelease.timestamp * 1000 | date: 'yyyy-MM-dd'}}</td> -->\n                  <!-- <td>\n                    <a (click)=\"suggest(service.id, (service.suggest ? false : true))\"\n                       class=\"text-primary mr-1 mb-1\"\n                       title=\"Change To {{service.suggest ? 'Not Recommended' : 'Recommended' }}\"\n\n                       style=\"cursor: pointer; {{ suggestProgress ? 'pointer-events: none;' : '' }}\">\n                      {{ service.suggest ? 'Recommended' : 'Not Recommended' }}\n                    </a>\n                  </td> -->\n                  <td>\n                      <a routerLink=\"/services/{{service.id}}\" class=\"btn btn-success btn-sm mr-1 mb-1\">\n                        {{'view' | translate}}\n                    </a>\n                    <a (click)=\"delete(service.id)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\n                        {{'delete' | translate}}\n                      </a>\n                  </td>\n                </tr>\n            </table>\n            <pagination-controls class=\"my-pagination\"\n                                 (pageChange)=\"pageChanged($event)\"\n                                 autoHide=\"true\"\n                                 maxSize=\"5\"\n                                 responsive=\"true\"\n                                 previousLabel=\"{{'prev' | translate}}\"\n                                 nextLabel=\"{{'next' | translate}}\"\n                                 screenReaderPaginationLabel=\"Pagination\"\n                                 screenReaderPageLabel=\"page\"\n                                 screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n            </pagination-controls>\n        </div>\n      <!-- </div> -->\n    </div>\n    <!-- <div *ngIf=\"servicesFilterList.length === 0\">\n        <div class=\"container\">\n            <div class=\"alert alert-primary text-center mt-5\">{{'services-not-found' | translate}}</div>\n            <a routerLink=\"/services/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n                <i class=\"fa fa-plus\"></i>\n                {{'add-new-service' | translate}}\n            </a>\n        </div>\n    </div> -->\n</div>\n<div *ngIf=\"services.length === 0\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, OnInit, Renderer2 } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Service } from '../../model/service.model';\nimport { StateServices } from '../../store/service.reducer';\nimport * as stateActions from '../../store/service.actions';\nimport { serviceDetailsSelector } from '../../store/service.selector';\n\n@Component({\n  selector: 'app-services-details',\n  templateUrl: './services-details.component.html',\n  styleUrls: ['./services-details.component.scss']\n})\nexport class ServicesDetailsComponent implements OnInit {\n  service: Service;\n  serviceCommentsList = [];\n  rendering = false;\n  imagesRendering = false;\n  config: any;\n\n  constructor(private store: Store<StateServices>,\n              private activatedRoute: ActivatedRoute,\n              @Inject(DOCUMENT) private document: Document,\n              private render: Renderer2) { }\n\n  ngOnInit(): void {\n    const serviceID = this.activatedRoute.snapshot.paramMap.get('id');\n    this.store.dispatch(stateActions.loadService({ id: serviceID }));\n    this.serviceDetails();\n  }\n\n  // Get service Details\n  serviceDetails() {\n    this.store.select(serviceDetailsSelector).subscribe(\n      data => {\n        if (data) {\n          this.service = data;\n          this.serviceCommentsList = data.comments;\n          console.log(data);\n          this.config = {\n            itemsPerPage: 5,\n            currentPage: 1,\n            totalItems: this.serviceCommentsList.length\n          };\n        }\n    });\n  }\n\n  // viewImage(element: HTMLDivElement) {\n  //   const mainImage = this.document.querySelector('.image-details img');\n  //   const mainImageLink = mainImage.getAttribute('src');\n  //   const currentImage = element.firstChild as HTMLImageElement;\n  //   const currentImageLink = currentImage.getAttribute('src');\n  //   // force user to click on the same image for one time\n  //   // if (mainImageLink != currentImageLink) {\n  //   this.rendering = true;\n  //   this.imagesRendering = true;\n  //   this.render.setAttribute(currentImage, 'src', mainImageLink);\n  //   this.render.setAttribute(mainImage, 'src', currentImageLink);\n  //   // }\n  // }\n\n  // Check If main image is rendering\n  checkImageloaded()  {\n    console.log('main Image rendered');\n    this.rendering = false;\n  }\n\n  // Check if all second images is rendering\n  // checkSecondImagesloaded(customId: number) {\n  //   // check if last second image is rendering finished\n  //   if ((customId + 1) == this.service.images.length) {\n  //     // Check If the main image is rendering finish\n  //     if (!this.render) {\n  //       console.log('rendering all image');\n  //       this.imagesRendering = false;\n  //     }\n  //   }\n  // }\n\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n}\n","<div class=\"service-details\" *ngIf=\"service\">\n    <div class=\"container\">\n      <h1 class=\"my-3 details-title\">{{'service-details-page' | translate}}</h1>\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-5 col-md-4 position-relative mx-auto text-center mb-3\">\n          <div class=\"image-details mb-3\">\n            <img class=\"img-fluid img-thumbnail\" src=\"{{service?.image}}\" alt=\"{{service?.title}} Image\" />\n          </div>\n  <!--        <div class=\"row w-100 mx-auto\" *ngIf=\"service.images.length != 0\">-->\n  <!--          <div class=\"col-4 mx-auto px-0 mb-1\" *ngFor=\"let img of service.images; let i = index\">-->\n  <!--            <div #secondImageDetails class=\"second-images-details\"  (click)=\"viewImage(secondImageDetails)\">-->\n  <!--              <img (load)=\"checkSecondImagesloaded(i)\" class=\"img-responsive\" src=\"{{img?.image}}\" (error)=\"img.image = '../../../../../assets/default-Item.jpg'\" alt=\"Second Images\" />-->\n  <!--            </div>-->\n  <!--          </div>-->\n  <!--        </div>-->\n  <!--        <div class=\"overlay\" *ngIf=\"rendering\">-->\n  <!--          <div class=\"overlay-lds-ring\"><div></div><div></div><div></div><div></div></div>-->\n  <!--        </div>-->\n        </div>\n        <div class=\"col-12 col-sm-6 mx-auto\">\n          <div class=\"info-details\">\n            <ul class=\"list-unstyled\">\n              <li>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <h4 class=\"text-info\">{{service?.title}}</h4>\n                  </div>\n                  <!-- <div *ngIf=\"service?.status\" class=\"col align-self-center text-right\">\n                    <span class=\"status border border-secondary rounded py-1 px-2\">{{service?.status | translate}}</span>\n                  </div> -->\n                </div>\n              </li>\n             <li class=\"my-2\">\n               <div class=\"row\">\n                 <div class=\"col-4 col-xl-3 text-center\">\n                   <img class=\"img-fluid img-thumbnail\" src=\"{{service?.userImage}}\" alt=\"{{service?.userName}} Image\" />\n                 </div>\n                 <div class=\"col-7 align-self-center\">\n                   <h4 class=\"mb-2 text-secondary\">{{service?.userName}}</h4>\n                 </div>\n               </div>\n             </li>\n  <!--              myOrders: [-->\n  <!--                {-->\n  \n  <!--              }-->\n  <!--              ];-->\n              <!-- <li class=\"mb-2\" *ngIf=\"service?.language\">\n                <p>{{'language' | translate }} :\n                  <span class=\"m-1 px-1 rounded bg-grey-blue text-white\" *ngFor=\"let lang of service?.language\">{{lang}}</span>\n                </p>\n              </li>\n              <li class=\"mb-2\" *ngIf=\"service?.cities\">\n                <p>{{'city' | translate }} :\n                  <span class=\"m-1 px-1 rounded border border-primary d-block\" *ngFor=\"let city of service?.cities\">{{city}}</span>\n                </p>\n              </li> -->\n  <!--            <li *ngIf=\"service?.regions\">-->\n  <!--              <p class=\"mb-2\">{{'regions' | translate }} :-->\n  <!--                <span class=\"{{region?.name ? 'm-1 px-1 rounded border border-primary' : null}}\" *ngFor=\"let region of service?.regions\">{{region?.name ? region?.name : null}}</span>-->\n  <!--              </p>-->\n  <!--            </li>-->\n              <li class=\"mb-2\" *ngIf=\"service?.type\"><p>{{'type' | translate }} : <span class=\"text-secondary\">{{service?.type}}</span></p></li>\n              <li class=\"mb-2\" *ngIf=\"service?.createdAt\"><p>{{'createdAt' | translate }} : <span class=\"text-secondary\">{{service?.createdAt.timestamp * 1000 | date}}</span></p></li>\n              <li class=\"mb-2\" *ngIf=\"service?.updatedAt\"><p>{{'updatedAt' | translate }} : <span class=\"text-secondary\">{{service?.updatedAt.timestamp * 1000 | date}}</span></p></li>\n              <li class=\"mb-2\" *ngIf=\"service?.description\"><p>{{'description' | translate }} : <span class=\"text-secondary\">{{service?.description}}</span></p></li>\n            </ul>\n          </div><!--.info-details-->\n        </div><!--.col-12-->\n        <div class=\"col-12\">\n            <hr class=\"w-50 mx-auto\">\n          </div>  \n          <div class=\"col-12\" *ngIf=\"serviceCommentsList.length > 0\">\n            <h3 class=\"\">{{'comments' | translate}} :</h3>\n          </div>\n          <div class=\"card col-12 px-0\" *ngIf=\"serviceCommentsList.length > 0\">\n            <div class=\"card-header\">\n              <!-- <h1 class=\"text-center details-title my-4\">{{'manage-comment-page' | translate}}</h1> -->\n            </div>\n            <div class=\"card-body p-2\">\n              <div class=\"messages-body my-3 pt-3 p-2\">\n                <div class=\"comment-block\" *ngFor=\"let comment of serviceCommentsList | paginate: config\">\n                  <div class=\"row\">\n                    <div class=\"col-2 col-lg-1 text-center pr-0 align-self-center\">\n                      <div class=\"user-img\">\n                        <img class=\"res-image\"\n                            src=\"{{comment?.image ? comment?.image :  '../../../../../assets/default-avatar.jpg'}}\"\n                            alt=\"\"/>\n                      </div>\n                    </div>\n                    <div class=\"col-10 col-lg-11 mt-2 mt-sm-0\">\n                      <div class=\"comment-body py-2 px-3\">\n                        <div class=\"time\">\n                          <span class=\"pb-1\">{{comment?.userName}} {{comment?.createdAt != null ? '( ' + (comment?.createdAt.timestamp * 1000 | date: 'medium') + ' )' : ''}}</span>\n                        </div>\n                       <p class=\"comment m-0\">\n                         {{comment?.comment}}\n                       </p>\n                      </div>\n                    </div>\n                  </div><!--.row-->\n                </div><!--.comment-block-->\n              </div><!--.messages-body-->\n            </div><!--.card-body-->\n            <div class=\"card-footer text-center\">\n              <pagination-controls (pageChange)=\"pageChanged($event)\"\n                                   autoHide=\"true\"\n                                   maxSize=\"5\"\n                                   responsive=\"true\"\n                                   previousLabel=\"{{'prev' | translate}}\"\n                                   nextLabel=\"{{'next' | translate}}\"\n                                   screenReaderPaginationLabel=\"Pagination\"\n                                   screenReaderPageLabel=\"page\"\n                                   screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n              </pagination-controls>\n            </div><!--.card-footer-->\n          </div><!--.card-->\n    \n      </div><!--.row-->\n    </div>\n  </div>\n  <div *ngIf=\"!service\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllServicesComponent } from './components/all-services/all-services.component';\nimport { ServicesDetailsComponent } from './components/services-details/services-details.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AllServicesComponent },\n  { path: ':id', component: ServicesDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ServicesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from 'src/app/@theme/theme.module';\n\nimport { ServicesRoutingModule } from './services-routing.module';\nimport { AllServicesComponent } from './components/all-services/all-services.component';\nimport { ServicesDetailsComponent } from './components/services-details/services-details.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromService from './store/service.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ServiceEffects } from './store/service.effects';\n\n\n@NgModule({\n  declarations: [AllServicesComponent, ServicesDetailsComponent],\n  imports: [\n    ThemeModule,\n    ServicesRoutingModule,\n    StoreModule.forFeature(fromService.servicesFeatureKey, fromService.reducer),\n    EffectsModule.forFeature([ServiceEffects])\n  ]\n})\nexport class ServicesModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AdminConfig } from '../../AdminConfig';\nimport { ServiceDetailsResponse } from '../model/service-details-response';\nimport { ServicesResponse } from '../model/service-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  allServices(): Observable<ServicesResponse> {\n    return this.httpClient.get<ServicesResponse>(AdminConfig.allServicesAPI);\n  }\n\n  \n  serviceDetails(serviceId : string): Observable<ServiceDetailsResponse> {\n    return this.httpClient.get<ServiceDetailsResponse>(`${AdminConfig.servicesAPI}/${serviceId}`);\n  }\n\n  deleteService(serviceId : string): Observable<any> {\n    return this.httpClient.delete<any>(`${AdminConfig.servicesAPI}/${serviceId}`);\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { Service } from '../model/service.model';\n\nexport const loadServices = createAction(\n  '[Service/API] Load Services'\n);\n\nexport const loadServicesSuccess = createAction(\n  '[Service/API] Load Services Success', \n  props<{ services: Service[] }>()\n);\n\nexport const loadServicesFailure = createAction(\n  '[Service/API] Load Services Failure', \n  props<{ error: string }>()\n);\n\nexport const loadService = createAction(\n  '[Service/API] Load Service',\n  props<{ id: string }>()\n);\n\nexport const loadServiceSuccess = createAction(\n  '[Service/API] Load Service Success', \n  props<{ service: Service }>()\n);\n\nexport const loadServiceFailure = createAction(\n  '[Service/API] Load Service Failure', \n  props<{ error: string }>()\n);\n\nexport const deleteService = createAction(\n  '[Service/API] Delete Service',\n  props<{ id: string }>()\n);\n\nexport const deleteServiceSuccess = createAction(\n  '[Service/API] Delete Service Success',\n  props<{ id: string }>()\n);\n\nexport const deleteServiceFailure = createAction(\n  '[Service/API] Delete Service Failure',\n  props<{ error: string }>()\n);\n\n\nexport const addService = createAction(\n  '[Service/API] Add Service',\n  props<{ service: Service }>()\n);\n\nexport const upsertService = createAction(\n  '[Service/API] Upsert Service',\n  props<{ service: Service }>()\n);\n\nexport const addServices = createAction(\n  '[Service/API] Add Services',\n  props<{ services: Service[] }>()\n);\n\nexport const upsertServices = createAction(\n  '[Service/API] Upsert Services',\n  props<{ services: Service[] }>()\n);\n\nexport const updateService = createAction(\n  '[Service/API] Update Service',\n  props<{ service: Update<Service> }>()\n);\n\nexport const updateServices = createAction(\n  '[Service/API] Update Services',\n  props<{ services: Update<Service>[] }>()\n);\n\n\nexport const deleteServices = createAction(\n  '[Service/API] Delete Services',\n  props<{ ids: string[] }>()\n);\n\nexport const clearServices = createAction(\n  '[Service/API] Clear Services'\n);\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ToastrService } from 'ngx-toastr';\nimport { create } from 'node:domain';\nimport { of } from 'rxjs';\nimport { catchError, exhaustMap, map, switchMap } from 'rxjs/operators';\nimport { ServicesService } from '../services/services.service';\nimport * as serviceActions from './service.actions';\n\n\n@Injectable()\nexport class ServiceEffects {\n\n\n\n  constructor(private actions$: Actions,\n              private services: ServicesService,\n              private toaster: ToastrService) {}\n\n  loadServices$ = createEffect(() => this.actions$.pipe(\n    ofType(serviceActions.loadServices),\n    switchMap(() => this.services.allServices()\n      .pipe(\n        map(response => {\n          console.log('response : ', response);\n          return serviceActions.loadServicesSuccess({services: response.Data});\n        }),\n        catchError(error => {\n          console.log('error : ', error);\n          return of(serviceActions.loadServicesFailure({error}))\n        })\n      ))\n  ));\n\n  loadService$ = createEffect(() => this.actions$.pipe(\n    ofType(serviceActions.loadService),\n    switchMap(action => this.services.serviceDetails(action.id)\n      .pipe(\n        map((response: any) => {\n          return serviceActions.loadServiceSuccess({service: response.Data});\n        }),\n        catchError(error => {\n          console.log('error : ', error);\n          return of(serviceActions.loadServiceFailure({error}))\n        })\n      ))\n  ));\n  \n  deleteService$ = createEffect(() => this.actions$.pipe(\n    ofType(serviceActions.deleteService),\n    exhaustMap(action => this.services.deleteService(action.id)\n      .pipe(\n        map((response: any) => {\n          this.toaster.success(response.msg);\n          return serviceActions.deleteServiceSuccess({id: action.id});\n        }),\n        catchError(error => {\n          console.log('error : ', error);\n          return of(serviceActions.deleteServiceFailure({error}))\n        })\n      ))\n  ), { dispatch: false });\n\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Service } from '../model/service.model';\nimport * as ServiceActions from './service.actions';\n\nexport const servicesFeatureKey = 'services';\n\nexport interface StateServices extends EntityState<Service> {\n  // additional entities state properties\n  Data: Service[];\n  serviceDetails: Service;\n}\n\nexport const adapter: EntityAdapter<Service> = createEntityAdapter<Service>();\n\nexport const initialState: StateServices = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  serviceDetails: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,  \n  on(ServiceActions.loadServicesSuccess,\n    (state, action) => adapter.setAll(action.services, state)\n  ),\n  on(ServiceActions.loadServiceSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        serviceDetails: action.service\n      };\n    }\n  ),\n  on(ServiceActions.deleteServiceSuccess,\n    (state, action) => adapter.removeOne(action.id, state)\n  ),\n\n  on(ServiceActions.addService,\n    (state, action) => adapter.addOne(action.service, state)\n  ),\n  on(ServiceActions.upsertService,\n    (state, action) => adapter.upsertOne(action.service, state)\n  ),\n  on(ServiceActions.addServices,\n    (state, action) => adapter.addMany(action.services, state)\n  ),\n  on(ServiceActions.upsertServices,\n    (state, action) => adapter.upsertMany(action.services, state)\n  ),\n  on(ServiceActions.updateService,\n    (state, action) => adapter.updateOne(action.service, state)\n  ),\n  on(ServiceActions.updateServices,\n    (state, action) => adapter.updateMany(action.services, state)\n  ),\n  on(ServiceActions.deleteServices,\n    (state, action) => adapter.removeMany(action.ids, state)\n  ),\n  on(ServiceActions.clearServices,\n    state => adapter.removeAll(state)\n  ),\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { selectAll, servicesFeatureKey, StateServices } from \"./service.reducer\";\r\n\r\nconst ServiceState = createFeatureSelector(servicesFeatureKey);\r\n\r\nexport const allServicesSelector = createSelector(ServiceState, selectAll);\r\n\r\nexport const serviceDetailsSelector = createSelector(ServiceState, (state: StateServices) => state.serviceDetails);\r\n\r\n"]}