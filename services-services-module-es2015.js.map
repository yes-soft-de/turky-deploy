{"version":3,"sources":["./src/app/pages/services/components/all-services/all-services.component.ts","./src/app/pages/services/components/all-services/all-services.component.html","./src/app/pages/services/components/services-details/services-details.component.ts","./src/app/pages/services/components/services-details/services-details.component.html","./src/app/pages/services/services-routing.module.ts","./src/app/pages/services/services.module.ts","./src/app/pages/services/services/services.service.ts","./src/app/pages/services/store/service.actions.ts","./src/app/pages/services/store/service.effects.ts","./src/app/pages/services/store/service.reducer.ts","./src/app/pages/services/store/service.selector.ts"],"names":[],"mappings":"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","file":"services-services-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { Service } from '../../model/service.model';\nimport * as serviceAction from '../../store/service.actions';\nimport { StateServices } from '../../store/service.reducer';\nimport { allServicesSelector } from '../../store/service.selector';\n\n\n@Component({\n  selector: 'app-all-services',\n  templateUrl: './all-services.component.html',\n  styleUrls: ['./all-services.component.scss']\n})\nexport class AllServicesComponent implements OnInit {\n  services: Service[];\n  servicesList: Service[] = [];\n  servicesFilterList: Service[] = [];                     // We Create It Second For Filter\n  error$: Observable<string>;\n  isDeleted = false;\n  config: any;                                          // Config Variable For Pagination Configuration\n  name: string;\n\n  constructor(private store: Store<StateServices>,\n              private toaster: ToastrService) { }\n\n \n  ngOnInit(): void {\n    this.store.dispatch(serviceAction.loadServices());\n    this.getAllServices();\n  }\n\n  getAllServices() {\n    this.store.select(allServicesSelector).subscribe(\n      (allServices: any) => {\n        if (allServices) {          \n          console.log('all services', allServices);\n          this.services = allServices;\n          this.servicesList = allServices;\n          this.servicesFilterList = this.servicesList;\n          this.isDeleted = false;\n          // pagination config\n          this.config = {\n            itemsPerPage: 5,\n            currentPage: 1,\n            totalItems: this.servicesList.length\n          };\n        }\n      }\n    );\n  }\n\n  // Handle Response Error\n  handleError(error) {\n    console.log('error : ', error);\n    if (error) {\n      if (error.error.error) {\n        this.toaster.error(error.error.error);\n      }\n      if (error.error.msg) {\n        this.toaster.error(error.error.msg);\n      } else {\n        this.toaster.error('Server Error');\n      }\n    }\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  // Delete The Service\n  delete(serviceId: string) {\n    if (confirm('Are You Sure You Want To Delete This Service')) {\n      this.isDeleted = true;\n      this.store.dispatch(serviceAction.deleteService({id: serviceId}));\n      // this.toaster.success('Device Successfully Deleted');\n      setTimeout(() => { this.isDeleted = false; }, 1000);\n    } else {\n      return false;\n    }\n  }\n\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.servicesFilterList = [...this.servicesList];\n    } else {\n      this.servicesFilterList = [];\n      this.servicesFilterList = this.servicesList.filter(res => {\n        if (res.userName) {\n          const username = res.userName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (username) {\n            // display the Name Column\n            return username;\n          }\n        }\n        if (res.title) {\n          const title = res.title.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (title) {\n            // display the Name Column\n            return title;\n          }\n        }\n        if (res.categoryName) {\n          const categoryName = res.categoryName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (categoryName) {\n            // display the Name Column\n            return categoryName;\n          }\n        }\n      });\n    }\n  }\n\n}\n","<div *ngIf=\"services != null\">\n    <div *ngIf=\"services.length !== 0\">\n      <!-- <div class=\"container-fluid\"> -->\n        <h1 class=\"text-center details-title my-4\">{{'manage-services-page' | translate}}</h1>\n          <div class=\"row\">\n              <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\n                  <div class=\"form-group mb-4\">\n                      <input\n                        id=\"exampleFormControlInput2\"\n                        [(ngModel)]=\"name\"\n                        (keyup)=\"applyFilter()\"\n                        type=\"text\"\n                        placeholder=\"{{'service-search-input' | translate}}\"\n                        title=\"{{'service-search-input' | translate}}\"\n                        class=\"form-control form-control-underlined border-primary search-input\">\n                  </div>\n              </div>\n              <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n                <!-- <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/services/add\">\n                  <i class=\"fa fa-plus\"></i>\n                  {{'add-new-car' | translate}}\n                </a> -->\n              </div>\n          </div>\n\n          <!-- reaction: [{reactionCount: number; createdBy: Boolean; }]; -->\n          <!-- userImage:  string; -->\n\n        <div class=\"table-responsive text-center\">\n            <table class=\"table table-bordered main-table\">\n                <tr class=\"bg-dark text-white\">\n                    <td>{{'image' | translate}}</td>\n                    <td>{{'service-title' | translate}}</td>\n                    <td>{{'user-image' | translate}}</td>                \n                    <td style=\"white-space: nowrap;\">{{'username' | translate}}</td>\n                    <td style=\"white-space: nowrap;\">{{'category-name' | translate}}</td>\n                    <td>{{'description' | translate}}</td>\n                    <td style=\"white-space: nowrap;\">{{'comments-number' | translate}}</td>\n                    <td>{{'createdAt' | translate}}</td>\n                    <td>{{'control' | translate}}</td>\n                </tr>\n                <tr *ngFor=\"let service of servicesFilterList | paginate: config\">\n                  <td><img src=\"{{service?.image}}\" alt=\"{{service.brand}} Image\" class=\"img-thumbnail img-custom\"></td>\n                  <td>{{service?.title ? service?.title : '-'}}</td>\n                  <td><img src=\"{{service?.userImage}}\" alt=\"{{service.brand}} Image\" class=\"img-thumbnail img-custom\"></td>\n                  <td>{{service?.userName ? service?.userName : '-'}}</td>\n                  <td>{{service?.categoryName ? service?.categoryName : '-'}}</td>\n                  <td class=\"td-custom\">{{service?.description ? service?.description : '-'}}</td>\n                  <td>{{service?.commentsNumber ? service?.commentsNumber : '-'}}</td>\n                  <td style=\"white-space: nowrap;\">{{service?.createdAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</td>\n                  <!-- <td style=\"white-space: nowrap;\">{{service.yearOfRelease.timestamp * 1000 | date: 'yyyy-MM-dd'}}</td> -->\n                  <!-- <td>\n                    <a (click)=\"suggest(service.id, (service.suggest ? false : true))\"\n                       class=\"text-primary mr-1 mb-1\"\n                       title=\"Change To {{service.suggest ? 'Not Recommended' : 'Recommended' }}\"\n\n                       style=\"cursor: pointer; {{ suggestProgress ? 'pointer-events: none;' : '' }}\">\n                      {{ service.suggest ? 'Recommended' : 'Not Recommended' }}\n                    </a>\n                  </td> -->\n                  <td>\n                      <a routerLink=\"/services/{{service.id}}\" class=\"btn btn-success btn-sm mr-1 mb-1\">\n                        {{'view' | translate}}\n                    </a>\n                    <a (click)=\"delete(service.id)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\n                        {{'delete' | translate}}\n                      </a>\n                  </td>\n                </tr>\n            </table>\n            <pagination-controls class=\"my-pagination\"\n                                 (pageChange)=\"pageChanged($event)\"\n                                 autoHide=\"true\"\n                                 maxSize=\"5\"\n                                 responsive=\"true\"\n                                 previousLabel=\"{{'prev' | translate}}\"\n                                 nextLabel=\"{{'next' | translate}}\"\n                                 screenReaderPaginationLabel=\"Pagination\"\n                                 screenReaderPageLabel=\"page\"\n                                 screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n            </pagination-controls>\n        </div>\n      <!-- </div> -->\n    </div>\n    <!-- <div *ngIf=\"servicesFilterList.length === 0\">\n        <div class=\"container\">\n            <div class=\"alert alert-primary text-center mt-5\">{{'services-not-found' | translate}}</div>\n            <a routerLink=\"/services/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n                <i class=\"fa fa-plus\"></i>\n                {{'add-new-service' | translate}}\n            </a>\n        </div>\n    </div> -->\n</div>\n<div *ngIf=\"services.length === 0\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, OnInit, Renderer2 } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Service } from '../../model/service.model';\nimport { StateServices } from '../../store/service.reducer';\nimport * as stateActions from '../../store/service.actions';\nimport { serviceDetailsSelector } from '../../store/service.selector';\n\n@Component({\n  selector: 'app-services-details',\n  templateUrl: './services-details.component.html',\n  styleUrls: ['./services-details.component.scss']\n})\nexport class ServicesDetailsComponent implements OnInit {\n  service: Service;\n  serviceCommentsList = [];\n  rendering = false;\n  imagesRendering = false;\n  config: any;\n\n  constructor(private store: Store<StateServices>,\n              private activatedRoute: ActivatedRoute,\n              @Inject(DOCUMENT) private document: Document,\n              private render: Renderer2) { }\n\n  ngOnInit(): void {\n    const serviceID = this.activatedRoute.snapshot.paramMap.get('id');\n    this.store.dispatch(stateActions.loadService({ id: serviceID }));\n    this.serviceDetails();\n  }\n\n  // Get service Details\n  serviceDetails() {\n    this.store.select(serviceDetailsSelector).subscribe(\n      data => {\n        if (data) {\n          this.service = data;\n          this.serviceCommentsList = data.comments;\n          console.log(data);\n          this.config = {\n            itemsPerPage: 5,\n            currentPage: 1,\n            totalItems: this.serviceCommentsList.length\n          };\n        }\n    });\n  }\n\n  // viewImage(element: HTMLDivElement) {\n  //   const mainImage = this.document.querySelector('.image-details img');\n  //   const mainImageLink = mainImage.getAttribute('src');\n  //   const currentImage = element.firstChild as HTMLImageElement;\n  //   const currentImageLink = currentImage.getAttribute('src');\n  //   // force user to click on the same image for one time\n  //   // if (mainImageLink != currentImageLink) {\n  //   this.rendering = true;\n  //   this.imagesRendering = true;\n  //   this.render.setAttribute(currentImage, 'src', mainImageLink);\n  //   this.render.setAttribute(mainImage, 'src', currentImageLink);\n  //   // }\n  // }\n\n  // Check If main image is rendering\n  checkImageloaded()  {\n    console.log('main Image rendered');\n    this.rendering = false;\n  }\n\n  // Check if all second images is rendering\n  // checkSecondImagesloaded(customId: number) {\n  //   // check if last second image is rendering finished\n  //   if ((customId + 1) == this.service.images.length) {\n  //     // Check If the main image is rendering finish\n  //     if (!this.render) {\n  //       console.log('rendering all image');\n  //       this.imagesRendering = false;\n  //     }\n  //   }\n  // }\n\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n}\n","<div class=\"service-details\" *ngIf=\"service\">\n    <div class=\"container\">\n      <h1 class=\"my-3 details-title\">{{'service-details-page' | translate}}</h1>\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-5 col-md-4 position-relative mx-auto text-center mb-3\">\n          <div class=\"image-details mb-3\">\n            <img class=\"img-fluid img-thumbnail\" src=\"{{service?.image}}\" alt=\"{{service?.title}} Image\" />\n          </div>\n  <!--        <div class=\"row w-100 mx-auto\" *ngIf=\"service.images.length != 0\">-->\n  <!--          <div class=\"col-4 mx-auto px-0 mb-1\" *ngFor=\"let img of service.images; let i = index\">-->\n  <!--            <div #secondImageDetails class=\"second-images-details\"  (click)=\"viewImage(secondImageDetails)\">-->\n  <!--              <img (load)=\"checkSecondImagesloaded(i)\" class=\"img-responsive\" src=\"{{img?.image}}\" (error)=\"img.image = '../../../../../assets/default-Item.jpg'\" alt=\"Second Images\" />-->\n  <!--            </div>-->\n  <!--          </div>-->\n  <!--        </div>-->\n  <!--        <div class=\"overlay\" *ngIf=\"rendering\">-->\n  <!--          <div class=\"overlay-lds-ring\"><div></div><div></div><div></div><div></div></div>-->\n  <!--        </div>-->\n        </div>\n        <div class=\"col-12 col-sm-6 mx-auto\">\n          <div class=\"info-details\">\n            <ul class=\"list-unstyled\">\n              <li>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <h4 class=\"text-info\">{{service?.title}}</h4>\n                  </div>\n                  <!-- <div *ngIf=\"service?.status\" class=\"col align-self-center text-right\">\n                    <span class=\"status border border-secondary rounded py-1 px-2\">{{service?.status | translate}}</span>\n                  </div> -->\n                </div>\n              </li>\n             <li class=\"my-2\">\n               <div class=\"row\">\n                 <div class=\"col-4 col-xl-3 text-center\">\n                   <img class=\"img-fluid img-thumbnail\" src=\"{{service?.userImage}}\" alt=\"{{service?.userName}} Image\" />\n                 </div>\n                 <div class=\"col-7 align-self-center\">\n                   <h4 class=\"mb-2 text-secondary\">{{service?.userName}}</h4>\n                 </div>\n               </div>\n             </li>\n  <!--              myOrders: [-->\n  <!--                {-->\n  \n  <!--              }-->\n  <!--              ];-->\n              <!-- <li class=\"mb-2\" *ngIf=\"service?.language\">\n                <p>{{'language' | translate }} :\n                  <span class=\"m-1 px-1 rounded bg-grey-blue text-white\" *ngFor=\"let lang of service?.language\">{{lang}}</span>\n                </p>\n              </li>\n              <li class=\"mb-2\" *ngIf=\"service?.cities\">\n                <p>{{'city' | translate }} :\n                  <span class=\"m-1 px-1 rounded border border-primary d-block\" *ngFor=\"let city of service?.cities\">{{city}}</span>\n                </p>\n              </li> -->\n  <!--            <li *ngIf=\"service?.regions\">-->\n  <!--              <p class=\"mb-2\">{{'regions' | translate }} :-->\n  <!--                <span class=\"{{region?.name ? 'm-1 px-1 rounded border border-primary' : null}}\" *ngFor=\"let region of service?.regions\">{{region?.name ? region?.name : null}}</span>-->\n  <!--              </p>-->\n  <!--            </li>-->\n              <li class=\"mb-2\" *ngIf=\"service?.type\"><p>{{'type' | translate }} : <span class=\"text-secondary\">{{service?.type}}</span></p></li>\n              <li class=\"mb-2\" *ngIf=\"service?.createdAt\"><p>{{'createdAt' | translate }} : <span class=\"text-secondary\">{{service?.createdAt.timestamp * 1000 | date}}</span></p></li>\n              <li class=\"mb-2\" *ngIf=\"service?.updatedAt\"><p>{{'updatedAt' | translate }} : <span class=\"text-secondary\">{{service?.updatedAt.timestamp * 1000 | date}}</span></p></li>\n              <li class=\"mb-2\" *ngIf=\"service?.description\"><p>{{'description' | translate }} : <span class=\"text-secondary\">{{service?.description}}</span></p></li>\n            </ul>\n          </div><!--.info-details-->\n        </div><!--.col-12-->\n        <div class=\"col-12\">\n            <hr class=\"w-50 mx-auto\">\n          </div>  \n          <div class=\"col-12\" *ngIf=\"serviceCommentsList.length > 0\">\n            <h3 class=\"\">{{'comments' | translate}} :</h3>\n          </div>\n          <div class=\"card col-12 px-0\" *ngIf=\"serviceCommentsList.length > 0\">\n            <div class=\"card-header\">\n              <!-- <h1 class=\"text-center details-title my-4\">{{'manage-comment-page' | translate}}</h1> -->\n            </div>\n            <div class=\"card-body p-2\">\n              <div class=\"messages-body my-3 pt-3 p-2\">\n                <div class=\"comment-block\" *ngFor=\"let comment of serviceCommentsList | paginate: config\">\n                  <div class=\"row\">\n                    <div class=\"col-2 col-lg-1 text-center pr-0 align-self-center\">\n                      <div class=\"user-img\">\n                        <img class=\"res-image\"\n                            src=\"{{comment?.image ? comment?.image :  '../../../../../assets/default-avatar.jpg'}}\"\n                            alt=\"\"/>\n                      </div>\n                    </div>\n                    <div class=\"col-10 col-lg-11 mt-2 mt-sm-0\">\n                      <div class=\"comment-body py-2 px-3\">\n                        <div class=\"time\">\n                          <span class=\"pb-1\">{{comment?.userName}} {{comment?.createdAt != null ? '( ' + (comment?.createdAt.timestamp * 1000 | date: 'medium') + ' )' : ''}}</span>\n                        </div>\n                       <p class=\"comment m-0\">\n                         {{comment?.comment}}\n                       </p>\n                      </div>\n                    </div>\n                  </div><!--.row-->\n                </div><!--.comment-block-->\n              </div><!--.messages-body-->\n            </div><!--.card-body-->\n            <div class=\"card-footer text-center\">\n              <pagination-controls (pageChange)=\"pageChanged($event)\"\n                                   autoHide=\"true\"\n                                   maxSize=\"5\"\n                                   responsive=\"true\"\n                                   previousLabel=\"{{'prev' | translate}}\"\n                                   nextLabel=\"{{'next' | translate}}\"\n                                   screenReaderPaginationLabel=\"Pagination\"\n                                   screenReaderPageLabel=\"page\"\n                                   screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n              </pagination-controls>\n            </div><!--.card-footer-->\n          </div><!--.card-->\n    \n      </div><!--.row-->\n    </div>\n  </div>\n  <div *ngIf=\"!service\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllServicesComponent } from './components/all-services/all-services.component';\nimport { ServicesDetailsComponent } from './components/services-details/services-details.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AllServicesComponent },\n  { path: ':id', component: ServicesDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ServicesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from 'src/app/@theme/theme.module';\n\nimport { ServicesRoutingModule } from './services-routing.module';\nimport { AllServicesComponent } from './components/all-services/all-services.component';\nimport { ServicesDetailsComponent } from './components/services-details/services-details.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromService from './store/service.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ServiceEffects } from './store/service.effects';\n\n\n@NgModule({\n  declarations: [AllServicesComponent, ServicesDetailsComponent],\n  imports: [\n    ThemeModule,\n    ServicesRoutingModule,\n    StoreModule.forFeature(fromService.servicesFeatureKey, fromService.reducer),\n    EffectsModule.forFeature([ServiceEffects])\n  ]\n})\nexport class ServicesModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AdminConfig } from '../../AdminConfig';\nimport { ServiceDetailsResponse } from '../model/service-details-response';\nimport { ServicesResponse } from '../model/service-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  allServices(): Observable<ServicesResponse> {\n    return this.httpClient.get<ServicesResponse>(AdminConfig.allServicesAPI);\n  }\n\n  \n  serviceDetails(serviceId : string): Observable<ServiceDetailsResponse> {\n    return this.httpClient.get<ServiceDetailsResponse>(`${AdminConfig.servicesAPI}/${serviceId}`);\n  }\n\n  deleteService(serviceId : string): Observable<any> {\n    return this.httpClient.delete<any>(`${AdminConfig.servicesAPI}/${serviceId}`);\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { Service } from '../model/service.model';\n\nexport const loadServices = createAction(\n  '[Service/API] Load Services'\n);\n\nexport const loadServicesSuccess = createAction(\n  '[Service/API] Load Services Success', \n  props<{ services: Service[] }>()\n);\n\nexport const loadServicesFailure = createAction(\n  '[Service/API] Load Services Failure', \n  props<{ error: string }>()\n);\n\nexport const loadService = createAction(\n  '[Service/API] Load Service',\n  props<{ id: string }>()\n);\n\nexport const loadServiceSuccess = createAction(\n  '[Service/API] Load Service Success', \n  props<{ service: Service }>()\n);\n\nexport const loadServiceFailure = createAction(\n  '[Service/API] Load Service Failure', \n  props<{ error: string }>()\n);\n\nexport const deleteService = createAction(\n  '[Service/API] Delete Service',\n  props<{ id: string }>()\n);\n\nexport const deleteServiceSuccess = createAction(\n  '[Service/API] Delete Service Success',\n  props<{ id: string }>()\n);\n\nexport const deleteServiceFailure = createAction(\n  '[Service/API] Delete Service Failure',\n  props<{ error: string }>()\n);\n\n\nexport const addService = createAction(\n  '[Service/API] Add Service',\n  props<{ service: Service }>()\n);\n\nexport const upsertService = createAction(\n  '[Service/API] Upsert Service',\n  props<{ service: Service }>()\n);\n\nexport const addServices = createAction(\n  '[Service/API] Add Services',\n  props<{ services: Service[] }>()\n);\n\nexport const upsertServices = createAction(\n  '[Service/API] Upsert Services',\n  props<{ services: Service[] }>()\n);\n\nexport const updateService = createAction(\n  '[Service/API] Update Service',\n  props<{ service: Update<Service> }>()\n);\n\nexport const updateServices = createAction(\n  '[Service/API] Update Services',\n  props<{ services: Update<Service>[] }>()\n);\n\n\nexport const deleteServices = createAction(\n  '[Service/API] Delete Services',\n  props<{ ids: string[] }>()\n);\n\nexport const clearServices = createAction(\n  '[Service/API] Clear Services'\n);\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ToastrService } from 'ngx-toastr';\nimport { create } from 'node:domain';\nimport { of } from 'rxjs';\nimport { catchError, exhaustMap, map, switchMap } from 'rxjs/operators';\nimport { ServicesService } from '../services/services.service';\nimport * as serviceActions from './service.actions';\n\n\n@Injectable()\nexport class ServiceEffects {\n\n\n\n  constructor(private actions$: Actions,\n              private services: ServicesService,\n              private toaster: ToastrService) {}\n\n  loadServices$ = createEffect(() => this.actions$.pipe(\n    ofType(serviceActions.loadServices),\n    switchMap(() => this.services.allServices()\n      .pipe(\n        map(response => {\n          console.log('response : ', response);\n          return serviceActions.loadServicesSuccess({services: response.Data});\n        }),\n        catchError(error => {\n          console.log('error : ', error);\n          return of(serviceActions.loadServicesFailure({error}))\n        })\n      ))\n  ));\n\n  loadService$ = createEffect(() => this.actions$.pipe(\n    ofType(serviceActions.loadService),\n    switchMap(action => this.services.serviceDetails(action.id)\n      .pipe(\n        map((response: any) => {\n          return serviceActions.loadServiceSuccess({service: response.Data});\n        }),\n        catchError(error => {\n          console.log('error : ', error);\n          return of(serviceActions.loadServiceFailure({error}))\n        })\n      ))\n  ));\n  \n  deleteService$ = createEffect(() => this.actions$.pipe(\n    ofType(serviceActions.deleteService),\n    exhaustMap(action => this.services.deleteService(action.id)\n      .pipe(\n        map((response: any) => {\n          this.toaster.success(response.msg);\n          return serviceActions.deleteServiceSuccess({id: action.id});\n        }),\n        catchError(error => {\n          console.log('error : ', error);\n          return of(serviceActions.deleteServiceFailure({error}))\n        })\n      ))\n  ), { dispatch: false });\n\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Service } from '../model/service.model';\nimport * as ServiceActions from './service.actions';\n\nexport const servicesFeatureKey = 'services';\n\nexport interface StateServices extends EntityState<Service> {\n  // additional entities state properties\n  Data: Service[];\n  serviceDetails: Service;\n}\n\nexport const adapter: EntityAdapter<Service> = createEntityAdapter<Service>();\n\nexport const initialState: StateServices = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  serviceDetails: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,  \n  on(ServiceActions.loadServicesSuccess,\n    (state, action) => adapter.setAll(action.services, state)\n  ),\n  on(ServiceActions.loadServiceSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        serviceDetails: action.service\n      };\n    }\n  ),\n  on(ServiceActions.deleteServiceSuccess,\n    (state, action) => adapter.removeOne(action.id, state)\n  ),\n\n  on(ServiceActions.addService,\n    (state, action) => adapter.addOne(action.service, state)\n  ),\n  on(ServiceActions.upsertService,\n    (state, action) => adapter.upsertOne(action.service, state)\n  ),\n  on(ServiceActions.addServices,\n    (state, action) => adapter.addMany(action.services, state)\n  ),\n  on(ServiceActions.upsertServices,\n    (state, action) => adapter.upsertMany(action.services, state)\n  ),\n  on(ServiceActions.updateService,\n    (state, action) => adapter.updateOne(action.service, state)\n  ),\n  on(ServiceActions.updateServices,\n    (state, action) => adapter.updateMany(action.services, state)\n  ),\n  on(ServiceActions.deleteServices,\n    (state, action) => adapter.removeMany(action.ids, state)\n  ),\n  on(ServiceActions.clearServices,\n    state => adapter.removeAll(state)\n  ),\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { selectAll, servicesFeatureKey, StateServices } from \"./service.reducer\";\r\n\r\nconst ServiceState = createFeatureSelector(servicesFeatureKey);\r\n\r\nexport const allServicesSelector = createSelector(ServiceState, selectAll);\r\n\r\nexport const serviceDetailsSelector = createSelector(ServiceState, (state: StateServices) => state.serviceDetails);\r\n\r\n"],"sourceRoot":"webpack:///"}