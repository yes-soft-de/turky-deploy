{"version":3,"sources":["webpack:///src/app/pages/products/components/all-products/all-products.component.ts","webpack:///src/app/pages/products/components/all-products/all-products.component.html","webpack:///src/app/pages/products/components/product-details/product-details.component.ts","webpack:///src/app/pages/products/components/product-details/product-details.component.html","webpack:///src/app/pages/products/products-routing.module.ts","webpack:///src/app/pages/products/products.module.ts","webpack:///src/app/pages/products/services/products.service.ts","webpack:///src/app/pages/products/store/product.actions.ts","webpack:///src/app/pages/products/store/product.effects.ts","webpack:///src/app/pages/products/store/product.reducer.ts","webpack:///src/app/pages/products/store/product.selector.ts"],"names":["AllProductsComponent","productService","formBuilder","store","toaster","productsList","productsFilterList","isDeleted","dispatch","getProducts","pipe","subscribe","error","handleError","allProducts","console","log","products","config","itemsPerPage","currentPage","totalItems","length","msg","event","productId","confirm","id","success","name","filter","res","userName","toLocaleLowerCase","match","entity","country","status","selector","templateUrl","styleUrls","ProductDetailsComponent","activatedRoute","response","productDetails","Data","routes","path","component","ProductsRoutingModule","forChild","imports","exports","ProductsModule","forFeature","declarations","ProductsService","httpClient","get","productsAPI","errorHandler","providedIn","loadProducts","loadProductsSuccess","loadProductsFailure","deleteProduct","deleteProductSuccess","deleteProductFailure","ProductEffects","actions$","router","loadProducts$","productsResponse","productsFeatureKey","adapter","initialState","getInitialState","undefined","selectedProduct","reducer","state","action","setAll","removeOne","metaReducers","production","getSelectors","selectIds","selectEntities","selectAll","selectTotal","selectProductState","productsSelector","productSelector","getProductError"],"mappings":"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","file":"products-products-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { Products } from '../../model/products';\nimport { ProductsService } from '../../services/products.service';\nimport { ProductState } from '../../store/product.reducer';\nimport * as productAction from '../../store/product.actions';\nimport * as productSelector from '../../store/product.selector';\n\n@Component({\n  selector: 'app-all-products',\n  templateUrl: './all-products.component.html',\n  styleUrls: ['./all-products.component.scss']\n})\nexport class AllProductsComponent implements OnInit {\n  uploadForm: FormGroup;\n  products: Products[];\n  productsList: Products[] = [];\n  productsFilterList: Products[] = [];                  // We Create It Second For Filter\n  error$: Observable<string>;\n  isDeleted = false;\n  config: any;                                          // Config Variable For Pagination Configuration\n  name: string;\n\n  constructor(private productService: ProductsService,\n              private formBuilder: FormBuilder,\n              private store: Store<ProductState>,\n              private toaster: ToastrService) { }\n\n  ngOnInit() {\n    this.store.dispatch(productAction.loadProducts());\n    // Get All Products\n    this.getProducts();\n    // Dispatch Error\n    this.store.pipe(select(productSelector.getProductError)).subscribe(\n      error => this.handleError(error)\n    );\n  }\n\n  // Get All Products\n  getProducts() {\n    this.store.pipe(select(productSelector.productsSelector)).subscribe(\n      (allProducts: any) => {\n        console.log('all Products', allProducts);\n        this.products = allProducts;\n        this.productsList = allProducts;\n        this.productsFilterList = this.productsList;\n      }\n    );\n    this.config = {\n      itemsPerPage: 5,\n      currentPage: 1,\n      totalItems: this.productsList.length\n    };\n  }\n\n  // Handle Response Error\n  handleError(error) {\n    console.log('error : ', error);\n    if (error) {\n      if (error.error.error) {\n        this.toaster.error(error.error.error);\n      } else if (error.error.msg) {\n        this.toaster.error(error.error.msg);\n      }\n    }\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  // Delete The Category\n  delete(productId: string) {\n    if (confirm('Are You Sure You Want To Delete This Product')) {\n      this.isDeleted = true;\n      this.store.dispatch(productAction.deleteProduct({id: productId}));\n      this.toaster.success('Product Successfully Deleted');\n      // fetch all product after delete product\n      this.getProducts();\n    } else {\n      return false;\n    }\n  }\n\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.productsFilterList = [...this.productsList];\n    } else {\n      this.productsFilterList = [];\n      this.productsFilterList = this.productsList.filter(res => {\n        if (res.userName) {\n          const userName = res.userName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (userName) {\n            // display the Name Column\n            return userName;\n          }\n        }\n        if (res.entity) {\n          const entity = res.entity.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (entity) {\n            // display the Name Column\n            return entity;\n          }\n        }\n        if (res.country) {\n          const country = res.country.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (country) {\n            // display the Name Column\n            return country;\n          }\n        }\n        if (res.status) {\n          const status = res.status.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (status) {\n            // display the Name Column\n            return status;\n          }\n        }\n      });\n    }\n  }\n\n}\n","<div *ngIf=\"products != null\">\n    <div *ngIf=\"products.length !== 0\">\n      <!-- <div class=\"container-fluid\"> -->\n        <h1 class=\"text-center details-title my-4\">{{'manage-products-page' | translate}}</h1>\n          <div class=\"row\">\n              <div class=\"col-10 col-sm-8 col-md-6 col-xl-5\">\n                  <div class=\"form-group mb-4\">\n                      <input\n                        id=\"exampleFormControlInput2\"\n                        [(ngModel)]=\"name\"\n                        (keyup)=\"applyFilter()\"\n                        type=\"text\"\n                        placeholder=\"{{'product-search-input' | translate}}\"\n                        title=\"{{'product-search-input' | translate}}\"\n                        class=\"form-control form-control-underlined border-primary search-input\">\n                  </div>\n              </div>\n              <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n                <!-- <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/products/add\">\n                  <i class=\"fa fa-plus\"></i>\n                  {{'add-new-product' | translate}}\n                </a> -->\n              </div>\n          </div>\n        <div class=\"table-responsive text-center\">\n            <table class=\"table table-bordered main-table\">\n                <tr class=\"bg-dark text-white\">\n                    <td>#ID</td>\n                    <td>{{'image' | translate}}</td>\n                    <td>{{'username' | translate}}</td>\n                    <td>{{'city' | translate}}</td>\n                    <td>{{'cladding' | translate}}</td>\n                    <td>{{'country' | translate}}</td>\n                    <td>{{'description' | translate}}</td>\n                    <td>{{'entity' | translate}}</td>\n                    <!-- <td style=\"white-space: nowrap;\">{{'home-furnishing' | translate}}</td> -->\n                    <!-- <td style=\"white-space: nowrap;\">{{'number-of-floors' | translate}}</td> -->\n                    <td>{{'price' | translate}}</td>\n                    <!-- <td>{{'reaction' | translate}}</td> -->\n                    <!-- <td style=\"white-space: nowrap;\">{{'real-estate-type' | translate}}</td> -->\n                    <!-- <td>{{'rooms' | translate}}</td> -->\n                    <!-- <td>{{'space' | translate}}</td> -->\n<!--                    <td>{{'state' | translate}}</td>-->\n                    <td>{{'status' | translate}}</td>\n                    <td>{{'createdAt' | translate}}</td>\n                    <!-- <td>{{'control' | translate}}</td> -->\n                </tr>\n                <tr *ngFor=\"let product of productsFilterList | paginate: config\">\n                  <td>{{product.id}}</td>\n                  <td><img src=\"{{product?.image}}\" alt=\"{{product.name}} Image\" class=\"img-thumbnail img-custom\"></td>\n                  <td>{{product.userName ? product.userName : '-'}}</td>\n                  <td>{{product.city ? product.city : '-'}}</td>\n                  <td>{{product.cladding ? product.cladding : '-'}}</td>\n                  <td>{{product.country ? product.country : '-'}}</td>\n                  <td class=\"td-custom\">{{product.description ? product.description : '-'}}</td>\n                  <td>{{product.entity ? product.entity : '-'}}</td>\n                  <!-- <td>{{product.homeFurnishing ? product.homeFurnishing : '-'}}</td> -->\n                  <!-- <td>{{product.numberOfFloors ? product.numberOfFloors : '-'}}</td> -->\n                  <td>{{product.price ? (product.price | currency) : '-'}}</td>\n                  <!-- <td>{{product.reaction ? product.reaction : '-'}}</td> -->\n                  <!-- <td>{{product.realEstateType ? product.realEstateType : '-'}}</td> -->\n                  <!-- <td>{{product.rooms ? product.rooms : '-'}}</td> -->\n                  <!-- <td>{{product.space ? product.space : '-'}}</td> -->\n<!--                  <td>{{product.state ? product.state : '-'}}</td>-->\n                  <td>{{product.status ? product.status : '-'}}</td>\n                  <td style=\"white-space: nowrap;\">{{product.createdAt.timestamp * 1000 | date: 'MMM d, y, h:mm:ss a'}}</td>\n                  <!-- <td>\n                    <a (click)=\"suggest(product.id, (product.suggest ? false : true))\"\n                       class=\"text-primary mr-1 mb-1\"\n                       title=\"Change To {{product.suggest ? 'Not Recommended' : 'Recommended' }}\"\n\n                       style=\"cursor: pointer; {{ suggestProgress ? 'pointer-events: none;' : '' }}\">\n                      {{ product.suggest ? 'Recommended' : 'Not Recommended' }}\n                    </a>\n                  </td> -->\n                  <!-- <td>\n                      <a routerLink=\"/products/edit/{{product.id}}\" class=\"btn btn-success btn-sm mr-1 mb-1\">\n                        {{'view' | translate}}\n                    </a>\n                    <a (click)=\"delete(product.id)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\n                        {{'delete' | translate}}\n                      </a>\n                  </td> -->\n                </tr>\n            </table>\n            <pagination-controls class=\"my-pagination\"\n                                 (pageChange)=\"pageChanged($event)\"\n                                 autoHide=\"true\"\n                                 maxSize=\"5\"\n                                 responsive=\"true\"\n                                 previousLabel=\"{{'prev' | translate}}\"\n                                 nextLabel=\"{{'next' | translate}}\"\n                                 screenReaderPaginationLabel=\"Pagination\"\n                                 screenReaderPageLabel=\"page\"\n                                 screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n            </pagination-controls>\n        </div>\n      <!-- </div> -->\n    </div>\n    <!-- <div *ngIf=\"productsFilterList.length === 0\">\n        <div class=\"container\">\n            <div class=\"alert alert-primary text-center mt-5\">{{'products-not-found' | translate}}</div>\n            <a routerLink=\"/products/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n                <i class=\"fa fa-plus\"></i>\n                {{'add-new-product' | translate}}\n            </a>\n        </div>\n    </div> -->\n</div>\n<div *ngIf=\"products.length === 0\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductDetails } from '../../model/product-details';\nimport { ProductDetailsResponse } from '../../model/product-details-response';\nimport { Products } from '../../model/products';\nimport { ProductsService } from '../../services/products.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss']\n})\nexport class ProductDetailsComponent implements OnInit {\n  productDetails: ProductDetails;\n\n  constructor(private productService: ProductsService,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // this.productService.getProductDetails(this.activatedRoute.snapshot.params.get('id'))\n    // .subscribe(\n    //   (response: ProductDetailsResponse) => this.responseHandler(response),\n    //   error => this.errorHandler(error)\n    // );\n  }\n\n  responseHandler(response) {\n    this.productDetails = response.Data;\n  }\n\n  errorHandler(error) {\n\n  }\n\n}\n","<p>product-details works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllProductsComponent } from './components/all-products/all-products.component';\n\nconst routes: Routes = [\n  { path: '', component: AllProductsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from 'src/app/@theme/theme.module';\n\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { EffectsModule } from '@ngrx/effects';\nimport * as fromProduct from './store/product.reducer';\nimport { ProductEffects } from './store/product.effects';\nimport { AllProductsComponent } from './components/all-products/all-products.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\nimport { StoreModule } from '@ngrx/store';\n\n\n@NgModule({\n  declarations: [AllProductsComponent, ProductDetailsComponent],\n  imports: [\n    ThemeModule,\n    ProductsRoutingModule,\n    StoreModule.forFeature(fromProduct.productsFeatureKey, fromProduct.reducer),\n    EffectsModule.forFeature([ProductEffects])\n  ]\n})\nexport class ProductsModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AdminConfig } from '../../AdminConfig';\nimport { CarsResponse } from '../model/cars-response';\nimport { DevicesResponse } from '../model/devices-response';\nimport { ProductDetailsResponse } from '../model/product-details-response';\nimport { ProductsResponse } from '../model/products-response';\nimport { RealEstateResponse } from '../model/real-estate-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  private static errorHandler(error: HttpErrorResponse) {\n    return throwError(error || 'Server Error');\n  }\n\n  getProducts(): Observable<ProductsResponse> {\n    return this.httpClient.get<ProductsResponse>(\n      AdminConfig.productsAPI\n    ).pipe(catchError(ProductsService.errorHandler));\n  }\n\n  // all Cars\n  // getAllCars(): Observable<CarsResponse> {\n  //   return this.httpClient.get<CarsResponse>(\n  //     AdminConfig.allCarsAPI\n  //   ).pipe(catchError(ProductsService.errorHandler));\n  // }\n\n  // // all Devices\n  // getAllDevices(): Observable<DevicesResponse> {\n  //   return this.httpClient.get<DevicesResponse>(\n  //     AdminConfig.allDevicesAPI\n  //   ).pipe(catchError(ProductsService.errorHandler));\n  // }\n\n  // // all RealEstate\n  // getAllRealEstate(): Observable<RealEstateResponse> {\n  //   return this.httpClient.get<RealEstateResponse>(\n  //     AdminConfig.allRealEstateAPI\n  //   ).pipe(catchError(ProductsService.errorHandler));\n  // }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Products } from '../model/products';\nimport { Cars } from '../model/cars';\n\n\n\nexport const loadProducts = createAction(\n  '[Product/API] Load Products'\n);\n\nexport const loadProductsSuccess = createAction(\n  '[Product/API] Load Products Success',\n  props<{ Data: Products[] }>()\n);\n\nexport const loadProductsFailure = createAction(\n  '[Product/API] Load Products Failure',\n  props<{ error: string }>()\n);\n\nexport const deleteProduct = createAction(\n  '[Product Component/API] Delete Product',\n  props<{ id: string }>()\n);\n\nexport const deleteProductSuccess = createAction(\n  '[Product Effect/API] Delete Product Success',\n  props<{ id: string }>()\n);\n\nexport const deleteProductFailure = createAction(\n  '[Product Effect/API] Delete Product Failure',\n  props<{ error: string }>()\n);\n\n// export const loadAdmin = createAction(\n//   '[Admin Component/API] Load Admin',\n//   props<{ id: number }>()\n// );\n\n// export const loadAdminSuccess = createAction(\n//   '[Admin Effects/API] Load Admin Success',\n//   props<{ data: Admin }>()\n// );\n\n// export const loadAdminFailure = createAction(\n//   '[Admin Effects/API] Load Admin Failure',\n//   props<{ error: string }>()\n// );\n\n// export const addAdmin = createAction(\n//   '[Admin Components/API] Add Admin',\n//   props<{ admin: Admin }>()\n// );\n\n// export const addAdminSuccess = createAction(\n//   '[Admin Effects/API] Add Admin Success',\n//   props<{ admin: Admin }>()\n// );\n\n// export const addAdminFailure = createAction(\n//   '[Admin Effects/API] Add Admin Failure',\n//   props<{ error: any }>()\n// );\n\n// export const deleteAdmin = createAction(\n//   '[Admin Component/API] Delete Admin',\n//   props<{ id: string }>()\n// );\n\n// export const deleteAdminSuccess = createAction(\n//   '[Admin Effects/API] Delete Admin Success',\n//   props<{ id: string }>()\n// );\n\n// export const deleteAdminFailure = createAction(\n//   '[Admin Effects/API] Delete Admin Failure',\n//   props<{ error: string }>()\n// );\n\n// export const updateAdmin = createAction(\n//   '[Admin Components/API] Update Admin',\n//   props<{ admin: Update<Admin> }>()\n// );\n\n// export const updateAdminSuccess = createAction(\n//   '[Admin Effects/API] Update Admin Success',\n//   props<{ admin: Update<Admin> }>()\n// );\n\n// export const updateAdminFailure = createAction(\n//   '[Admin Effects/API] Update Admin Failure',\n//   props<{ error: string }>()\n// );\n\n\n\n\n// export const upsertAdmin = createAction(\n//   '[Admin/API] Upsert Admin',\n//   props<{ admin: Admin }>()\n// );\n\n// export const upsertAdmins = createAction(\n//   '[Admin/API] Upsert Admins',\n//   props<{ admins: Admin[] }>()\n// );\n\n// export const updateAdmins = createAction(\n//   '[Admin/API] Update Admins',\n//   props<{ admins: Update<Admin>[] }>()\n// );\n\n// export const clearAdmins = createAction(\n//   '[Admin/API] Clear Admins'\n// );\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ToastrService } from 'ngx-toastr';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, mergeMap, tap } from 'rxjs/operators';\nimport { ProductsService } from '../services/products.service';\nimport * as productActions from '../store/product.actions';\n\n\n@Injectable()\nexport class ProductEffects {\n\n  constructor(private actions$: Actions,\n              private productService: ProductsService,\n              private router: Router,\n              private toaster: ToastrService,\n              private activatedRoute: ActivatedRoute) {}\n\n  // Load Products Effect\n  loadProducts$ = createEffect(() => this.actions$.pipe(\n    ofType(productActions.loadProducts),\n    mergeMap(() => this.productService.getProducts()\n      .pipe(\n        map(productsResponse => productActions.loadProductsSuccess(productsResponse)),\n        catchError(error => of(productActions.loadProductsFailure(error)))\n      )\n    )\n  ));\n\n  // loadAdmin$ = createEffect(() => this.actions$.pipe(\n  //   ofType(productActions.loadAdmin),\n  //   mergeMap(action => this.adminService.getAdmin(action.id)\n  //     .pipe(\n  //       map(admin => productActions.loadAdminSuccess(admin)),\n  //       catchError(error => of(productActions.loadAdminFailure(error)))\n  //     ))\n  // ));\n\n  // Delete Product Effect\n  // deleteProduct$ = createEffect(() => this.actions$.pipe(\n  //   ofType(productActions.deleteProduct),\n  //   mergeMap(action => this.productService.deleteProduct(action.id)\n  //     .pipe(\n  //       map(response => productActions.deleteProductSuccess(response)),\n  //       catchError(error => of(productActions.deleteProductFailure(error)))\n  //     )\n  //   )\n  // ));\n\n\n}\n","import { Action, createReducer, MetaReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { environment } from 'src/environments/environment';\nimport { Products } from '../model/products';\nimport { ProductDetails } from '../model/product-details';\nimport * as ProductAction from '../store/product.actions';\n\nexport const productsFeatureKey = 'products';\n\nexport interface ProductState extends EntityState<Products> {\n  // additional entities state properties\n  Data: Products[];\n  selectedProduct: ProductDetails;\n  error: any;\n}\n\nexport const adapter: EntityAdapter<Products> = createEntityAdapter<Products>();\n\nexport const initialState: ProductState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  selectedProduct: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n\n  on(ProductAction.loadProductsSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(ProductAction.loadProductsFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(ProductAction.deleteProductSuccess,\n    (state, action) => adapter.removeOne(action.id, state)\n  ),\n  on(ProductAction.deleteProductFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  // on(ProductAction.loadAdminSuccess,\n  //   (state, action) => {\n  //     return {\n  //       ...state,\n  //       selectedAdmin: action.data\n  //     }\n  //   }\n  // ),\n  // on(ProductAction.loadAdminFailure,\n  //   (state, action) => {\n  //     return {\n  //       ...state,\n  //       error: action.error\n  //     }\n  //   }\n  // ),\n  // on(ProductAction.addAdminSuccess,\n  //   (state, action) => adapter.addOne(action.admin, state)\n  // ),\n  // on(ProductAction.addAdminFailure,\n  //   (state, action) => {\n  //     return {\n  //       ...state,\n  //       error: action.error\n  //     }\n  //   }\n  // ),\n  // on(ProductAction.deleteAdminSuccess,\n  //   (state, action) => adapter.removeOne(action.id, state)\n  // ),\n  // on(ProductAction.deleteAdminFailure,\n  //   (state, action) => {\n  //     return {\n  //       ...state,\n  //       error: action.error\n  //     }\n  // }),\n  // on(ProductAction.updateAdmin,\n  //   (state, action) => adapter.updateOne(action.admin, state)\n  // ),\n  // on(ProductAction.updateAdminFailure,\n  //   (state, action) => {\n  //     return {\n  //       ...state,\n  //       error: action.error\n  //     }\n  // }),\n\n  // on(ProductAction.upsertAdmin,\n  //   (state, action) => adapter.upsertOne(action.admin, state)\n  // ),\n  // on(ProductAction.upsertAdmins,\n  //   (state, action) => adapter.upsertMany(action.admins, state)\n  // ),\n  // on(ProductAction.updateAdmins,\n  //   (state, action) => adapter.updateMany(action.admins, state)\n  // ),\n  // on(ProductAction.deleteAdmin,\n  //   (state, action) => adapter.removeOne(action.id, state)\n  // ),\n  // on(ProductAction.deleteAdmins,\n  //   (state, action) => adapter.removeMany(action.ids, state)\n  // ),\n  // on(ProductAction.clearAdmins,\n  //   state => adapter.removeAll(state)\n  // ),\n);\n\nexport const metaReducers: MetaReducer<ProductState>[] = !environment.production ? [] : [];\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { productsFeatureKey, ProductState, selectAll, selectEntities } from \"./product.reducer\";\r\n\r\n// fetch the whole slice for product state\r\nexport const selectProductState = createFeatureSelector<ProductState>(productsFeatureKey);\r\n\r\nexport const productsSelector = createSelector(selectProductState, selectAll);\r\n\r\nexport const productSelector = createSelector(selectProductState, (state: ProductState) => state.selectedProduct);\r\n\r\nexport const getProductError = createSelector(selectProductState, (state: ProductState) => state.error);\r\n"]}