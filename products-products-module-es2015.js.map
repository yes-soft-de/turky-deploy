{"version":3,"sources":["./src/app/pages/products/components/all-products/all-products.component.ts","./src/app/pages/products/components/all-products/all-products.component.html","./src/app/pages/products/components/product-details/product-details.component.ts","./src/app/pages/products/components/product-details/product-details.component.html","./src/app/pages/products/products-routing.module.ts","./src/app/pages/products/products.module.ts","./src/app/pages/products/services/products.service.ts","./src/app/pages/products/store/product.actions.ts","./src/app/pages/products/store/product.effects.ts","./src/app/pages/products/store/product.reducer.ts","./src/app/pages/products/store/product.selector.ts"],"names":[],"mappings":"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","file":"products-products-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { Products } from '../../model/products';\nimport { ProductsService } from '../../services/products.service';\nimport { ProductState } from '../../store/product.reducer';\nimport * as productAction from '../../store/product.actions';\nimport * as productSelector from '../../store/product.selector';\n\n@Component({\n  selector: 'app-all-products',\n  templateUrl: './all-products.component.html',\n  styleUrls: ['./all-products.component.scss']\n})\nexport class AllProductsComponent implements OnInit {\n  uploadForm: FormGroup;\n  products: Products[];\n  productsList: Products[] = [];\n  productsFilterList: Products[] = [];                  // We Create It Second For Filter\n  error$: Observable<string>;\n  isDeleted = false;\n  config: any;                                          // Config Variable For Pagination Configuration\n  name: string;\n\n  constructor(private productService: ProductsService,\n              private formBuilder: FormBuilder,\n              private store: Store<ProductState>,\n              private toaster: ToastrService) { }\n\n  ngOnInit() {\n    this.store.dispatch(productAction.loadProducts());\n    // Get All Products\n    this.getProducts();\n    // Dispatch Error\n    this.store.pipe(select(productSelector.getProductError)).subscribe(\n      error => this.handleError(error)\n    );\n  }\n\n  // Get All Products\n  getProducts() {\n    this.store.pipe(select(productSelector.productsSelector)).subscribe(\n      (allProducts: any) => {\n        console.log('all Products', allProducts);\n        this.products = allProducts;\n        this.productsList = allProducts;\n        this.productsFilterList = this.productsList;\n      }\n    );\n    this.config = {\n      itemsPerPage: 5,\n      currentPage: 1,\n      totalItems: this.productsList.length\n    };\n  }\n\n  // Handle Response Error\n  handleError(error) {\n    console.log('error : ', error);\n    if (error) {\n      if (error.error.error) {\n        this.toaster.error(error.error.error);\n      } else if (error.error.msg) {\n        this.toaster.error(error.error.msg);\n      }\n    }\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  // Delete The Category\n  delete(productId: string) {\n    if (confirm('Are You Sure You Want To Delete This Product')) {\n      this.isDeleted = true;\n      this.store.dispatch(productAction.deleteProduct({id: productId}));\n      this.toaster.success('Product Successfully Deleted');\n      // fetch all product after delete product\n      this.getProducts();\n    } else {\n      return false;\n    }\n  }\n\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.productsFilterList = [...this.productsList];\n    } else {\n      this.productsFilterList = [];\n      this.productsFilterList = this.productsList.filter(res => {\n        if (res.userName) {\n          const userName = res.userName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (userName) {\n            // display the Name Column\n            return userName;\n          }\n        }\n        if (res.entity) {\n          const entity = res.entity.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (entity) {\n            // display the Name Column\n            return entity;\n          }\n        }\n        if (res.country) {\n          const country = res.country.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (country) {\n            // display the Name Column\n            return country;\n          }\n        }\n        if (res.status) {\n          const status = res.status.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (status) {\n            // display the Name Column\n            return status;\n          }\n        }\n      });\n    }\n  }\n\n}\n","<div *ngIf=\"products != null\">\n    <div *ngIf=\"products.length !== 0\">\n      <!-- <div class=\"container-fluid\"> -->\n        <h1 class=\"text-center details-title my-4\">{{'manage-products-page' | translate}}</h1>\n          <div class=\"row\">\n              <div class=\"col-10 col-sm-8 col-md-6 col-xl-5\">\n                  <div class=\"form-group mb-4\">\n                      <input\n                        id=\"exampleFormControlInput2\"\n                        [(ngModel)]=\"name\"\n                        (keyup)=\"applyFilter()\"\n                        type=\"text\"\n                        placeholder=\"{{'product-search-input' | translate}}\"\n                        title=\"{{'product-search-input' | translate}}\"\n                        class=\"form-control form-control-underlined border-primary search-input\">\n                  </div>\n              </div>\n              <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n                <!-- <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/products/add\">\n                  <i class=\"fa fa-plus\"></i>\n                  {{'add-new-product' | translate}}\n                </a> -->\n              </div>\n          </div>\n        <div class=\"table-responsive text-center\">\n            <table class=\"table table-bordered main-table\">\n                <tr class=\"bg-dark text-white\">\n                    <td>#ID</td>\n                    <td>{{'image' | translate}}</td>\n                    <td>{{'username' | translate}}</td>\n                    <td>{{'city' | translate}}</td>\n                    <td>{{'cladding' | translate}}</td>\n                    <td>{{'country' | translate}}</td>\n                    <td>{{'description' | translate}}</td>\n                    <td>{{'entity' | translate}}</td>\n                    <!-- <td style=\"white-space: nowrap;\">{{'home-furnishing' | translate}}</td> -->\n                    <!-- <td style=\"white-space: nowrap;\">{{'number-of-floors' | translate}}</td> -->\n                    <td>{{'price' | translate}}</td>\n                    <!-- <td>{{'reaction' | translate}}</td> -->\n                    <!-- <td style=\"white-space: nowrap;\">{{'real-estate-type' | translate}}</td> -->\n                    <!-- <td>{{'rooms' | translate}}</td> -->\n                    <!-- <td>{{'space' | translate}}</td> -->\n<!--                    <td>{{'state' | translate}}</td>-->\n                    <td>{{'status' | translate}}</td>\n                    <td>{{'createdAt' | translate}}</td>\n                    <!-- <td>{{'control' | translate}}</td> -->\n                </tr>\n                <tr *ngFor=\"let product of productsFilterList | paginate: config\">\n                  <td>{{product.id}}</td>\n                  <td><img src=\"{{product?.image}}\" alt=\"{{product.name}} Image\" class=\"img-thumbnail img-custom\"></td>\n                  <td>{{product.userName ? product.userName : '-'}}</td>\n                  <td>{{product.city ? product.city : '-'}}</td>\n                  <td>{{product.cladding ? product.cladding : '-'}}</td>\n                  <td>{{product.country ? product.country : '-'}}</td>\n                  <td class=\"td-custom\">{{product.description ? product.description : '-'}}</td>\n                  <td>{{product.entity ? product.entity : '-'}}</td>\n                  <!-- <td>{{product.homeFurnishing ? product.homeFurnishing : '-'}}</td> -->\n                  <!-- <td>{{product.numberOfFloors ? product.numberOfFloors : '-'}}</td> -->\n                  <td>{{product.price ? (product.price | currency) : '-'}}</td>\n                  <!-- <td>{{product.reaction ? product.reaction : '-'}}</td> -->\n                  <!-- <td>{{product.realEstateType ? product.realEstateType : '-'}}</td> -->\n                  <!-- <td>{{product.rooms ? product.rooms : '-'}}</td> -->\n                  <!-- <td>{{product.space ? product.space : '-'}}</td> -->\n<!--                  <td>{{product.state ? product.state : '-'}}</td>-->\n                  <td>{{product.status ? product.status : '-'}}</td>\n                  <td style=\"white-space: nowrap;\">{{product.createdAt.timestamp * 1000 | date: 'MMM d, y, h:mm:ss a'}}</td>\n                  <!-- <td>\n                    <a (click)=\"suggest(product.id, (product.suggest ? false : true))\"\n                       class=\"text-primary mr-1 mb-1\"\n                       title=\"Change To {{product.suggest ? 'Not Recommended' : 'Recommended' }}\"\n\n                       style=\"cursor: pointer; {{ suggestProgress ? 'pointer-events: none;' : '' }}\">\n                      {{ product.suggest ? 'Recommended' : 'Not Recommended' }}\n                    </a>\n                  </td> -->\n                  <!-- <td>\n                      <a routerLink=\"/products/edit/{{product.id}}\" class=\"btn btn-success btn-sm mr-1 mb-1\">\n                        {{'view' | translate}}\n                    </a>\n                    <a (click)=\"delete(product.id)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\n                        {{'delete' | translate}}\n                      </a>\n                  </td> -->\n                </tr>\n            </table>\n            <pagination-controls class=\"my-pagination\"\n                                 (pageChange)=\"pageChanged($event)\"\n                                 autoHide=\"true\"\n                                 maxSize=\"5\"\n                                 responsive=\"true\"\n                                 previousLabel=\"{{'prev' | translate}}\"\n                                 nextLabel=\"{{'next' | translate}}\"\n                                 screenReaderPaginationLabel=\"Pagination\"\n                                 screenReaderPageLabel=\"page\"\n                                 screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n            </pagination-controls>\n        </div>\n      <!-- </div> -->\n    </div>\n    <!-- <div *ngIf=\"productsFilterList.length === 0\">\n        <div class=\"container\">\n            <div class=\"alert alert-primary text-center mt-5\">{{'products-not-found' | translate}}</div>\n            <a routerLink=\"/products/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n                <i class=\"fa fa-plus\"></i>\n                {{'add-new-product' | translate}}\n            </a>\n        </div>\n    </div> -->\n</div>\n<div *ngIf=\"products.length === 0\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductDetails } from '../../model/product-details';\nimport { ProductDetailsResponse } from '../../model/product-details-response';\nimport { Products } from '../../model/products';\nimport { ProductsService } from '../../services/products.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss']\n})\nexport class ProductDetailsComponent implements OnInit {\n  productDetails: ProductDetails;\n\n  constructor(private productService: ProductsService,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // this.productService.getProductDetails(this.activatedRoute.snapshot.params.get('id'))\n    // .subscribe(\n    //   (response: ProductDetailsResponse) => this.responseHandler(response),\n    //   error => this.errorHandler(error)\n    // );\n  }\n\n  responseHandler(response) {\n    this.productDetails = response.Data;\n  }\n\n  errorHandler(error) {\n\n  }\n\n}\n","<p>product-details works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllProductsComponent } from './components/all-products/all-products.component';\n\nconst routes: Routes = [\n  { path: '', component: AllProductsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from 'src/app/@theme/theme.module';\n\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { EffectsModule } from '@ngrx/effects';\nimport * as fromProduct from './store/product.reducer';\nimport { ProductEffects } from './store/product.effects';\nimport { AllProductsComponent } from './components/all-products/all-products.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\nimport { StoreModule } from '@ngrx/store';\n\n\n@NgModule({\n  declarations: [AllProductsComponent, ProductDetailsComponent],\n  imports: [\n    ThemeModule,\n    ProductsRoutingModule,\n    StoreModule.forFeature(fromProduct.productsFeatureKey, fromProduct.reducer),\n    EffectsModule.forFeature([ProductEffects])\n  ]\n})\nexport class ProductsModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AdminConfig } from '../../AdminConfig';\nimport { CarsResponse } from '../model/cars-response';\nimport { DevicesResponse } from '../model/devices-response';\nimport { ProductDetailsResponse } from '../model/product-details-response';\nimport { ProductsResponse } from '../model/products-response';\nimport { RealEstateResponse } from '../model/real-estate-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  private static errorHandler(error: HttpErrorResponse) {\n    return throwError(error || 'Server Error');\n  }\n\n  getProducts(): Observable<ProductsResponse> {\n    return this.httpClient.get<ProductsResponse>(\n      AdminConfig.productsAPI\n    ).pipe(catchError(ProductsService.errorHandler));\n  }\n\n  // all Cars\n  // getAllCars(): Observable<CarsResponse> {\n  //   return this.httpClient.get<CarsResponse>(\n  //     AdminConfig.allCarsAPI\n  //   ).pipe(catchError(ProductsService.errorHandler));\n  // }\n\n  // // all Devices\n  // getAllDevices(): Observable<DevicesResponse> {\n  //   return this.httpClient.get<DevicesResponse>(\n  //     AdminConfig.allDevicesAPI\n  //   ).pipe(catchError(ProductsService.errorHandler));\n  // }\n\n  // // all RealEstate\n  // getAllRealEstate(): Observable<RealEstateResponse> {\n  //   return this.httpClient.get<RealEstateResponse>(\n  //     AdminConfig.allRealEstateAPI\n  //   ).pipe(catchError(ProductsService.errorHandler));\n  // }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Products } from '../model/products';\nimport { Cars } from '../model/cars';\n\n\n\nexport const loadProducts = createAction(\n  '[Product/API] Load Products'\n);\n\nexport const loadProductsSuccess = createAction(\n  '[Product/API] Load Products Success',\n  props<{ Data: Products[] }>()\n);\n\nexport const loadProductsFailure = createAction(\n  '[Product/API] Load Products Failure',\n  props<{ error: string }>()\n);\n\nexport const deleteProduct = createAction(\n  '[Product Component/API] Delete Product',\n  props<{ id: string }>()\n);\n\nexport const deleteProductSuccess = createAction(\n  '[Product Effect/API] Delete Product Success',\n  props<{ id: string }>()\n);\n\nexport const deleteProductFailure = createAction(\n  '[Product Effect/API] Delete Product Failure',\n  props<{ error: string }>()\n);\n\n// export const loadAdmin = createAction(\n//   '[Admin Component/API] Load Admin',\n//   props<{ id: number }>()\n// );\n\n// export const loadAdminSuccess = createAction(\n//   '[Admin Effects/API] Load Admin Success',\n//   props<{ data: Admin }>()\n// );\n\n// export const loadAdminFailure = createAction(\n//   '[Admin Effects/API] Load Admin Failure',\n//   props<{ error: string }>()\n// );\n\n// export const addAdmin = createAction(\n//   '[Admin Components/API] Add Admin',\n//   props<{ admin: Admin }>()\n// );\n\n// export const addAdminSuccess = createAction(\n//   '[Admin Effects/API] Add Admin Success',\n//   props<{ admin: Admin }>()\n// );\n\n// export const addAdminFailure = createAction(\n//   '[Admin Effects/API] Add Admin Failure',\n//   props<{ error: any }>()\n// );\n\n// export const deleteAdmin = createAction(\n//   '[Admin Component/API] Delete Admin',\n//   props<{ id: string }>()\n// );\n\n// export const deleteAdminSuccess = createAction(\n//   '[Admin Effects/API] Delete Admin Success',\n//   props<{ id: string }>()\n// );\n\n// export const deleteAdminFailure = createAction(\n//   '[Admin Effects/API] Delete Admin Failure',\n//   props<{ error: string }>()\n// );\n\n// export const updateAdmin = createAction(\n//   '[Admin Components/API] Update Admin',\n//   props<{ admin: Update<Admin> }>()\n// );\n\n// export const updateAdminSuccess = createAction(\n//   '[Admin Effects/API] Update Admin Success',\n//   props<{ admin: Update<Admin> }>()\n// );\n\n// export const updateAdminFailure = createAction(\n//   '[Admin Effects/API] Update Admin Failure',\n//   props<{ error: string }>()\n// );\n\n\n\n\n// export const upsertAdmin = createAction(\n//   '[Admin/API] Upsert Admin',\n//   props<{ admin: Admin }>()\n// );\n\n// export const upsertAdmins = createAction(\n//   '[Admin/API] Upsert Admins',\n//   props<{ admins: Admin[] }>()\n// );\n\n// export const updateAdmins = createAction(\n//   '[Admin/API] Update Admins',\n//   props<{ admins: Update<Admin>[] }>()\n// );\n\n// export const clearAdmins = createAction(\n//   '[Admin/API] Clear Admins'\n// );\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ToastrService } from 'ngx-toastr';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, mergeMap, tap } from 'rxjs/operators';\nimport { ProductsService } from '../services/products.service';\nimport * as productActions from '../store/product.actions';\n\n\n@Injectable()\nexport class ProductEffects {\n\n  constructor(private actions$: Actions,\n              private productService: ProductsService,\n              private router: Router,\n              private toaster: ToastrService,\n              private activatedRoute: ActivatedRoute) {}\n\n  // Load Products Effect\n  loadProducts$ = createEffect(() => this.actions$.pipe(\n    ofType(productActions.loadProducts),\n    mergeMap(() => this.productService.getProducts()\n      .pipe(\n        map(productsResponse => productActions.loadProductsSuccess(productsResponse)),\n        catchError(error => of(productActions.loadProductsFailure(error)))\n      )\n    )\n  ));\n\n  // loadAdmin$ = createEffect(() => this.actions$.pipe(\n  //   ofType(productActions.loadAdmin),\n  //   mergeMap(action => this.adminService.getAdmin(action.id)\n  //     .pipe(\n  //       map(admin => productActions.loadAdminSuccess(admin)),\n  //       catchError(error => of(productActions.loadAdminFailure(error)))\n  //     ))\n  // ));\n\n  // Delete Product Effect\n  // deleteProduct$ = createEffect(() => this.actions$.pipe(\n  //   ofType(productActions.deleteProduct),\n  //   mergeMap(action => this.productService.deleteProduct(action.id)\n  //     .pipe(\n  //       map(response => productActions.deleteProductSuccess(response)),\n  //       catchError(error => of(productActions.deleteProductFailure(error)))\n  //     )\n  //   )\n  // ));\n\n\n}\n","import { Action, createReducer, MetaReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { environment } from 'src/environments/environment';\nimport { Products } from '../model/products';\nimport { ProductDetails } from '../model/product-details';\nimport * as ProductAction from '../store/product.actions';\n\nexport const productsFeatureKey = 'products';\n\nexport interface ProductState extends EntityState<Products> {\n  // additional entities state properties\n  Data: Products[];\n  selectedProduct: ProductDetails;\n  error: any;\n}\n\nexport const adapter: EntityAdapter<Products> = createEntityAdapter<Products>();\n\nexport const initialState: ProductState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  selectedProduct: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n\n  on(ProductAction.loadProductsSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(ProductAction.loadProductsFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(ProductAction.deleteProductSuccess,\n    (state, action) => adapter.removeOne(action.id, state)\n  ),\n  on(ProductAction.deleteProductFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  // on(ProductAction.loadAdminSuccess,\n  //   (state, action) => {\n  //     return {\n  //       ...state,\n  //       selectedAdmin: action.data\n  //     }\n  //   }\n  // ),\n  // on(ProductAction.loadAdminFailure,\n  //   (state, action) => {\n  //     return {\n  //       ...state,\n  //       error: action.error\n  //     }\n  //   }\n  // ),\n  // on(ProductAction.addAdminSuccess,\n  //   (state, action) => adapter.addOne(action.admin, state)\n  // ),\n  // on(ProductAction.addAdminFailure,\n  //   (state, action) => {\n  //     return {\n  //       ...state,\n  //       error: action.error\n  //     }\n  //   }\n  // ),\n  // on(ProductAction.deleteAdminSuccess,\n  //   (state, action) => adapter.removeOne(action.id, state)\n  // ),\n  // on(ProductAction.deleteAdminFailure,\n  //   (state, action) => {\n  //     return {\n  //       ...state,\n  //       error: action.error\n  //     }\n  // }),\n  // on(ProductAction.updateAdmin,\n  //   (state, action) => adapter.updateOne(action.admin, state)\n  // ),\n  // on(ProductAction.updateAdminFailure,\n  //   (state, action) => {\n  //     return {\n  //       ...state,\n  //       error: action.error\n  //     }\n  // }),\n\n  // on(ProductAction.upsertAdmin,\n  //   (state, action) => adapter.upsertOne(action.admin, state)\n  // ),\n  // on(ProductAction.upsertAdmins,\n  //   (state, action) => adapter.upsertMany(action.admins, state)\n  // ),\n  // on(ProductAction.updateAdmins,\n  //   (state, action) => adapter.updateMany(action.admins, state)\n  // ),\n  // on(ProductAction.deleteAdmin,\n  //   (state, action) => adapter.removeOne(action.id, state)\n  // ),\n  // on(ProductAction.deleteAdmins,\n  //   (state, action) => adapter.removeMany(action.ids, state)\n  // ),\n  // on(ProductAction.clearAdmins,\n  //   state => adapter.removeAll(state)\n  // ),\n);\n\nexport const metaReducers: MetaReducer<ProductState>[] = !environment.production ? [] : [];\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { productsFeatureKey, ProductState, selectAll, selectEntities } from \"./product.reducer\";\r\n\r\n// fetch the whole slice for product state\r\nexport const selectProductState = createFeatureSelector<ProductState>(productsFeatureKey);\r\n\r\nexport const productsSelector = createSelector(selectProductState, selectAll);\r\n\r\nexport const productSelector = createSelector(selectProductState, (state: ProductState) => state.selectedProduct);\r\n\r\nexport const getProductError = createSelector(selectProductState, (state: ProductState) => state.error);\r\n"],"sourceRoot":"webpack:///"}