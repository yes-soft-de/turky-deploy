{"version":3,"sources":["webpack:///src/app/pages/real-estate/components/all-real-estate/all-real-estate.component.ts","webpack:///src/app/pages/real-estate/components/all-real-estate/all-real-estate.component.html","webpack:///src/app/pages/real-estate/components/real-estate-details/real-estate-details.component.ts","webpack:///src/app/pages/real-estate/components/real-estate-details/real-estate-details.component.html","webpack:///src/app/pages/real-estate/real-estate-routing.module.ts","webpack:///src/app/pages/real-estate/real-estate.module.ts","webpack:///src/app/pages/real-estate/services/real-estate.service.ts","webpack:///src/app/pages/real-estate/store/real-estate.actions.ts","webpack:///src/app/pages/real-estate/store/real-estate.effects.ts","webpack:///src/app/pages/real-estate/store/real-estate.reducer.ts","webpack:///src/app/pages/real-estate/store/real-estate.selector.ts"],"names":["AllRealEstateComponent","store","toaster","realEstatesList","realEstatesFilterList","isDeleted","dispatch","getRealEstates","pipe","subscribe","error","handleError","allrealEstates","console","log","realEstates","config","itemsPerPage","currentPage","totalItems","length","msg","event","realEstateId","confirm","id","success","setTimeout","name","filter","res","userName","toLocaleLowerCase","match","country","city","company","realEstateType","selector","templateUrl","styleUrls","RealEstateDetailsComponent","activatedRoute","document","render","rendering","imagesRendering","realEstateID","Number","snapshot","paramMap","get","getRealEstateDetails","data","realEstate","element","mainImage","querySelector","mainImageLink","getAttribute","currentImage","firstChild","currentImageLink","setAttribute","customId","images","Document","routes","path","component","RealEstateRoutingModule","forChild","imports","exports","RealEstateModule","forFeature","declarations","RealEstateService","httpClient","allRealEstateAPI","errorHandler","getRealEstateAPI","deviceId","deleteRealEstateAPI","providedIn","loadRealEstates","loadRealEstatesSuccess","loadRealEstatesFailure","loadRealEstate","loadRealEstateSuccess","loadRealEstateFailure","deleteRealEstate","deleteRealEstateSuccess","deleteRealEstateFailure","RealEstateEffects","actions$","realEstateService","loadRealEstates$","response","loadRealEstate$","action","realEstateDetails","deleteRealEstate$","deleteRealEstates","realEstatesFeatureKey","adapter","initialState","getInitialState","Data","undefined","selectedRealEstate","reducer","state","setAll","removeOne","getSelectors","selectIds","selectEntities","selectAll","selectTotal","realEstateFeatureState","realEstatesSelector","realEstateSelector","getRealEstateError"],"mappings":"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","file":"real-estate-real-estate-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { RealEstateService } from '../../services/real-estate.service';\nimport { RealEstateState } from '../../store/real-estate.reducer';\nimport * as realEstateAction from '../../store/real-estate.actions';\nimport * as realEstateSelector from '../../store/real-estate.selector';\nimport { RealEstate } from '../../model/real-estate.model';\n\n@Component({\n  selector: 'app-all-real-estate',\n  templateUrl: './all-real-estate.component.html',\n  styleUrls: ['./all-real-estate.component.scss']\n})\nexport class AllRealEstateComponent implements OnInit {\n  realEstates: RealEstate[];\n  realEstatesList: RealEstate[] = [];\n  realEstatesFilterList: RealEstate[] = [];         // We Create It Second For Filter\n  error$: Observable<string>;\n  isDeleted = false;\n  config: any;                                          // Config Variable For Pagination Configuration\n  name: string;\n\n  constructor(private store: Store<RealEstateState>,\n              private toaster: ToastrService) { }\n\n  ngOnInit() {\n    this.store.dispatch(realEstateAction.loadRealEstates());\n    // Get All realEstates\n    this.getRealEstates();\n    // Dispatch Error\n    this.store.pipe(select(realEstateSelector.getRealEstateError)).subscribe(\n      error => this.handleError(error)\n    );\n  }\n\n  // Get All realEstates\n  getRealEstates() {\n    this.store.pipe(select(realEstateSelector.realEstatesSelector)).subscribe(\n      (allrealEstates: any) => {\n        console.log('all realEstates', allrealEstates);\n        this.realEstates = allrealEstates;\n        this.realEstatesList = allrealEstates;\n        this.realEstatesFilterList = this.realEstatesList;\n      }\n    );\n    this.config = {\n      itemsPerPage: 5,\n      currentPage: 1,\n      totalItems: this.realEstatesList.length\n    };\n  }\n\n  // Handle Response Error\n  handleError(error) {\n    console.log('error', error);\n    if (error) {\n      if (error.error.error) {\n        this.toaster.error(error.error.error);\n      }\n      if (error.error.msg) {\n        this.toaster.error(error.error.msg);\n      } else {\n        this.toaster.error('Server Error');\n      }\n    }\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  // Delete The Realestate\n  delete(realEstateId: number) {\n    if (confirm('Are You Sure You Want To Delete This RealEstate')) {\n      this.isDeleted = true;\n      this.store.dispatch(realEstateAction.deleteRealEstate({id: realEstateId}));\n      this.toaster.success('RealEstate Successfully Deleted');\n      setTimeout(() => { this.isDeleted = true; }, 1000);\n    } else {\n      return false;\n    }\n  }\n\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.realEstatesFilterList = [...this.realEstatesList];\n    } else {\n      this.realEstatesFilterList = [];\n      this.realEstatesFilterList = this.realEstatesList.filter(res => {\n        if (res.userName) {\n          const userName = res.userName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (userName) {\n            // display the Name Column\n            return userName;\n          }\n        }\n        if (res.country) {\n          const country = res.country.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (country) {\n            // display the Name Column\n            return country;\n          }\n        }\n        if (res.city) {\n          const city = res.city.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (city) {\n            // display the Name Column\n            return city;\n          }\n        }\n        if (res.company) {\n          const company = res.company.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (company) {\n            // display the Name Column\n            return company;\n          }\n        }\n        if (res.realEstateType) {\n          const realEstateType = res.realEstateType.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (realEstateType) {\n            // display the Name Column\n            return realEstateType;\n          }\n        }\n      });\n    }\n  }\n\n}\n","<div *ngIf=\"realEstates != null\">\n    <div *ngIf=\"realEstates.length !== 0\">\n      <!-- <div class=\"container-fluid\"> -->\n        <h1 class=\"text-center details-title my-4\">{{'manage-real-estates-page' | translate}}</h1>\n          <div class=\"row\">\n              <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\n                  <div class=\"form-group mb-4\">\n                      <input\n                        id=\"exampleFormControlInput2\"\n                        [(ngModel)]=\"name\"\n                        (keyup)=\"applyFilter()\"\n                        type=\"text\"\n                        placeholder=\"{{'real-estate-search-input' | translate}}\"\n                        title=\"{{'real-estate-search-input' | translate}}\"\n                        class=\"form-control form-control-underlined border-primary search-input\">\n                  </div>\n              </div>\n              <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n                <!-- <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/realEstates/add\">\n                  <i class=\"fa fa-plus\"></i>\n                  {{'add-new-realEstate' | translate}}\n                </a> -->\n              </div>\n          </div>\n        <div class=\"table-responsive text-center\">\n            <table class=\"table table-bordered main-table\">\n                <tr class=\"bg-dark text-white\">\n                  <td>{{'image' | translate}}</td>\n                  <td>{{'username' | translate}}</td>\n                  <td>{{'country' | translate}}</td>\n                  <td>{{'real-estate-type' | translate}}</td>\n                  <td>{{'number-of-floors' | translate}}</td>\n                  <!-- <td>{{'rooms' | translate}}</td> -->\n                  <td>{{'city' | translate}}</td>\n                  <td>{{'price' | translate}}</td>\n                  <td>{{'createdAt' | translate}}</td>\n                  <td>{{'control' | translate}}</td>\n                </tr>\n                <tr *ngFor=\"let realEstate of realEstatesFilterList | paginate: config\">\n                  <td><img src=\"{{realEstate?.image}}\" alt=\"Real Estate Image\" class=\"img-thumbnail img-custom\"></td>\n                  <td>{{realEstate?.userName ? realEstate?.userName : '-'}}</td>\n                  <td>{{realEstate?.country ? realEstate?.country : '-'}}</td>\n                  <td>{{realEstate?.realEstateType ? realEstate?.realEstateType : '-'}}</td>\n                  <td>{{realEstate?.numberOfFloors ? realEstate?.numberOfFloors : '-'}}</td>\n                  <!-- <td>{{realEstate?.rooms ? realEstate?.rooms : '-'}}</td> -->\n                  <td>{{realEstate?.city ? realEstate?.city : '-'}}</td>\n                  <td>{{realEstate?.price ? (realEstate?.price | currency) : '-'}}</td>\n                  <td style=\"white-space: nowrap;\">{{realEstate?.createdAt?.timestamp * 1000 | date: 'MMM d, y, h:mm:ss a'}}</td>\n                  <!-- <td>\n                    <a (click)=\"suggest(realEstate.id, (realEstate.suggest ? false : true))\"\n                       class=\"text-primary mr-1 mb-1\"\n                       title=\"Change To {{realEstate.suggest ? 'Not Recommended' : 'Recommended' }}\"\n\n                       style=\"cursor: pointer; {{ suggestProgress ? 'pointer-events: none;' : '' }}\">\n                      {{ realEstate.suggest ? 'Recommended' : 'Not Recommended' }}\n                    </a>\n                  </td> -->\n                  <td>\n                      <a routerLink=\"/real-estate/{{realEstate.id}}\" class=\"btn btn-success btn-sm mr-1 mb-1\">\n                        {{'view' | translate}}\n                    </a>\n                    <a (click)=\"delete(realEstate.id)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\n                        {{'delete' | translate}}\n                      </a>\n                  </td>\n                </tr>\n            </table>\n            <pagination-controls class=\"my-pagination\"\n                                 (pageChange)=\"pageChanged($event)\"\n                                 autoHide=\"true\"\n                                 maxSize=\"5\"\n                                 responsive=\"true\"\n                                 previousLabel=\"{{'prev' | translate}}\"\n                                 nextLabel=\"{{'next' | translate}}\"\n                                 screenReaderPaginationLabel=\"Pagination\"\n                                 screenReaderPageLabel=\"page\"\n                                 screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n            </pagination-controls>\n        </div>\n      <!-- </div> -->\n    </div>\n    <!-- <div *ngIf=\"realEstatesFilterList.length === 0\">\n        <div class=\"container\">\n            <div class=\"alert alert-primary text-center mt-5\">{{'realEstates-not-found' | translate}}</div>\n            <a routerLink=\"/realEstates/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n                <i class=\"fa fa-plus\"></i>\n                {{'add-new-realEstate' | translate}}\n            </a>\n        </div>\n    </div> -->\n</div>\n<div *ngIf=\"realEstates.length === 0\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import {Component, Inject, OnInit, Renderer2} from '@angular/core';\nimport {RealEstateState} from '../../store/real-estate.reducer';\nimport {select, Store} from '@ngrx/store';\nimport {ActivatedRoute} from '@angular/router';\nimport * as realEstateAction from '../../store/real-estate.actions';\nimport {realEstateSelector} from '../../store/real-estate.selector';\nimport {RealEstateDetails} from '../../model/real-estate-details';\nimport {DOCUMENT} from '@angular/common';\n\n@Component({\n  selector: 'app-real-estate-details',\n  templateUrl: './real-estate-details.component.html',\n  styleUrls: ['./real-estate-details.component.scss']\n})\nexport class RealEstateDetailsComponent implements OnInit {\n  realEstate: RealEstateDetails;\n  rendering = false;\n  imagesRendering = false;\n\n  constructor(private store: Store<RealEstateState>,\n              private activatedRoute: ActivatedRoute,\n              @Inject(DOCUMENT) private document: Document,\n              private render: Renderer2) { }\n\n  ngOnInit(): void {\n    const realEstateID = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.store.dispatch(realEstateAction.loadRealEstate({ id: realEstateID }));\n    this.getRealEstateDetails();\n  }\n\n  getRealEstateDetails() {\n    this.store.pipe(select(realEstateSelector)).subscribe(data => {\n      console.log(data);\n      this.realEstate = data;\n    });\n  }\n\n  viewImage(element: HTMLDivElement) {\n    const mainImage = this.document.querySelector('.image-details img');\n    const mainImageLink = mainImage.getAttribute('src');\n    const currentImage = element.firstChild as HTMLImageElement;\n    const currentImageLink = currentImage.getAttribute('src');\n    // force user to click on the same image for one time\n    // if (mainImageLink != currentImageLink) {\n    this.rendering = true;\n    this.imagesRendering = true;\n    this.render.setAttribute(currentImage, 'src', mainImageLink);\n    this.render.setAttribute(mainImage, 'src', currentImageLink);\n    // }\n  }\n\n  // Check If main image is rendering\n  checkImageloaded()  {\n    console.log('main Image rendered');\n    this.rendering = false;\n  }\n\n  // Check if all second images is rendering\n  checkSecondImagesloaded(customId: number) {\n    // check if last second image is rendering finished\n    if ((customId + 1) == this.realEstate.images.length) {\n      // Check If the main image is rendering finish\n      if (!this.render) {\n        console.log('rendering all image');\n        this.imagesRendering = false;\n      }\n    }\n  }\n\n}\n","<div class=\"car-details\" *ngIf=\"realEstate\">\n  <div class=\"container\">\n    <h1 class=\"my-3 details-title\">{{'real-estate-details-page' | translate}}</h1>\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-6 mx-auto text-center\">\n        <div class=\"image-details mb-3\">\n          <img (load)=\"checkImageloaded()\" class=\"img-fluid img-thumbnail\" src=\"{{realEstate?.image}}\" (error)=\"realEstate.image = '../../../../../assets/default-Item.jpg'\" alt=\"{{realEstate?.company}} Image\" />\n        </div>\n        <div class=\"row w-100 mx-auto\" *ngIf=\"realEstate.images.length != 0\">\n          <div class=\"col-4 mx-auto px-0 mb-1\" *ngFor=\"let img of realEstate.images; let i = index\">\n            <div #secondImageDetails class=\"second-images-details\" (click)=\"viewImage(secondImageDetails)\">\n              <img (load)=\"checkSecondImagesloaded(i)\" class=\"img-fluid\" src=\"{{img?.image}}\" (error)=\"img.image = '../../../../../assets/default-Item.jpg'\" alt=\"Second Images\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"overlay\" *ngIf=\"rendering\">\n          <div class=\"overlay-lds-ring\"><div></div><div></div><div></div><div></div></div>\n        </div>\n      </div>\n      <div class=\"col-12 col-sm-6 mx-auto\">\n        <div class=\"info-details\">\n          <ul class=\"list-unstyled\">\n            <li>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h4 class=\"text-info\">{{realEstate?.realEstateType}}</h4>\n                </div>\n                <div class=\"col align-self-center text-right\">\n                  <span class=\"status border border-secondary rounded py-1 px-2\">{{realEstate?.status}}</span>\n                </div>\n              </div>\n            </li>\n            <li class=\"my-2\">\n              <div class=\"row\">\n                <div class=\"col-4 col-xl-3 text-center\">\n                  <img class=\"img-fluid img-thumbnail\" src=\"{{realEstate?.userImage}}\" (error)=\"realEstate.userImage = '../../../../../assets/default-avatar.jpg'\" alt=\"{{realEstate?.username}} Image\" />\n                </div>\n                <div class=\"col-7 align-self-center\">\n                  <h4 class=\"mb-2 text-secondary\">{{realEstate?.username}}</h4>\n                </div>\n              </div>\n            </li>\n            <li *ngIf=\"realEstate?.country\"><p class=\"mb-2\">{{'country' | translate }} : <span class=\"text-secondary\">{{realEstate?.country}}</span></p></li>\n            <li *ngIf=\"realEstate?.city\"><p class=\"mb-2\">{{'city' | translate }} : <span class=\"text-secondary\">{{realEstate?.city}}</span></p></li>\n            <li *ngIf=\"realEstate?.price\"><p class=\"mb-2\">{{'price' | translate }} : <span class=\"text-secondary\">{{realEstate?.price | currency}}</span></p></li>\n            <li *ngIf=\"realEstate?.realEstateType\"><p class=\"mb-2\">{{'real-estate-type' | translate }} : <span class=\"text-secondary\">{{realEstate?.realEstateType}}</span></p></li>\n          </ul>\n        </div><!--.info-details-->\n      </div><!--.col-12-->\n      <div class=\"col-12\">\n        <hr class=\"w-50 mx-auto\">\n      </div>\n      <div class=\"col-12\">\n        <h3 class=\"\">{{'more-info' | translate}} :</h3>\n      </div>\n      <div class=\"col-12 col-sm-6 mx-auto\">\n        <ul class=\"list-unstyled\">\n          <li *ngIf=\"realEstate?.space\"><p class=\"mb-2\">{{'space' | translate }} : {{realEstate?.space}}</p></li>\n          <li *ngIf=\"realEstate?.numberOfFloors\"><p class=\"mb-2\">{{'number-of-floors' | translate }} : {{realEstate?.numberOfFloors}}</p></li>\n          <li *ngIf=\"realEstate?.rooms\"><p class=\"mb-2\">{{'rooms' | translate }} : {{realEstate?.rooms}}</p></li>\n          <li *ngIf=\"realEstate?.homeFurnishing\"><p class=\"mb-2\">{{'home-furnishing' | translate }} : {{realEstate?.homeFurnishing}}</p></li>\n        </ul>\n      </div><!--.col-12-->\n      <div class=\"col-12 col-sm-6 mx-auto\">\n        <ul class=\"list-unstyled\">\n          <li *ngIf=\"realEstate?.createdAt\"><p class=\"mb-2\">{{'createdAt' | translate }} : {{realEstate?.createdAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</p></li>\n          <li *ngIf=\"realEstate?.updatedAt\"><p class=\"mb-2\">{{'updatedAt' | translate }} : {{realEstate?.updatedAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</p></li>\n        </ul>\n      </div><!--.col-12-->\n      <div class=\"col-12\" *ngIf=\"realEstate?.description\">\n        <h5>{{'description' | translate }} : </h5>\n        <p>{{realEstate?.description}}</p>\n      </div>\n    </div><!--.row-->\n  </div>\n</div>\n<div *ngIf=\"!realEstate\">\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllRealEstateComponent } from './components/all-real-estate/all-real-estate.component';\nimport {RealEstateDetailsComponent} from './components/real-estate-details/real-estate-details.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AllRealEstateComponent },\n  { path: ':id', component: RealEstateDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RealEstateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from 'src/app/@theme/theme.module';\nimport { RealEstateRoutingModule } from './real-estate-routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { AllRealEstateComponent } from './components/all-real-estate/all-real-estate.component';\nimport * as fromRealEstate from './store/real-estate.reducer';\nimport { RealEstateEffects } from './store/real-estate.effects';\nimport { RealEstateDetailsComponent } from './components/real-estate-details/real-estate-details.component';\n\n\n@NgModule({\n  declarations: [ AllRealEstateComponent, RealEstateDetailsComponent ],\n  imports: [\n    ThemeModule,\n    RealEstateRoutingModule,\n    StoreModule.forFeature(fromRealEstate.realEstatesFeatureKey, fromRealEstate.reducer),\n    EffectsModule.forFeature([RealEstateEffects])\n  ]\n})\nexport class RealEstateModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AdminConfig } from '../../AdminConfig';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RealEstateService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  private static errorHandler(error: HttpErrorResponse) {\n    return throwError(error || 'Server Error');\n  }\n\n  // all RealEstate\n  getRealEstates(): Observable<any> {\n    return this.httpClient.get<any>(\n      AdminConfig.allRealEstateAPI\n    ).pipe(catchError(RealEstateService.errorHandler));\n  }\n\n\n  // RealEstate Details\n  realEstateDetails(realEstateID: number): Observable<any> {\n    return this.httpClient.get<any>(\n      `${AdminConfig.getRealEstateAPI}/${realEstateID}`\n    ).pipe(catchError(RealEstateService.errorHandler));\n  }\n\n  // Delete Real Estate\n  deleteRealEstates(deviceId: number): Observable<any> {\n    return this.httpClient.delete<any>(\n      `${AdminConfig.deleteRealEstateAPI}/${deviceId}`\n    ).pipe(catchError(RealEstateService.errorHandler));\n  }\n\n}\n","import { createAction, props } from '@ngrx/store';\nimport { RealEstate } from '../model/real-estate.model';\nimport {RealEstateDetails} from '../model/real-estate-details';\n\n\nexport const loadRealEstates = createAction(\n  '[RealEstate/API] Load RealEstates'\n);\n\nexport const loadRealEstatesSuccess = createAction(\n  '[RealEstate/API] Load RealEstates Success',\n  props<{ Data: RealEstate[] }>()\n);\n\nexport const loadRealEstatesFailure = createAction(\n  '[RealEstate/API] Load RealEstates Failure',\n  props<{ error: string }>()\n);\n\nexport const loadRealEstate = createAction(\n  '[RealEstate Components/API] Load Real Estate',\n  props<{ id: number }>()\n);\n\nexport const loadRealEstateSuccess = createAction(\n  '[RealEstate Effect/API] Load Real Estate Success',\n  props<{ Data: RealEstateDetails }>()\n);\n\nexport const loadRealEstateFailure = createAction(\n  '[RealEstate Effect/API] Load Real Estate Failure',\n  props<{ error: string }>()\n);\n\nexport const deleteRealEstate = createAction(\n  '[RealEstate Components/API] Delete RealEstate',\n  props<{ id: number }>()\n);\n\nexport const deleteRealEstateSuccess = createAction(\n  '[RealEstate Effect/API] Delete RealEstate Success',\n  props<{ id: number }>()\n);\n\nexport const deleteRealEstateFailure = createAction(\n  '[RealEstate Effect/API] Delete RealEstate Failure',\n  props<{ error: string }>()\n);\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ToastrService } from 'ngx-toastr';\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, tap } from 'rxjs/operators';\nimport { RealEstateService } from '../services/real-estate.service';\nimport * as realEstateAction from '../store/real-estate.actions';\n\n\n@Injectable()\nexport class RealEstateEffects {\n\n  constructor(private actions$: Actions,\n              private realEstateService: RealEstateService,\n              private toaster: ToastrService) {}\n\n  // Load Real Estate\n  loadRealEstates$ = createEffect(() => this.actions$.pipe(\n    ofType(realEstateAction.loadRealEstates),\n    mergeMap(() => this.realEstateService.getRealEstates()\n      .pipe(\n        map(response => realEstateAction.loadRealEstatesSuccess(response)),\n        catchError(error => of(realEstateAction.loadRealEstatesFailure(error)))\n      )\n    )\n  ));\n\n  // Load Real Estate Details\n  loadRealEstate$ = createEffect(() => this.actions$.pipe(\n    ofType(realEstateAction.loadRealEstate),\n    mergeMap(action => this.realEstateService.realEstateDetails(action.id)\n      .pipe(\n        map(response => realEstateAction.loadRealEstateSuccess(response)),\n        catchError(error => of(realEstateAction.loadRealEstateFailure(error)))\n      )\n    )\n  ));\n\n  // Delete Real Estate Effect\n  deleteRealEstate$ = createEffect(() => this.actions$.pipe(\n    ofType(realEstateAction.deleteRealEstate),\n    mergeMap(action => this.realEstateService.deleteRealEstates(action.id)\n      .pipe(\n        map(response => realEstateAction.deleteRealEstateSuccess({id: action.id})),\n        catchError(error => of(realEstateAction.deleteRealEstateFailure({error})))\n      )\n    )\n  ));\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { RealEstate } from '../model/real-estate.model';\nimport * as RealEstateActions from './real-estate.actions';\nimport {RealEstateDetails} from '../model/real-estate-details';\n\nexport const realEstatesFeatureKey = 'realEstates';\n\nexport interface RealEstateState extends EntityState<RealEstate> {\n  // additional entities state properties\n  Data: RealEstate[];\n  selectedRealEstate: RealEstateDetails;\n  error: string;\n}\n\nexport const adapter: EntityAdapter<RealEstate> = createEntityAdapter<RealEstate>();\n\nexport const initialState: RealEstateState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  selectedRealEstate: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(RealEstateActions.loadRealEstatesSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(RealEstateActions.loadRealEstatesFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(RealEstateActions.loadRealEstateSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        selectedRealEstate: action.Data\n      };\n    }\n  ),\n  on(RealEstateActions.loadRealEstateFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(RealEstateActions.deleteRealEstate,\n    (state, action) => adapter.removeOne(action.id, state)\n  )\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { realEstatesFeatureKey, RealEstateState, selectAll } from \"./real-estate.reducer\";\r\n\r\nconst realEstateFeatureState = createFeatureSelector<RealEstateState>(realEstatesFeatureKey);\r\n// real estates selector\r\nexport const realEstatesSelector = createSelector(realEstateFeatureState, selectAll);\r\n\r\n// real estate details selector\r\nexport const realEstateSelector = createSelector(realEstateFeatureState, (state: RealEstateState) => state.selectedRealEstate);\r\n\r\n// real estate error selector\r\nexport const getRealEstateError = createSelector(realEstateFeatureState, (state: RealEstateState) => state.error);\r\n"]}