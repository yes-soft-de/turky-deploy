{"version":3,"sources":["webpack:///src/app/pages/devices/components/all-devices/all-devices.component.ts","webpack:///src/app/pages/devices/components/all-devices/all-devices.component.html","webpack:///src/app/pages/devices/components/device-details/device-details.component.ts","webpack:///src/app/pages/devices/components/device-details/device-details.component.html","webpack:///src/app/pages/devices/devices-routing.module.ts","webpack:///src/app/pages/devices/devices.module.ts","webpack:///src/app/pages/devices/services/devices.service.ts","webpack:///src/app/pages/devices/store/device.actions.ts","webpack:///src/app/pages/devices/store/device.effects.ts","webpack:///src/app/pages/devices/store/device.reducer.ts","webpack:///src/app/pages/devices/store/device.selector.ts"],"names":["AllDevicesComponent","store","toaster","devicesList","devicesFilterList","isDeleted","dispatch","getDevices","pipe","subscribe","error","console","log","alldevices","devices","config","itemsPerPage","currentPage","totalItems","length","msg","event","deviceId","confirm","id","success","setTimeout","name","filter","res","userName","username","toLocaleLowerCase","match","brand","cpu","price","toString","type","selector","templateUrl","styleUrls","DeviceDetailsComponent","activatedRoute","document","render","rendering","imagesRendering","deviceID","Number","snapshot","paramMap","get","deviceDetails","data","device","element","mainImage","querySelector","mainImageLink","getAttribute","currentImage","firstChild","currentImageLink","setAttribute","customId","images","Document","routes","path","component","DevicesRoutingModule","forChild","imports","exports","DevicesModule","forFeature","declarations","DevicesService","httpClient","allDevicesAPI","errorHandler","getDeviceAPI","deleteDeviceAPI","providedIn","loadDevices","loadDevicesSuccess","loadDevicesFailure","loadDevice","loadDeviceSuccess","loadDeviceFailure","deleteDevice","deleteDeviceSuccess","deleteDeviceFailure","addDevice","upsertDevice","addDevices","upsertDevices","updateDevice","updateDevices","deleteDevices","clearDevices","DeviceEffects","actions$","deviceService","loadDevices$","devicesResponse","loadDevice$","action","response","deleteDevice$","devicesFeatureKey","adapter","initialState","getInitialState","Data","undefined","selectedDevice","reducer","state","setAll","removeOne","addOne","upsertOne","addMany","upsertMany","updateOne","updateMany","removeMany","ids","removeAll","getSelectors","selectIds","selectEntities","selectAll","selectTotal","deviceFeatureState","allDevicesSelector","allDevicesAndCarsSelector","deviceDetailsSelector","getDevicesError"],"mappings":"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","file":"devices-devices-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { DevicesService } from '../../services/devices.service';\nimport { DeviceState } from '../../store/device.reducer';\nimport * as deviceAction from '../../store/device.actions';\nimport * as deviceSelector from '../../store/device.selector';\nimport { Device } from '../../model/device';\n\n@Component({\n  selector: 'app-all-devices',\n  templateUrl: './all-devices.component.html',\n  styleUrls: ['./all-devices.component.scss']\n})\nexport class AllDevicesComponent implements OnInit {\n  devices: Device[];\n  devicesList: Device[] = [];\n  devicesFilterList: Device[] = [];                     // We Create It Second For Filter\n  error$: Observable<string>;\n  isDeleted = false;\n  config: any;                                          // Config Variable For Pagination Configuration\n  name: string;\n\n  constructor(private store: Store<DeviceState>,\n              private toaster: ToastrService) { }\n\n  ngOnInit() {\n    this.store.dispatch(deviceAction.loadDevices());\n    // Get All devices\n    this.getDevices();\n    // Dispatch Error\n    this.store.pipe(select(deviceSelector.getDevicesError)).subscribe(\n      error => console.log('error', error)\n    );\n  }\n\n  // Get All devices\n  getDevices() {\n    this.store.pipe(select(deviceSelector.allDevicesSelector)).subscribe(\n      (alldevices: any) => {\n        console.log('all devices', alldevices);\n        this.devices = alldevices;\n        this.devicesList = alldevices;\n        this.devicesFilterList = this.devicesList;\n        this.isDeleted = false;\n      }\n    );\n    this.config = {\n      itemsPerPage: 5,\n      currentPage: 1,\n      totalItems: this.devicesList.length\n    };\n  }\n\n  // Handle Response Error\n  handleError(error) {\n    console.log('error : ', error);\n    if (error) {\n      if (error.error.error) {\n        this.toaster.error(error.error.error);\n      }\n      if (error.error.msg) {\n        this.toaster.error(error.error.msg);\n      } else {\n        this.toaster.error('Server Error');\n      }\n    }\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  // Delete The Device\n  delete(deviceId: number) {\n    if (confirm('Are You Sure You Want To Delete This Device')) {\n      this.isDeleted = true;\n      this.store.dispatch(deviceAction.deleteDevice({id: deviceId}));\n      this.toaster.success('Device Successfully Deleted');\n      setTimeout(() => { this.isDeleted = false; }, 1000);\n    } else {\n      return false;\n    }\n  }\n\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.devicesFilterList = [...this.devicesList];\n    } else {\n      this.devicesFilterList = [];\n      this.devicesFilterList = this.devicesList.filter(res => {\n        if (res.userName) {\n          const username = res.userName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (username) {\n            // display the Name Column\n            return username;\n          }\n        }\n        if (res.brand) {\n          const brand = res.brand.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (brand) {\n            // display the Name Column\n            return brand;\n          }\n        }\n        if (res.cpu) {\n          const cpu = res.cpu.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (cpu) {\n            // display the Name Column\n            return cpu;\n          }\n        }\n        if (res.price) {\n          const price = res.price.toString().toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (price) {\n            // display the Name Column\n            return price;\n          }\n        }\n        if (res.type) {\n          const type = res.type.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (type) {\n            // display the Name Column\n            return type;\n          }\n        }\n      });\n    }\n  }\n\n}\n","<div *ngIf=\"devices != null\">\r\n    <div *ngIf=\"devices.length !== 0\">\r\n      <!-- <div class=\"container-fluid\"> -->\r\n        <h1 class=\"text-center details-title my-4\">{{'manage-devices-page' | translate}}</h1>\r\n          <div class=\"row\">\r\n              <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\r\n                  <div class=\"form-group mb-4\">\r\n                      <input\r\n                        id=\"exampleFormControlInput2\"\r\n                        [(ngModel)]=\"name\"\r\n                        (keyup)=\"applyFilter()\"\r\n                        type=\"text\"\r\n                        placeholder=\"{{'device-search-input' | translate}}\"\r\n                        title=\"{{'device-search-input' | translate}}\"\r\n                        class=\"form-control form-control-underlined border-primary search-input\">\r\n                  </div>\r\n              </div>\r\n              <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\r\n                <!-- <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/devices/add\">\r\n                  <i class=\"fa fa-plus\"></i>\r\n                  {{'add-new-car' | translate}}\r\n                </a> -->\r\n              </div>\r\n          </div>\r\n        <div class=\"table-responsive text-center\">\r\n            <table class=\"table table-bordered main-table\">\r\n                <tr class=\"bg-dark text-white\">\r\n                    <td>{{'image' | translate}}</td>\r\n                    <td>{{'username' | translate}}</td>\r\n                    <td>{{'brand' | translate}}</td>\r\n                    <td>{{'type' | translate}}</td>\r\n                    <td>{{'description' | translate}}</td>\r\n                    <td>{{'country' | translate}}</td>\r\n                    <td>{{'city' | translate}}</td>\r\n                    <td>{{'price' | translate}}</td>\r\n                    <td>{{'createdAt' | translate}}</td>\r\n                    <td>{{'control' | translate}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let device of devicesFilterList | paginate: config\">\r\n                  <td><img src=\"{{device?.image}}\" alt=\"{{device.brand}} Image\" class=\"img-thumbnail img-custom\"></td>\r\n                  <td>{{device?.userName ? device?.userName : '-'}}</td>\r\n                  <td>{{device?.brand ? device?.brand : '-'}}</td>\r\n                  <td>{{device?.type ? device?.type : '-'}}</td>\r\n                  <td class=\"td-custom\">{{device?.description ? device?.description : '-'}}</td>\r\n                  <td>{{device?.country ? device?.country : '-'}}</td>\r\n                  <td>{{device?.city ? device?.city : '-'}}</td>\r\n                  <td>{{device?.price ? (device?.price | currency) : '-'}}</td>\r\n                  <td style=\"white-space: nowrap;\">{{device?.createdAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</td>\r\n                  <!-- <td style=\"white-space: nowrap;\">{{device.yearOfRelease.timestamp * 1000 | date: 'yyyy-MM-dd'}}</td> -->\r\n                  <!-- <td>\r\n                    <a (click)=\"suggest(device.id, (device.suggest ? false : true))\"\r\n                       class=\"text-primary mr-1 mb-1\"\r\n                       title=\"Change To {{device.suggest ? 'Not Recommended' : 'Recommended' }}\"\r\n\r\n                       style=\"cursor: pointer; {{ suggestProgress ? 'pointer-events: none;' : '' }}\">\r\n                      {{ device.suggest ? 'Recommended' : 'Not Recommended' }}\r\n                    </a>\r\n                  </td> -->\r\n                  <td>\r\n                      <a routerLink=\"/devices/{{device.id}}\" class=\"btn btn-success btn-sm mr-1 mb-1\">\r\n                        {{'view' | translate}}\r\n                    </a>\r\n                    <a (click)=\"delete(device.id)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\r\n                        {{'delete' | translate}}\r\n                      </a>\r\n                  </td>\r\n                </tr>\r\n            </table>\r\n            <pagination-controls class=\"my-pagination\"\r\n                                 (pageChange)=\"pageChanged($event)\"\r\n                                 autoHide=\"true\"\r\n                                 maxSize=\"5\"\r\n                                 responsive=\"true\"\r\n                                 previousLabel=\"{{'prev' | translate}}\"\r\n                                 nextLabel=\"{{'next' | translate}}\"\r\n                                 screenReaderPaginationLabel=\"Pagination\"\r\n                                 screenReaderPageLabel=\"page\"\r\n                                 screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\r\n            </pagination-controls>\r\n        </div>\r\n      <!-- </div> -->\r\n    </div>\r\n    <!-- <div *ngIf=\"devicesFilterList.length === 0\">\r\n        <div class=\"container\">\r\n            <div class=\"alert alert-primary text-center mt-5\">{{'devices-not-found' | translate}}</div>\r\n            <a routerLink=\"/devices/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\r\n                <i class=\"fa fa-plus\"></i>\r\n                {{'add-new-device' | translate}}\r\n            </a>\r\n        </div>\r\n    </div> -->\r\n</div>\r\n<div *ngIf=\"devices.length === 0\">\r\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n</div>\r\n","import {Component, Inject, OnInit, Renderer2} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {DeviceState} from '../../store/device.reducer';\nimport {ActivatedRoute} from '@angular/router';\nimport * as deviceAction from '../../store/device.actions';\nimport { deviceDetailsSelector } from '../../store/device.selector';\nimport {DeviceDetails} from '../../model/device-details';\nimport {DOCUMENT} from '@angular/common';\n\n@Component({\n  selector: 'app-device-details',\n  templateUrl: './device-details.component.html',\n  styleUrls: ['./device-details.component.scss']\n})\nexport class DeviceDetailsComponent implements OnInit {\n  device: DeviceDetails;\n  rendering = false;\n  imagesRendering = false;\n\n  constructor(private store: Store<DeviceState>,\n              private activatedRoute: ActivatedRoute,\n              @Inject(DOCUMENT) private document: Document,\n              private render: Renderer2) { }\n\n  ngOnInit(): void {\n    const deviceID = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.store.dispatch(deviceAction.loadDevice({ id: deviceID }));\n    this.deviceDetails();\n  }\n\n  // Get Device Details\n  deviceDetails() {\n    this.store.pipe(select(deviceDetailsSelector)).subscribe(data => {\n      this.device = data;\n      console.log(data);\n    });\n  }\n\n  viewImage(element: HTMLDivElement) {\n    const mainImage = this.document.querySelector('.image-details img');\n    const mainImageLink = mainImage.getAttribute('src');\n    const currentImage = element.firstChild as HTMLImageElement;\n    const currentImageLink = currentImage.getAttribute('src');\n    // force user to click on the same image for one time\n    // if (mainImageLink != currentImageLink) {\n    this.rendering = true;\n    this.imagesRendering = true;\n    this.render.setAttribute(currentImage, 'src', mainImageLink);\n    this.render.setAttribute(mainImage, 'src', currentImageLink);\n    // }\n  }\n\n  // Check If main image is rendering\n  checkImageloaded()  {\n    console.log('main Image rendered');\n    this.rendering = false;\n  }\n\n  // Check if all second images is rendering\n  checkSecondImagesloaded(customId: number) {\n    // check if last second image is rendering finished\n    if ((customId + 1) == this.device.images.length) {\n      // Check If the main image is rendering finish\n      if (!this.render) {\n        console.log('rendering all image');\n        this.imagesRendering = false;\n      }\n    }\n  }\n}\n","<div class=\"device-details\" *ngIf=\"device\">\n  <div class=\"container\">\n    <h1 class=\"my-3 details-title\">{{'device-details-page' | translate}}</h1>\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-6 mx-auto text-center\">\n        <div class=\"image-details mb-3\">\n          <img (load)=\"checkImageloaded()\" class=\"img-fluid img-thumbnail\" src=\"{{device?.image}}\" (error)=\"device.image = '../../../../../assets/default-Item.jpg'\" alt=\"{{device?.brand}} Image\" />\n        </div>\n        <div class=\"row w-100 mx-auto\" *ngIf=\"device.images.length != 0\">\n          <div class=\"col-4 mx-auto px-0 mb-1\" *ngFor=\"let img of device.images; let i = index\">\n            <div #secondImageDetails class=\"second-images-details\" (click)=\"viewImage(secondImageDetails)\">\n              <img (load)=\"checkSecondImagesloaded(i)\" class=\"img-fluid\" src=\"{{img?.image}}\" (error)=\"img.image = '../../../../../assets/default-Item.jpg'\" alt=\"Second Images\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"overlay\" *ngIf=\"rendering && imagesRendering\">\n          <div class=\"overlay-lds-ring\"><div></div><div></div><div></div><div></div></div>\n        </div>\n      </div>\n      <div class=\"col-12 col-sm-6 mx-auto\">\n        <div class=\"info-details\">\n          <ul class=\"list-unstyled\">\n            <li>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h4 class=\"text-info\">{{device?.brand}}</h4>\n                </div>\n                <div class=\"col align-self-center text-right\">\n                  <span class=\"status border border-secondary rounded py-1 px-2\">{{device?.status}}</span>\n                </div>\n              </div>\n            </li>\n            <li class=\"my-2\" *ngIf=\"device?.userImage && device?.username\">\n              <div class=\"row\">\n                <div class=\"col-4 col-xl-3 text-center\">\n                  <img class=\"img-fluid img-thumbnail\" src=\"{{device?.userImage}}\" alt=\"{{device?.username}} Image\" />\n                </div>\n                <div class=\"col-7 align-self-center\">\n                  <h4 class=\"mb-2 text-secondary\">{{device?.username}}</h4>\n                </div>\n              </div>\n            </li>\n            <li *ngIf=\"device?.type\"><p class=\"mb-2\">{{'type' | translate }} : <span class=\"text-secondary\">{{device?.type}}</span></p></li>\n            <li *ngIf=\"device?.country\"><p class=\"mb-2\">{{'country' | translate }} : <span class=\"text-secondary\">{{device?.country}}</span></p></li>\n            <li *ngIf=\"device?.price\"><p class=\"mb-2\">{{'price' | translate }} : <span class=\"text-secondary\">{{device?.price | currency}}</span></p></li>\n            <li *ngIf=\"device?.yearOfRelease\"><p class=\"mb-2\">{{'yearOfRelease' | translate }} : <span class=\"text-secondary\">{{device?.yearOfRelease.timestamp * 1000 | date: 'yyyy-MM-dd'}}</span></p></li>\n          </ul>\n        </div><!--.info-details-->\n      </div><!--.col-12-->\n      <div class=\"col-12\">\n        <hr class=\"w-50 mx-auto\">\n      </div>\n      <div class=\"col-12\">\n        <h3 class=\"\">{{'more-info' | translate}} :</h3>\n      </div>\n      <div class=\"col-12 col-sm-6 mx-auto\">\n        <ul class=\"list-unstyled\">\n          <li *ngIf=\"device?.city\"><p class=\"mb-2\">{{'city' | translate }} : {{device?.city}}</p></li>\n<!--          <li *ngIf=\"device?.distance\"><p class=\"mb-2\">{{'distance' | translate }} : {{device?.distance}}</p></li>-->\n        </ul>\n      </div><!--.col-12-->\n      <div class=\"col-12 col-sm-6 mx-auto\">\n        <ul class=\"list-unstyled\">\n          <li *ngIf=\"device?.createdBy\"><p class=\"mb-2\">{{'createdBy' | translate }} : {{device?.createdBy}}</p></li>\n          <li *ngIf=\"device?.createdAt\"><p class=\"mb-2\">{{'createdAt' | translate }} : {{device?.createdAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</p></li>\n          <li *ngIf=\"device?.updatedAt\"><p class=\"mb-2\">{{'updatedAt' | translate }} : {{device?.updatedAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</p></li>\n        </ul>\n      </div><!--.col-12-->\n      <div class=\"col-12\" *ngIf=\"device?.description\">\n        <h5>{{'description' | translate }} : </h5>\n        <p>{{device?.description}}</p>\n      </div>\n    </div><!--.row-->\n  </div>\n</div>\n<div *ngIf=\"!device\">\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllDevicesComponent } from './components/all-devices/all-devices.component';\nimport {DeviceDetailsComponent} from './components/device-details/device-details.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AllDevicesComponent },\n  { path: ':id', component: DeviceDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DevicesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from 'src/app/@theme/theme.module';\n\nimport { DevicesRoutingModule } from './devices-routing.module';\nimport { AllDevicesComponent } from './components/all-devices/all-devices.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromDevice from './store/device.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { DeviceEffects } from './store/device.effects';\nimport { DeviceDetailsComponent } from './components/device-details/device-details.component';\n\n\n@NgModule({\n  declarations: [AllDevicesComponent, DeviceDetailsComponent],\n  imports: [\n    ThemeModule,\n    DevicesRoutingModule,\n    StoreModule.forFeature(fromDevice.devicesFeatureKey, fromDevice.reducer),\n    EffectsModule.forFeature([DeviceEffects])\n  ]\n})\nexport class DevicesModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AdminConfig } from '../../AdminConfig';\nimport { DeviceResponse } from '../model/device-response';\nimport {DeviceDetailsResponse} from '../model/device-details-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DevicesService {\n\n\n  constructor(private httpClient: HttpClient) { }\n\n  private static errorHandler(error: HttpErrorResponse) {\n    return throwError(error || 'Server Error');\n  }\n\n\n  // all Devices\n  getDevices(): Observable<DeviceResponse> {\n    return this.httpClient.get<DeviceResponse>(\n      AdminConfig.allDevicesAPI\n    ).pipe(catchError(DevicesService.errorHandler));\n  }\n\n  // Car Details\n  deviceDetails(deviceID: number): Observable<DeviceDetailsResponse> {\n    return this.httpClient.get<DeviceDetailsResponse>(\n      `${AdminConfig.getDeviceAPI}/${deviceID}`\n    );\n  }\n\n  // Delete Device\n  deleteDevice(deviceId: number): Observable<any> {\n    return this.httpClient.delete<any>(\n      `${AdminConfig.deleteDeviceAPI}/${deviceId}`\n    ).pipe(catchError(DevicesService.errorHandler));\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Device } from '../model/device';\nimport {DeviceDetails} from '../model/device-details';\n\n\nexport const loadDevices = createAction(\n  '[Device/API] Load Devices'\n);\n\nexport const loadDevicesSuccess = createAction(\n  '[Device/API] Load Devices Success',\n  props<{ Data: Device[] }>()\n);\n\nexport const loadDevicesFailure = createAction(\n  '[Device/API] Load Devices Failure',\n  props<{ error: string }>()\n);\n\nexport const loadDevice = createAction(\n  '[Device Components/API] Load Device',\n  props<{ id: number }>()\n);\n\nexport const loadDeviceSuccess = createAction(\n  '[Device Effect/API] Load Device Success',\n  props<{ Data: DeviceDetails }>()\n);\n\nexport const loadDeviceFailure = createAction(\n  '[Device Effect/API] Load Device Failure',\n  props<{ error: string }>()\n);\n\nexport const deleteDevice = createAction(\n  '[Device Component/API] Delete Device',\n  props<{ id: number }>()\n);\n\nexport const deleteDeviceSuccess = createAction(\n  '[Device Effect/API] Delete Device Success',\n  props<{ id: number }>()\n);\n\nexport const deleteDeviceFailure = createAction(\n  '[Device Effect/API] Delete Device Failure',\n  props<{ error: string }>()\n);\n\nexport const addDevice = createAction(\n  '[Device/API] Add Device',\n  props<{ device: Device }>()\n);\n\nexport const upsertDevice = createAction(\n  '[Device/API] Upsert Device',\n  props<{ device: Device }>()\n);\n\nexport const addDevices = createAction(\n  '[Device/API] Add Devices',\n  props<{ devices: Device[] }>()\n);\n\nexport const upsertDevices = createAction(\n  '[Device/API] Upsert Devices',\n  props<{ devices: Device[] }>()\n);\n\nexport const updateDevice = createAction(\n  '[Device/API] Update Device',\n  props<{ device: Update<Device> }>()\n);\n\nexport const updateDevices = createAction(\n  '[Device/API] Update Devices',\n  props<{ devices: Update<Device>[] }>()\n);\n\nexport const deleteDevices = createAction(\n  '[Device/API] Delete Devices',\n  props<{ ids: string[] }>()\n);\n\nexport const clearDevices = createAction(\n  '[Device/API] Clear Devices'\n);\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ToastrService } from 'ngx-toastr';\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, tap } from 'rxjs/operators';\nimport { DevicesService } from '../services/devices.service';\nimport * as deviceActions from './device.actions';\n\n\n@Injectable()\nexport class DeviceEffects {\n\n  constructor(private actions$: Actions,\n              private toaster: ToastrService,\n              private deviceService: DevicesService) {}\n\n\n  loadDevices$ = createEffect(() => this.actions$.pipe(\n    ofType(deviceActions.loadDevices),\n    mergeMap(() => this.deviceService.getDevices()\n      .pipe(\n        map(devicesResponse => deviceActions.loadDevicesSuccess(devicesResponse)),\n        catchError(error => of(deviceActions.loadDevicesFailure(error)))\n      )\n    )\n  ));\n\n  // Load Device Effect\n  loadDevice$ = createEffect(() => this.actions$.pipe(\n    ofType(deviceActions.loadDevice),\n    mergeMap(action => this.deviceService.deviceDetails(action.id)\n      .pipe(\n        map(response => deviceActions.loadDeviceSuccess(response)),\n        catchError(error => of(deviceActions.loadDeviceFailure(error)))\n      ))\n  ));\n\n  // Delete Device Effect\n  deleteDevice$ = createEffect(() => this.actions$.pipe(\n    ofType(deviceActions.deleteDevice),\n    mergeMap(action => this.deviceService.deleteDevice(action.id)\n      .pipe(\n        map(response => deviceActions.deleteDeviceSuccess({id: action.id})),\n        catchError(error => of(deviceActions.deleteDeviceFailure(error)))\n      )\n    )\n  ));\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport * as DeviceActions from './device.actions';\nimport { Device } from '../model/device';\nimport {DeviceDetails} from '../model/device-details';\n\nexport const devicesFeatureKey = 'devices';\n\nexport interface DeviceState extends EntityState<Device> {\n  // additional entities state properties\n  Data: Device[];\n  selectedDevice: DeviceDetails;\n  error: string;\n}\n\nexport const adapter: EntityAdapter<Device> = createEntityAdapter<Device>();\n\nexport const initialState: DeviceState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  selectedDevice: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(DeviceActions.loadDevicesSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(DeviceActions.loadDevicesFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(DeviceActions.loadDeviceSuccess,\n  (state, action) => {\n      return {\n        ...state,\n        selectedDevice: action.Data\n      };\n    }\n  ),\n  on(DeviceActions.loadDeviceFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(DeviceActions.deleteDevice,\n    (state, action) => adapter.removeOne(action.id, state)\n  ),\n  on(DeviceActions.deleteDeviceFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      }\n    }\n  ),\n  on(DeviceActions.addDevice,\n    (state, action) => adapter.addOne(action.device, state)\n  ),\n  on(DeviceActions.upsertDevice,\n    (state, action) => adapter.upsertOne(action.device, state)\n  ),\n  on(DeviceActions.addDevices,\n    (state, action) => adapter.addMany(action.devices, state)\n  ),\n  on(DeviceActions.upsertDevices,\n    (state, action) => adapter.upsertMany(action.devices, state)\n  ),\n  on(DeviceActions.updateDevice,\n    (state, action) => adapter.updateOne(action.device, state)\n  ),\n  on(DeviceActions.updateDevices,\n    (state, action) => adapter.updateMany(action.devices, state)\n  ),\n  on(DeviceActions.deleteDevices,\n    (state, action) => adapter.removeMany(action.ids, state)\n  ),\n  on(DeviceActions.clearDevices,\n    state => adapter.removeAll(state)\n  ),\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { devicesFeatureKey, DeviceState, selectAll } from \"./device.reducer\";\r\nimport {carsFeatureKey} from '../../cars/store/car.reducer';\r\n\r\nconst deviceFeatureState = createFeatureSelector<DeviceState>(devicesFeatureKey);\r\n\r\nexport const allDevicesSelector = createSelector(deviceFeatureState, selectAll);\r\nexport const allDevicesAndCarsSelector = createSelector(\r\n  deviceFeatureState, selectAll);\r\n\r\nexport const deviceDetailsSelector = createSelector(deviceFeatureState, (state: DeviceState) => state.selectedDevice);\r\n\r\nexport const getDevicesError = createSelector(deviceFeatureState, (state: DeviceState) => state.error);\r\n\r\n"]}