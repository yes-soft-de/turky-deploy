{"version":3,"sources":["webpack:///src/app/pages/cars/cars-routing.module.ts","webpack:///src/app/pages/cars/cars.module.ts","webpack:///src/app/pages/cars/components/all-cars/all-cars.component.ts","webpack:///src/app/pages/cars/components/all-cars/all-cars.component.html","webpack:///src/app/pages/cars/components/car-details/car-details.component.ts","webpack:///src/app/pages/cars/components/car-details/car-details.component.html","webpack:///src/app/pages/cars/services/cars.service.ts","webpack:///src/app/pages/cars/store/car.actions.ts","webpack:///src/app/pages/cars/store/car.effects.ts","webpack:///src/app/pages/cars/store/car.reducer.ts","webpack:///src/app/pages/cars/store/car.selector.ts"],"names":["routes","path","component","CarsRoutingModule","forChild","imports","exports","CarsModule","forFeature","declarations","AllCarsComponent","datePipe","store","toaster","carsList","carsFilterList","isDeleted","dispatch","getCars","pipe","subscribe","allCars","console","log","cars","config","itemsPerPage","currentPage","totalItems","length","error","msg","event","carId","confirm","id","success","setTimeout","name","filter","res","brand","toLocaleLowerCase","match","company","carType","country","yearOfRelease","transform","Date","timestamp","toString","selector","templateUrl","styleUrls","providers","CarDetailsComponent","carsService","router","activatedRoute","document","render","rendering","imagesRendering","carID","Number","snapshot","paramMap","get","getCarDetails","data","carDetails","element","mainImage","querySelector","mainImageLink","getAttribute","currentImage","firstChild","currentImageLink","setAttribute","customId","images","Document","CarsService","httpClient","allCarsAPI","errorHandler","getCarAPI","deleteCarAPI","providedIn","loadCars","loadCarsSuccess","loadCarsFailure","loadCar","loadCarSuccess","loadCarFailure","deleteCar","deleteCarSuccess","deleteCarFailure","CarEffects","actions$","carService","loadCars$","getAllCars","carsResponse","loadCar$","action","response","deleteCar$","carsFeatureKey","adapter","initialState","getInitialState","Data","undefined","selectedCar","reducer","state","setAll","removeOne","metaReducers","production","getSelectors","selectIds","selectEntities","selectAll","selectTotal","selectCarState","carsSelector","carSelector"],"mappings":"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","file":"cars-cars-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllCarsComponent } from './components/all-cars/all-cars.component';\nimport {CarDetailsComponent} from './components/car-details/car-details.component';\n\nconst routes: Routes = [\n  { path: '', component: AllCarsComponent },\n  { path: ':id', component: CarDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CarsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from 'src/app/@theme/theme.module';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { CarsRoutingModule } from './cars-routing.module';\n\nimport * as fromCars from './store/car.reducer';\nimport { CarEffects } from './store/car.effects';\nimport { AllCarsComponent } from './components/all-cars/all-cars.component';\nimport { CarDetailsComponent } from './components/car-details/car-details.component';\n\n\n@NgModule({\n  declarations: [ AllCarsComponent, CarDetailsComponent ],\n  imports: [\n    ThemeModule,\n    CarsRoutingModule,\n    StoreModule.forFeature(fromCars.carsFeatureKey, fromCars.reducer),\n    EffectsModule.forFeature([CarEffects])\n  ]\n})\nexport class CarsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { CarsService } from '../../services/cars.service';\nimport { CarState } from '../../store/car.reducer';\nimport * as carAction from '../../store/car.actions';\nimport * as carSelector from '../../store/car.selector';\nimport { Cars } from '../../model/cars';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-all-cars',\n  templateUrl: './all-cars.component.html',\n  styleUrls: ['./all-cars.component.scss'],\n  providers: [DatePipe]\n})\nexport class AllCarsComponent implements OnInit {\n  uploadForm: FormGroup;\n  cars: Cars[];\n  carsList: Cars[] = [];\n  carsFilterList: Cars[] = [];         // We Create It Second For Filter\n  error$: Observable<string>;\n  isDeleted = false;\n  config: any;                                          // Config Variable For Pagination Configuration\n  name: string;\n\n  constructor(private datePipe: DatePipe,\n              private store: Store<CarState>,\n              private toaster: ToastrService) { }\n\n  ngOnInit() {\n    this.store.dispatch(carAction.loadCars());\n    // Get All cars\n    this.getCars();\n    // Dispatch Error\n    // this.store.pipe(carSelector.getProductError).subscribe(\n    //   error => this.handleError(error)\n    // );\n  }\n\n  // Get All cars\n  getCars() {\n    this.store.pipe(select(carSelector.carsSelector)).subscribe(\n      (allCars: any) => {\n        console.log('all Cars', allCars);\n        this.cars = allCars;\n        this.carsList = allCars;\n        this.carsFilterList = this.carsList;\n      }\n    );\n    this.config = {\n      itemsPerPage: 5,\n      currentPage: 1,\n      totalItems: this.carsList.length\n    };\n  }\n\n  // Handle Response Error\n  handleError(error) {\n    console.log(error);\n    if (error.error.error) {\n      this.toaster.error(error.error.error);\n    } else if (error.error.msg) {\n      this.toaster.error(error.error.msg);\n    }\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  // Delete The Cars\n  delete(carId: number) {\n    if (confirm('Are You Sure You Want To Delete This Car')) {\n      this.isDeleted = true;\n      this.store.dispatch(carAction.deleteCar({id: carId}));\n      this.toaster.success('Car Successfully Deleted');\n      setTimeout(() => { this.isDeleted = false; }, 1000);      \n    } else {\n      return false;\n    }\n  }\n\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.carsFilterList = [...this.carsList];\n    } else {\n      this.carsFilterList = [];\n      this.carsFilterList = this.carsList.filter(res => {\n        if (res.brand) {\n          const brand = res.brand.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (brand) {\n            // display the Name Column\n            return brand;\n          }\n        }\n        if (res.company) {\n          const company = res.company.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (company) {\n            // display the Name Column\n            return company;\n          }\n        }\n        if (res.carType) {\n          const carType = res.carType.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (carType) {\n            // display the Name Column\n            return carType;\n          }\n        }\n        if (res.country) {\n          const country = res.country.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (country) {\n            // display the Name Column\n            return country;\n          }\n        }\n        if (res.yearOfRelease) {\n          const yearOfRelease = (this.datePipe.transform(new Date(res.yearOfRelease.timestamp * 1000), 'yyyy-MM-dd')).toString().match(this.name.toLocaleLowerCase());\n          if (yearOfRelease) {\n            // display the Name Column\n            return yearOfRelease;\n          }\n        }\n      });\n    }\n  }\n\n}\n","<div *ngIf=\"cars != null\">\n    <div *ngIf=\"cars.length !== 0\">\n      <!-- <div class=\"container-fluid\"> -->\n        <h1 class=\"text-center details-title my-4\">{{'manage-cars-page' | translate}}</h1>\n          <div class=\"row\">\n              <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\n                  <div class=\"form-group mb-4\">\n                      <input\n                        id=\"exampleFormControlInput2\"\n                        [(ngModel)]=\"name\"\n                        (keyup)=\"applyFilter()\"\n                        type=\"text\"\n                        placeholder=\"{{'car-search-input' | translate}}\"\n                        title=\"{{'car-search-input' | translate}}\"\n                        class=\"form-control form-control-underlined border-primary search-input\">\n                  </div>\n              </div>\n              <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n                <!-- <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/cars/add\">\n                  <i class=\"fa fa-plus\"></i>\n                  {{'add-new-car' | translate}}\n                </a> -->\n              </div>\n          </div>\n        <div class=\"table-responsive text-center\">\n            <table class=\"table table-bordered main-table\">\n                <tr class=\"bg-dark text-white\">\n                    <td>{{'image' | translate}}</td>\n                    <td>{{'carType' | translate}}</td>\n                    <td>{{'country' | translate}}</td>\n                    <td>{{'city' | translate}}</td>\n                    <td>{{'description' | translate}}</td>\n                    <td>{{'price' | translate}}</td>\n                    <td>{{'gearType' | translate}}</td>\n                    <td>{{'status' | translate}}</td>\n                    <td>{{'yearOfProduction' | translate}}</td>\n                    <td>{{'createdAt' | translate}}</td>\n                    <td>{{'control' | translate}}</td>\n                </tr>\n                <tr *ngFor=\"let car of carsFilterList | paginate: config\">\n                  <td><img src=\"{{car?.image}}\" alt=\"{{car.brand}} Image\" class=\"img-thumbnail img-custom\"></td>\n                  <td>{{car?.carType ? car?.carType : '-'}}</td>\n                  <td>{{car?.country ? car?.country : '-'}}</td>\n                  <td>{{car?.city ? car?.city : '-'}}</td>\n                  <td class=\"td-custom\">{{car?.description ? car?.description : '-'}}</td>\n                  <td>{{car?.price ? (car?.price | currency) : '-'}}</td>\n                  <td>{{car?.gearType ? car?.gearType : '-'}}</td>\n                  <td>{{car?.status ? car?.status : '-'}}</td>\n                  <td style=\"white-space: nowrap;\">{{car?.createdAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</td>\n                  <td style=\"white-space: nowrap;\">{{car?.yearOfProduction.timestamp * 1000 | date: 'yyyy-MM-dd'}}</td>\n                  <!-- <td>\n                    <a (click)=\"suggest(car.id, (car.suggest ? false : true))\"\n                       class=\"text-primary mr-1 mb-1\"\n                       title=\"Change To {{car.suggest ? 'Not Recommended' : 'Recommended' }}\"\n\n                       style=\"cursor: pointer; {{ suggestProgress ? 'pointer-events: none;' : '' }}\">\n                      {{ car.suggest ? 'Recommended' : 'Not Recommended' }}\n                    </a>\n                  </td> -->\n                  <td>\n                      <a routerLink=\"/cars/{{car.id}}\" class=\"btn btn-success btn-sm mr-1 mb-1\">\n                        {{'view' | translate}}\n                    </a>\n                    <a (click)=\"delete(car.id)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\n                        {{'delete' | translate}}\n                      </a>\n                  </td>\n                </tr>\n            </table>\n            <pagination-controls class=\"my-pagination\"\n                                 (pageChange)=\"pageChanged($event)\"\n                                 autoHide=\"true\"\n                                 maxSize=\"5\"\n                                 responsive=\"true\"\n                                 previousLabel=\"{{'prev' | translate}}\"\n                                 nextLabel=\"{{'next' | translate}}\"\n                                 screenReaderPaginationLabel=\"Pagination\"\n                                 screenReaderPageLabel=\"page\"\n                                 screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n            </pagination-controls>\n        </div>\n      <!-- </div> -->\n    </div>\n    <!-- <div *ngIf=\"carsFilterList.length === 0\">\n        <div class=\"container\">\n            <div class=\"alert alert-primary text-center mt-5\">{{'cars-not-found' | translate}}</div>\n            <a routerLink=\"/cars/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n                <i class=\"fa fa-plus\"></i>\n                {{'add-new-car' | translate}}\n            </a>\n        </div>\n    </div> -->\n</div>\n<div *ngIf=\"cars.length === 0\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import {Component, HostListener, Inject, OnInit, Renderer2} from '@angular/core';\nimport {CarState} from '../../store/car.reducer';\nimport {select, Store} from '@ngrx/store';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport * as carAction from '../../store/car.actions';\nimport * as carSelector from '../../store/car.selector';\nimport {CarsService} from '../../services/cars.service';\nimport {Cars} from '../../model/cars';\nimport {Observable} from 'rxjs';\nimport {Car} from '../../model/car-model';\nimport {DOCUMENT} from '@angular/common';\nimport {main} from '@angular/compiler-cli/src/main';\n\n@Component({\n  selector: 'app-car-details',\n  templateUrl: './car-details.component.html',\n  styleUrls: ['./car-details.component.scss']\n})\nexport class CarDetailsComponent implements OnInit {\n  carDetails: Car;\n  rendering = false;\n  imagesRendering = false;\n\n  constructor(private store: Store<CarState>,\n              private carsService: CarsService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute,\n              @Inject(DOCUMENT) private document: Document,\n              private render: Renderer2) { }\n\n  ngOnInit(): void {\n    const carID = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.store.dispatch(carAction.loadCar({id: carID}));\n    this.getCarDetails();\n  }\n\n  // Get Car Details\n  getCarDetails() {\n    this.store.pipe(select(carSelector.carSelector)).subscribe(\n      data => {\n        console.log(data);\n        this.carDetails = data;\n      }\n    );\n  }\n\n  viewImage(element: HTMLDivElement) {\n    const mainImage = this.document.querySelector('.image-details img');\n    const mainImageLink = mainImage.getAttribute('src');\n    const currentImage = element.firstChild as HTMLImageElement;\n    const currentImageLink = currentImage.getAttribute('src');\n    // force user to click on the same image for one time\n    // if (mainImageLink != currentImageLink) {\n    this.rendering = true;\n    this.imagesRendering = true;\n    this.render.setAttribute(currentImage, 'src', mainImageLink);\n    this.render.setAttribute(mainImage, 'src', currentImageLink);\n    // }\n  }\n\n  // Check If main image is rendering\n  checkImageloaded()  {\n    console.log('main Image rendered');\n    this.rendering = false;\n  }\n\n  // Check if all second images is rendering\n  checkSecondImagesloaded(customId: number) {\n    // check if last second image is rendering finished\n    if ((customId + 1) == this.carDetails.images.length) {\n      // Check If the main image is rendering finish\n      if (!this.render) {\n        console.log('rendering all image');\n        this.imagesRendering = false;\n      }\n    }\n  }\n\n\n\n}\n","<div class=\"car-details\" *ngIf=\"carDetails\">\r\n  <div class=\"container\">\r\n    <h1 class=\"my-3 details-title\">{{'car-details-page' | translate}}</h1>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-sm-6 position-relative mx-auto text-center mb-3\">\r\n        <div class=\"image-details mb-3\">\r\n          <img (load)=\"checkImageloaded()\" class=\"img-fluid img-thumbnail\" src=\"{{carDetails?.image}}\" (error)=\"carDetails.image = '../../../../../assets/default-Item.jpg'\" alt=\"{{carDetails?.company}} Image\" />\r\n        </div>\r\n        <div class=\"row w-100 mx-auto\" *ngIf=\"carDetails.images.length != 0\">\r\n          <div class=\"col-4 mx-auto px-0 mb-1\" *ngFor=\"let img of carDetails.images; let i = index\">\r\n            <div #secondImageDetails class=\"second-images-details\"  (click)=\"viewImage(secondImageDetails)\">\r\n              <img (load)=\"checkSecondImagesloaded(i)\" class=\"img-responsive\" src=\"{{img?.image}}\" (error)=\"img.image = '../../../../../assets/default-Item.jpg'\" alt=\"Second Images\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"overlay\" *ngIf=\"rendering\">\r\n          <div class=\"overlay-lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-sm-6 mx-auto\">\r\n        <div class=\"info-details\">\r\n          <ul class=\"list-unstyled\">\r\n            <li>\r\n              <div class=\"row\">\r\n                <div class=\"col\">\r\n                  <h4 class=\"text-info\">{{carDetails?.carType}}</h4>\r\n                </div>\r\n                <div class=\"col align-self-center text-right\">\r\n                  <span class=\"status border border-secondary rounded py-1 px-2\">{{carDetails?.status}}</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"my-2\">\r\n              <div class=\"row\">\r\n                <div class=\"col-4 col-xl-3 text-center\">\r\n                  <img class=\"img-fluid img-thumbnail\" src=\"{{carDetails?.userImage}}\" (error)=\"carDetails.userImage = '../../../../../assets/default-avatar.jpg'\" alt=\"{{carDetails?.username}} Image\" />\r\n                </div>\r\n                <div class=\"col-7 align-self-center\">\r\n                  <h4 class=\"mb-2 text-secondary\">{{carDetails?.username}}</h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li *ngIf=\"carDetails?.gearType\"><p class=\"mb-2\">{{'gearType' | translate }} : <span class=\"text-secondary\">{{carDetails?.gearType}}</span></p></li>\r\n            <li *ngIf=\"carDetails?.country\"><p class=\"mb-2\">{{'country' | translate }} : <span class=\"text-secondary\">{{carDetails?.country}}</span></p></li>\r\n            <li *ngIf=\"carDetails?.price\"><p class=\"mb-2\">{{'price' | translate }} : <span class=\"text-secondary\">{{carDetails?.price | currency}}</span></p></li>\r\n            <li *ngIf=\"carDetails?.yearOfRelease\"><p class=\"mb-2\">{{'yearOfRelease' | translate }} : <span class=\"text-secondary\">{{carDetails?.yearOfRelease.timestamp * 1000 | date: 'yyyy-MM-dd'}}</span></p></li>\r\n          </ul>\r\n        </div><!--.info-details-->\r\n      </div><!--.col-12-->\r\n      <div class=\"col-12\">\r\n        <hr class=\"w-50 mx-auto\">\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <h3 class=\"\">{{'more-info' | translate}} :</h3>\r\n      </div>\r\n      <div class=\"col-12 col-sm-6 mx-auto\">\r\n        <ul class=\"list-unstyled\">\r\n          <li *ngIf=\"carDetails?.city\"><p class=\"mb-2\">{{'city' | translate }} : {{carDetails?.city}}</p></li>\r\n          <li *ngIf=\"carDetails?.distance\"><p class=\"mb-2\">{{'distance' | translate }} : {{carDetails?.distance}}</p></li>\r\n        </ul>\r\n      </div><!--.col-12-->\r\n      <div class=\"col-12 col-sm-6 mx-auto\">\r\n        <ul class=\"list-unstyled\">\r\n          <li *ngIf=\"carDetails?.createdBy\"><p class=\"mb-2\">{{'createdBy' | translate }} : {{carDetails?.createdBy}}</p></li>\r\n          <li *ngIf=\"carDetails?.createdAt\"><p class=\"mb-2\">{{'createdAt' | translate }} : {{carDetails?.createdAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</p></li>\r\n          <li *ngIf=\"carDetails?.updateAt\"><p class=\"mb-2\">{{'updatedAt' | translate }} : {{carDetails?.updateAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</p></li>\r\n        </ul>\r\n      </div><!--.col-12-->\r\n      <div class=\"col-12\" *ngIf=\"carDetails?.description\">\r\n        <h5>{{'description' | translate }} : </h5>\r\n        <p>{{carDetails?.description}}</p>\r\n      </div>\r\n    </div><!--.row-->\r\n  </div>\r\n</div>\r\n<div *ngIf=\"!carDetails\">\r\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n</div>\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AdminConfig } from '../../AdminConfig';\nimport { CarsResponse } from '../model/cars-response';\nimport {CarResponse} from '../model/car-response';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  private static errorHandler(error: HttpErrorResponse) {\n    return throwError(error || 'Server Error');\n  }\n\n  // all Cars\n  getAllCars(): Observable<CarsResponse> {\n    return this.httpClient.get<CarsResponse>(\n      AdminConfig.allCarsAPI\n    ).pipe(catchError(CarsService.errorHandler));\n  }\n\n  // Car Details\n  getCarDetails(carId: number ): Observable<CarResponse> {\n    return this.httpClient.get<CarResponse>(\n      `${AdminConfig.getCarAPI}/${carId}`\n    ).pipe(catchError(CarsService.errorHandler));\n  }\n\n  // Delete Car\n  deleteCar(carId: number): Observable<any> {\n    return this.httpClient.delete<any>(\n      `${AdminConfig.deleteCarAPI}/${carId}`\n    ).pipe(catchError(CarsService.errorHandler));\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Cars } from '../model/cars';\nimport {Car} from '../model/car-model';\n\nexport const loadCars = createAction(\n  '[Car/API] Load Cars'\n);\n\nexport const loadCarsSuccess = createAction(\n  '[Car/API] Load Cars Success',\n  props<{ Data: Cars[] }>()\n);\n\nexport const loadCarsFailure = createAction(\n  '[Car/API] Load Cars Failure',\n  props<{ error: string }>()\n);\n\nexport const loadCar = createAction(\n  '[Car Components/API] Load Car',\n  props<{ id: number }>()\n);\n\nexport const loadCarSuccess = createAction(\n  '[Car Effect/API] Load Car Success',\n  props<{ Data: Car }>()\n);\n\nexport const loadCarFailure = createAction(\n  '[Car/API] Load Car Failure',\n  props<{ error: string }>()\n);\n\n\nexport const deleteCar = createAction(\n  '[Car Components/API] Delete Car',\n  props<{ id: number }>()\n);\n\nexport const deleteCarSuccess = createAction(\n  '[Car Effect/API] Delete Car Success',\n  props<{ id: number }>()\n);\n\nexport const deleteCarFailure = createAction(\n  '[Car Effect/API] Delete Car Failure',\n  props<{ error: string }>()\n);\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ToastrService } from 'ngx-toastr';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, mergeMap, tap } from 'rxjs/operators';\nimport { CarsService } from '../services/cars.service';\nimport * as carActions from './car.actions';\n\n\n@Injectable()\nexport class CarEffects {\n\n  constructor(private actions$: Actions,\n              private carService: CarsService,\n              private toaster: ToastrService) {}\n\n  // Load Cars Effect\n  loadCars$ = createEffect(() => this.actions$.pipe(\n    ofType(carActions.loadCars),\n    mergeMap(() => this.carService.getAllCars()\n      .pipe(\n        map(carsResponse => carActions.loadCarsSuccess(carsResponse)),\n        catchError(error => of(carActions.loadCarsFailure(error)))\n      )\n    )\n  ));\n\n  loadCar$ = createEffect(() => this.actions$.pipe(\n    ofType(carActions.loadCar),\n    mergeMap(action => this.carService.getCarDetails(action.id)\n      .pipe(\n        map(response => carActions.loadCarSuccess(response)),\n        catchError(error => of(carActions.loadCarFailure({error})))\n      )\n    )\n  ));\n\n  // Delete Car Effect\n  deleteCar$ = createEffect(() => this.actions$.pipe(\n    ofType(carActions.deleteCar),\n    mergeMap(action => this.carService.deleteCar(action.id)\n      .pipe(\n        map(response => carActions.deleteCarSuccess({id: action.id})),\n        catchError(error => of(carActions.deleteCarFailure(error)))\n      )\n    )\n  ));\n\n}\n","import { Action, createReducer, MetaReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { environment } from 'src/environments/environment';\nimport * as CarAction from './car.actions';\nimport { Cars } from '../model/cars';\nimport {Car} from '../model/car-model';\n\nexport const carsFeatureKey = 'cars';\n\nexport interface CarState extends EntityState<Cars> {\n  // additional entities state properties\n  Data: Cars[];\n  selectedCar: Car;\n  error: any;\n}\n\nexport const adapter: EntityAdapter<Cars> = createEntityAdapter<Cars>();\n\nexport const initialState: CarState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  selectedCar: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n\n  on(CarAction.loadCarsSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(CarAction.loadCarsFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(CarAction.loadCarSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        selectedCar: action.Data\n      };\n    }\n  ),\n  on(CarAction.loadCarFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(CarAction.deleteCarSuccess,\n    (state, action) => adapter.removeOne(action.id, state)\n  ),\n  on(CarAction.deleteCarFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  )\n);\n\nexport const metaReducers: MetaReducer<CarState>[] = !environment.production ? [] : [];\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { carsFeatureKey, CarState } from \"./car.reducer\";\r\nimport { selectAll } from \"./car.reducer\";\r\n\r\n// fetch the whole slice for product state\r\nexport const selectCarState = createFeatureSelector<CarState>(carsFeatureKey);\r\n\r\nexport const carsSelector = createSelector(selectCarState, selectAll);\r\n\r\nexport const carSelector = createSelector(selectCarState, (state: CarState) => state.selectedCar);\r\n\r\n"]}