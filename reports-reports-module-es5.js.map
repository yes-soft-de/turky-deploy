{"version":3,"sources":["webpack:///src/app/pages/reports/components/all-reports/all-reports.component.ts","webpack:///src/app/pages/reports/components/all-reports/all-reports.component.html","webpack:///src/app/pages/reports/components/report-details/report-details.component.ts","webpack:///src/app/pages/reports/components/report-details/report-details.component.html","webpack:///src/app/pages/reports/reports-routing.module.ts","webpack:///src/app/pages/reports/reports.module.ts","webpack:///src/app/pages/reports/services/reports.service.ts","webpack:///src/app/pages/reports/store/report.actions.ts","webpack:///src/app/pages/reports/store/report.effects.ts","webpack:///src/app/pages/reports/store/report.reducer.ts","webpack:///src/app/pages/reports/store/report.selector.ts"],"names":["AllReportsComponent","store","toaster","reportsList","reportsFilterList","isDeleted","isClicked","dispatch","getReports","pipe","subscribe","reportsResponse","console","log","reports","error","handleError","config","itemsPerPage","currentPage","totalItems","length","msg","event","reportId","confirm","id","success","setTimeout","name","filter","res","userName","toLocaleLowerCase","match","entity","itemName","selector","templateUrl","styleUrls","ReportDetailsComponent","activatedRoute","reportID","Number","snapshot","paramMap","get","getReportDetails","data","reportDetails","routes","path","component","ReportsRoutingModule","forChild","imports","exports","ReportsModule","forFeature","declarations","ReportsService","httpClient","tokenService","reportsAPI","httpOptions","errorHandler","reportAPI","deleteReportAPI","providedIn","loadReports","loadReportsSuccess","loadReportsFailure","loadReport","loadReportSuccess","loadReportFailure","deleteReport","deleteReportSuccess","deleteReportFailure","ReportEffects","actions$","reportService","loadReports$","response","loadReport$","action","deleteReport$","reportsFeatureKey","adapter","initialState","getInitialState","Data","undefined","selectedReport","reducer","state","setAll","removeOne","getSelectors","selectIds","selectEntities","selectAll","selectTotal","reportsFeatureState","reportsSelector","reportSelector","getReportsError"],"mappings":"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","file":"reports-reports-module-es5.js","sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { ReportsResponse } from '../../model/reports-response';\nimport { ReportsService } from '../../services/reports.service';\nimport {select, Store} from '@ngrx/store';\nimport {ReportState} from '../../store/report.reducer';\nimport * as reportAction from '../../store/report.actions';\nimport * as reportsSelector from '../../store/report.selector';\nimport { Reports } from '../../model/reports.model';\n\n@Component({\n  selector: 'app-all-reports',\n  templateUrl: './all-reports.component.html',\n  styleUrls: ['./all-reports.component.scss']\n})\nexport class AllReportsComponent implements OnInit {\n  reports: Reports[];\n  reportsList: Reports[] = [];\n  reportsFilterList: Reports[] = [];          // We Create It Second For Filter\n  currentAnimeID: number;\n  episodeDuration: any;\n  isDeleted = false;\n  config: any;                                // Config Variable For Pagination Configuration\n  name: string;\n  isClicked = false;\n  reportSubscription: Subscription;\n\n  constructor(private store: Store<ReportState>,\n              private toaster: ToastrService) { }\n\n  ngOnInit() {\n    this.store.dispatch(reportAction.loadReports());\n    // Get All reports\n    this.getReports();\n  }\n\n  // Get All reports\n  getReports() {\n    this.store.pipe(select(reportsSelector.reportsSelector)).subscribe(\n      reportsResponse => {\n        console.log(reportsResponse);\n        this.reports = reportsResponse;\n        this.reportsList = reportsResponse;\n        this.reportsFilterList = reportsResponse;\n      },\n      error => this.handleError(error)\n    );\n    this.config = {\n      itemsPerPage: 5,\n      currentPage: 1,\n      totalItems: this.reportsList.length\n    };\n  }\n\n  // Handle Response Error\n  handleError(error) {\n    this.isClicked = false;\n    console.log(error);\n    if (error.error.error) {\n      this.toaster.error(error.error.error);\n    } else if (error.error.msg) {\n      this.toaster.error(error.error.msg);\n    }\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  // Delete The Report\n  delete(reportId: string) {\n    if (confirm('Are You Sure You Want To Delete This Report')) {\n      this.isDeleted = true;\n      this.store.dispatch(reportAction.deleteReport({id: reportId}));\n      this.toaster.success('Report Successfully Deleted');\n      setTimeout(() => { this.isDeleted = true; }, 1000);\n    } else {\n      return false;\n    }\n  }\n\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.reportsFilterList = [...this.reportsList];\n    } else {\n      this.reportsFilterList = [];\n      this.reportsFilterList = this.reportsList.filter(res => {\n        if (res.userName) {\n          const userName = res.userName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (userName) {\n            // display the Name Column\n            return userName;\n          }\n        }\n        if (res.entity) {\n          const entity = res.entity.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (entity) {\n            // display the Name Column\n            return entity;\n          }\n        }\n        if (res.itemName) {\n          const itemName = res.itemName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (itemName) {\n            // display the Name Column\n            return itemName;\n          }\n        }\n      });\n    }\n  }\n}\n","<div *ngIf=\"reports != null\">\n    <div *ngIf=\"reports.length !== 0\">\n      <!-- <div class=\"container-fluid\"> -->\n        <h1 class=\"text-center details-title my-4\">{{'manage-reports-page' | translate}}</h1>\n          <div class=\"row\">\n              <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\n                  <div class=\"form-group mb-4\">\n                      <input\n                        id=\"exampleFormControlInput2\"\n                        [(ngModel)]=\"name\"\n                        (keyup)=\"applyFilter()\"\n                        type=\"text\"\n                        placeholder=\"{{'report-search-input' | translate}}\"\n                        class=\"form-control form-control-underlined border-primary search-input\">\n                  </div>\n              </div>\n              <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n                <!-- <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/reports/add\">\n                  <i class=\"fa fa-plus\"></i>\n                  {{'add-new-report' | translate}}\n                </a> -->\n              </div>\n          </div>\n        <div class=\"table-responsive text-center\">\n            <table class=\"table table-bordered main-table\">\n                <tr class=\"bg-dark text-white\">\n                    <td>#ID</td>\n                    <td>{{'image' | translate}}</td>\n                    <td>{{'username' | translate}}</td>\n                    <td>{{'entity' | translate}}</td>\n                    <td>{{'itemID' | translate}}</td>\n                    <td>{{'itemName' | translate}}</td>\n                    <td>{{'reason' | translate}}</td>\n                    <td>{{'control' | translate}}</td>\n                </tr>\n                <tr *ngFor=\"let report of reportsFilterList | paginate: config\">\n                  <td>{{report.id}}</td>\n                  <td><img src=\"{{report?.image}}\" alt=\"{{report.itemName}} Image\" class=\"img-thumbnail img-custom\"></td>\n                  <td>{{report.userName ? report.userName : '-'}}</td>\n                  <td>{{report.entity ? report.entity : '-'}}</td>\n                  <td>{{report.itemID ? report.itemID : '-'}}</td>\n                  <td>{{report.itemName ? report.itemName : '-'}}</td>\n                  <td>{{report.reason ? report.reason : '-'}}</td>\n                  <!-- <td>\n                    <a (click)=\"suggest(report.id, (report.suggest ? false : true))\"\n                       class=\"text-primary mr-1 mb-1\"\n                       title=\"Change To {{report.suggest ? 'Not Recommended' : 'Recommended' }}\"\n\n                       style=\"cursor: pointer; {{ suggestProgress ? 'pointer-events: none;' : '' }}\">\n                      {{ report.suggest ? 'Recommended' : 'Not Recommended' }}\n                    </a>\n                  </td> -->\n                  <td>\n                    <a (click)=\"delete(report.id)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\n                        {{'delete' | translate}}\n                      </a>\n                  </td>\n                </tr>\n            </table>\n            <pagination-controls class=\"my-pagination\"\n                                 (pageChange)=\"pageChanged($event)\"\n                                 autoHide=\"true\"\n                                 maxSize=\"5\"\n                                 responsive=\"true\"\n                                 previousLabel=\"{{'prev' | translate}}\"\n                                 nextLabel=\"{{'next' | translate}}\"\n                                 screenReaderPaginationLabel=\"Pagination\"\n                                 screenReaderPageLabel=\"page\"\n                                 screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n            </pagination-controls>\n        </div>\n      <!-- </div> -->\n    </div>\n    <!--<div *ngIf=\"reports.length === 0\">\n        <div class=\"container\">\n            <div class=\"alert alert-primary text-center mt-5\">{{'reports-not-found' | translate}}</div>\n              <a routerLink=\"/reports/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n                <i class=\"fa fa-plus\"></i>\n                {{'add-new-report' | translate}}\n             </a>\n        </div>\n    </div>-->\n</div>\n<div *ngIf=\"reports.length === 0\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {ReportState} from '../../store/report.reducer';\nimport {ActivatedRoute} from '@angular/router';\nimport * as reportAction from '../../store/report.actions';\nimport {reportSelector} from '../../store/report.selector';\nimport {ReportDetails} from '../../model/report-details';\n\n@Component({\n  selector: 'app-report-details',\n  templateUrl: './report-details.component.html',\n  styleUrls: ['./report-details.component.scss']\n})\nexport class ReportDetailsComponent implements OnInit {\n  reportDetails: ReportDetails;\n\n  constructor(private store: Store<ReportState>,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    const reportID = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.getReportDetails(reportID);\n  }\n\n  getReportDetails(reportId: number) {\n    this.store.dispatch(reportAction.loadReport({ id: reportId }));\n    this.store.pipe(select(reportSelector)).subscribe(data => this.reportDetails = data);\n  }\n\n}\n","<div class=\"car-details\" *ngIf=\"reportDetails\">\n  <div class=\"container\">\n    <h1 class=\"my-3 details-title\">{{'car-details-page' | translate}}</h1>\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-6 mx-auto text-center\">\n        <div class=\"image-details mb-3\">\n          <img class=\"img-fluid img-thumbnail\" src=\"{{reportDetails?.image}}\" (error)=\"reportDetails.image = '../../../../../assets/default-Item.jpg'\" alt=\"{{reportDetails?.itemName}} Image\" />\n        </div>\n      </div>\n      <div class=\"col-12 col-sm-6 mx-auto\">\n        <div class=\"info-details\">\n          <ul class=\"list-unstyled\">\n            <li>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h4 class=\"text-info\">{{reportDetails?.itemName}}</h4>\n                </div>\n<!--                <div class=\"col align-self-center\">-->\n<!--                  <span class=\"border border-secondary rounded py-1 px-2\">{{reportDetails?.status}}</span>-->\n<!--                </div>-->\n              </div>\n            </li>\n            <li *ngIf=\"reportDetails?.userName\"><p class=\"mb-2\">{{'username' | translate }} : <span class=\"text-secondary\">{{reportDetails?.userName}}</span></p></li>\n            <li *ngIf=\"reportDetails?.entity\"><p class=\"mb-2\">{{'entity' | translate }} : <span class=\"text-secondary\">{{reportDetails?.entity}}</span></p></li>\n            <li *ngIf=\"reportDetails?.reason\"><p class=\"mb-2\">{{'reason' | translate }} : <span class=\"text-secondary\">{{reportDetails?.reason | currency}}</span></p></li>\n<!--            <li *ngIf=\"reportDetails?.yearOfRelease\"><p class=\"mb-2\">{{'yearOfRelease' | translate }} : <span class=\"text-secondary\">{{reportDetails?.yearOfRelease.timestamp * 1000 | date: 'yyyy-MM-dd'}}</span></p></li>-->\n          </ul>\n        </div><!--.info-details-->\n      </div><!--.col-12-->\n    </div><!--.row-->\n  </div>\n</div>\n<div *ngIf=\"!reportDetails\">\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllReportsComponent } from './components/all-reports/all-reports.component';\nimport {ReportDetailsComponent} from './components/report-details/report-details.component';\n\nconst routes: Routes = [\n  { path: '', component: AllReportsComponent },\n  { path: ':id', component: ReportDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from 'src/app/@theme/theme.module';\n\nimport { ReportsRoutingModule } from './reports-routing.module';\nimport { AllReportsComponent } from './components/all-reports/all-reports.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromReport from './store/report.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ReportEffects } from './store/report.effects';\nimport { ReportDetailsComponent } from './components/report-details/report-details.component';\n\n\n@NgModule({\n  declarations: [AllReportsComponent, ReportDetailsComponent],\n  imports: [\n    ThemeModule,\n    ReportsRoutingModule,\n    StoreModule.forFeature(fromReport.reportsFeatureKey, fromReport.reducer),\n    EffectsModule.forFeature([ReportEffects])\n  ]\n})\nexport class ReportsModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TokenService } from '../../admin-service/token/token.service';\nimport { AdminConfig } from '../../AdminConfig';\nimport { ReportsResponse } from '../model/reports-response';\nimport {ReportDetailsResponse} from '../model/report-details-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportsService {\n\n\n  constructor(private httpClient: HttpClient,\n              private tokenService: TokenService) { }\n\n  private static errorHandler(error: HttpErrorResponse) {\n    return throwError(error || 'Server Error');\n  }\n\n  getReports(): Observable<ReportsResponse> {\n    return this.httpClient.get<ReportsResponse>(\n      AdminConfig.reportsAPI,\n      this.tokenService.httpOptions()\n    ).pipe(catchError(ReportsService.errorHandler));\n  }\n\n  getReportDetails(reportId: number): Observable<ReportDetailsResponse> {\n    return this.httpClient.get<ReportDetailsResponse>(\n      `${AdminConfig.reportAPI}/${reportId}`\n    ).pipe(catchError(ReportsService.errorHandler));\n  }\n\n  deleteReport(reportId: string): Observable<any> {\n    return this.httpClient.get<any>(\n      `${AdminConfig.deleteReportAPI}/${reportId}`\n    ).pipe(catchError(ReportsService.errorHandler));\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { Reports } from '../model/reports.model';\nimport {ReportDetails} from '../model/report-details';\n\nexport const loadReports = createAction(\n  '[Report/API] Load Reports',\n);\n\nexport const loadReportsSuccess = createAction(\n  '[Report/API] Leoad Reports Success',\n  props<{ Data: Reports[]}>()\n);\n\nexport const loadReportsFailure = createAction(\n  '[Report/API] Load Reports Failure',\n  props<{ error: string }>()\n);\n\nexport const loadReport = createAction(\n  '[Report Components/API] Load Report',\n  props<{ id: number }>()\n);\n\nexport const loadReportSuccess = createAction(\n  '[Report Effect/API] Load Report Success',\n  props<{ Data: ReportDetails }>()\n);\n\nexport const loadReportFailure = createAction(\n  '[Report Effect/API] Load Report Failure',\n  props<{ error: string }>()\n);\n\nexport const deleteReport = createAction(\n  '[Report Component/API] Delete Report',\n  props<{ id: string }>()\n);\n\nexport const deleteReportSuccess = createAction(\n  '[Report Effect/API] Delete Report Success',\n  props<{ id: string }>()\n);\n\nexport const deleteReportFailure = createAction(\n  '[Report Effect/API] Delete Report Failure',\n  props<{ error: string }>()\n);\n\n","import { Injectable } from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {ReportsService} from '../services/reports.service';\nimport * as reportsAction from './report.actions';\nimport {catchError, map, mergeMap, tap} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Injectable()\nexport class ReportEffects {\n\n  constructor(private actions$: Actions, \n              private reportService: ReportsService,\n              private toaster: ToastrService) {}\n\n  // Effects Get Reports\n  loadReports$ = createEffect(() => this.actions$.pipe(\n    ofType(reportsAction.loadReports),\n    mergeMap(() => this.reportService.getReports()\n      .pipe(\n        map(response => reportsAction.loadReportsSuccess(response)),\n        catchError(error => of(reportsAction.loadReportsFailure(error)))\n      )\n    )\n  ));\n\n  // Effects Get Reports\n  loadReport$ = createEffect(() => this.actions$.pipe(\n    ofType(reportsAction.loadReport),\n    mergeMap(action => this.reportService.getReportDetails(action.id)\n      .pipe(\n        map(response => reportsAction.loadReportSuccess(response)),\n        catchError(error => of(reportsAction.loadReportFailure(error)))\n      )\n    )\n  ));\n\n  // Effect Delete Report\n  deleteReport$ = createEffect(() => this.actions$.pipe(\n    ofType(reportsAction.deleteReport),\n    mergeMap(action => this.reportService.deleteReport(action.id)\n      .pipe(\n        map(response => reportsAction.deleteReportSuccess({id: action.id})),\n        catchError(error => of(reportsAction.deleteReportFailure(error)))\n      )\n    )\n  ));\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport * as ReportActions from './report.actions';\nimport {Reports} from '../model/reports.model';\nimport {ReportDetails} from '../model/report-details';\n\nexport const reportsFeatureKey = 'reports';\n\nexport interface ReportState extends EntityState<Reports> {\n  // additional entities state properties\n  Data: Reports[];\n  selectedReport: ReportDetails;\n  error: string;\n}\n\nexport const adapter: EntityAdapter<Reports> = createEntityAdapter<Reports>();\n\nexport const initialState: ReportState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  selectedReport: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(ReportActions.loadReportsSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(ReportActions.loadReportsFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(ReportActions.loadReportSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        selectedReport: action.Data\n      };\n    }\n  ),\n  on(ReportActions.loadReportFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(ReportActions.deleteReportSuccess,\n    (state, action) => adapter.removeOne(action.id, state)\n  ),\n  on(ReportActions.deleteReportFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {reportsFeatureKey, ReportState, selectAll} from './report.reducer';\r\n\r\nconst reportsFeatureState = createFeatureSelector<ReportState>(reportsFeatureKey);\r\n\r\n// Reports Selector\r\nexport const reportsSelector = createSelector(reportsFeatureState, selectAll);\r\n\r\n// Report Selector\r\nexport const reportSelector = createSelector(reportsFeatureState, (state: ReportState) => state.selectedReport);\r\n\r\nexport const getReportsError = createSelector(reportsFeatureState, (state: ReportState) => state.error);\r\n"]}