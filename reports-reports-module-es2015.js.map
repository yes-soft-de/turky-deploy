{"version":3,"sources":["./src/app/pages/reports/components/all-reports/all-reports.component.ts","./src/app/pages/reports/components/all-reports/all-reports.component.html","./src/app/pages/reports/components/report-details/report-details.component.ts","./src/app/pages/reports/components/report-details/report-details.component.html","./src/app/pages/reports/reports-routing.module.ts","./src/app/pages/reports/reports.module.ts","./src/app/pages/reports/services/reports.service.ts","./src/app/pages/reports/store/report.actions.ts","./src/app/pages/reports/store/report.effects.ts","./src/app/pages/reports/store/report.reducer.ts","./src/app/pages/reports/store/report.selector.ts"],"names":[],"mappings":"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","file":"reports-reports-module-es2015.js","sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { ReportsResponse } from '../../model/reports-response';\nimport { ReportsService } from '../../services/reports.service';\nimport {select, Store} from '@ngrx/store';\nimport {ReportState} from '../../store/report.reducer';\nimport * as reportAction from '../../store/report.actions';\nimport * as reportsSelector from '../../store/report.selector';\nimport { Reports } from '../../model/reports.model';\n\n@Component({\n  selector: 'app-all-reports',\n  templateUrl: './all-reports.component.html',\n  styleUrls: ['./all-reports.component.scss']\n})\nexport class AllReportsComponent implements OnInit {\n  reports: Reports[];\n  reportsList: Reports[] = [];\n  reportsFilterList: Reports[] = [];          // We Create It Second For Filter\n  currentAnimeID: number;\n  episodeDuration: any;\n  isDeleted = false;\n  config: any;                                // Config Variable For Pagination Configuration\n  name: string;\n  isClicked = false;\n  reportSubscription: Subscription;\n\n  constructor(private store: Store<ReportState>,\n              private toaster: ToastrService) { }\n\n  ngOnInit() {\n    this.store.dispatch(reportAction.loadReports());\n    // Get All reports\n    this.getReports();\n  }\n\n  // Get All reports\n  getReports() {\n    this.store.pipe(select(reportsSelector.reportsSelector)).subscribe(\n      reportsResponse => {\n        console.log(reportsResponse);\n        this.reports = reportsResponse;\n        this.reportsList = reportsResponse;\n        this.reportsFilterList = reportsResponse;\n      },\n      error => this.handleError(error)\n    );\n    this.config = {\n      itemsPerPage: 5,\n      currentPage: 1,\n      totalItems: this.reportsList.length\n    };\n  }\n\n  // Handle Response Error\n  handleError(error) {\n    this.isClicked = false;\n    console.log(error);\n    if (error.error.error) {\n      this.toaster.error(error.error.error);\n    } else if (error.error.msg) {\n      this.toaster.error(error.error.msg);\n    }\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  // Delete The Report\n  delete(reportId: string) {\n    if (confirm('Are You Sure You Want To Delete This Report')) {\n      this.isDeleted = true;\n      this.store.dispatch(reportAction.deleteReport({id: reportId}));\n      this.toaster.success('Report Successfully Deleted');\n      setTimeout(() => { this.isDeleted = true; }, 1000);\n    } else {\n      return false;\n    }\n  }\n\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.reportsFilterList = [...this.reportsList];\n    } else {\n      this.reportsFilterList = [];\n      this.reportsFilterList = this.reportsList.filter(res => {\n        if (res.userName) {\n          const userName = res.userName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (userName) {\n            // display the Name Column\n            return userName;\n          }\n        }\n        if (res.entity) {\n          const entity = res.entity.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (entity) {\n            // display the Name Column\n            return entity;\n          }\n        }\n        if (res.itemName) {\n          const itemName = res.itemName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (itemName) {\n            // display the Name Column\n            return itemName;\n          }\n        }\n      });\n    }\n  }\n}\n","<div *ngIf=\"reports != null\">\n    <div *ngIf=\"reports.length !== 0\">\n      <!-- <div class=\"container-fluid\"> -->\n        <h1 class=\"text-center details-title my-4\">{{'manage-reports-page' | translate}}</h1>\n          <div class=\"row\">\n              <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\n                  <div class=\"form-group mb-4\">\n                      <input\n                        id=\"exampleFormControlInput2\"\n                        [(ngModel)]=\"name\"\n                        (keyup)=\"applyFilter()\"\n                        type=\"text\"\n                        placeholder=\"{{'report-search-input' | translate}}\"\n                        class=\"form-control form-control-underlined border-primary search-input\">\n                  </div>\n              </div>\n              <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n                <!-- <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/reports/add\">\n                  <i class=\"fa fa-plus\"></i>\n                  {{'add-new-report' | translate}}\n                </a> -->\n              </div>\n          </div>\n        <div class=\"table-responsive text-center\">\n            <table class=\"table table-bordered main-table\">\n                <tr class=\"bg-dark text-white\">\n                    <td>#ID</td>\n                    <td>{{'image' | translate}}</td>\n                    <td>{{'username' | translate}}</td>\n                    <td>{{'entity' | translate}}</td>\n                    <td>{{'itemID' | translate}}</td>\n                    <td>{{'itemName' | translate}}</td>\n                    <td>{{'reason' | translate}}</td>\n                    <td>{{'control' | translate}}</td>\n                </tr>\n                <tr *ngFor=\"let report of reportsFilterList | paginate: config\">\n                  <td>{{report.id}}</td>\n                  <td><img src=\"{{report?.image}}\" alt=\"{{report.itemName}} Image\" class=\"img-thumbnail img-custom\"></td>\n                  <td>{{report.userName ? report.userName : '-'}}</td>\n                  <td>{{report.entity ? report.entity : '-'}}</td>\n                  <td>{{report.itemID ? report.itemID : '-'}}</td>\n                  <td>{{report.itemName ? report.itemName : '-'}}</td>\n                  <td>{{report.reason ? report.reason : '-'}}</td>\n                  <!-- <td>\n                    <a (click)=\"suggest(report.id, (report.suggest ? false : true))\"\n                       class=\"text-primary mr-1 mb-1\"\n                       title=\"Change To {{report.suggest ? 'Not Recommended' : 'Recommended' }}\"\n\n                       style=\"cursor: pointer; {{ suggestProgress ? 'pointer-events: none;' : '' }}\">\n                      {{ report.suggest ? 'Recommended' : 'Not Recommended' }}\n                    </a>\n                  </td> -->\n                  <td>\n                    <a (click)=\"delete(report.id)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\n                        {{'delete' | translate}}\n                      </a>\n                  </td>\n                </tr>\n            </table>\n            <pagination-controls class=\"my-pagination\"\n                                 (pageChange)=\"pageChanged($event)\"\n                                 autoHide=\"true\"\n                                 maxSize=\"5\"\n                                 responsive=\"true\"\n                                 previousLabel=\"{{'prev' | translate}}\"\n                                 nextLabel=\"{{'next' | translate}}\"\n                                 screenReaderPaginationLabel=\"Pagination\"\n                                 screenReaderPageLabel=\"page\"\n                                 screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n            </pagination-controls>\n        </div>\n      <!-- </div> -->\n    </div>\n    <!--<div *ngIf=\"reports.length === 0\">\n        <div class=\"container\">\n            <div class=\"alert alert-primary text-center mt-5\">{{'reports-not-found' | translate}}</div>\n              <a routerLink=\"/reports/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n                <i class=\"fa fa-plus\"></i>\n                {{'add-new-report' | translate}}\n             </a>\n        </div>\n    </div>-->\n</div>\n<div *ngIf=\"reports.length === 0\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {ReportState} from '../../store/report.reducer';\nimport {ActivatedRoute} from '@angular/router';\nimport * as reportAction from '../../store/report.actions';\nimport {reportSelector} from '../../store/report.selector';\nimport {ReportDetails} from '../../model/report-details';\n\n@Component({\n  selector: 'app-report-details',\n  templateUrl: './report-details.component.html',\n  styleUrls: ['./report-details.component.scss']\n})\nexport class ReportDetailsComponent implements OnInit {\n  reportDetails: ReportDetails;\n\n  constructor(private store: Store<ReportState>,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    const reportID = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.getReportDetails(reportID);\n  }\n\n  getReportDetails(reportId: number) {\n    this.store.dispatch(reportAction.loadReport({ id: reportId }));\n    this.store.pipe(select(reportSelector)).subscribe(data => this.reportDetails = data);\n  }\n\n}\n","<div class=\"car-details\" *ngIf=\"reportDetails\">\n  <div class=\"container\">\n    <h1 class=\"my-3 details-title\">{{'car-details-page' | translate}}</h1>\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-6 mx-auto text-center\">\n        <div class=\"image-details mb-3\">\n          <img class=\"img-fluid img-thumbnail\" src=\"{{reportDetails?.image}}\" (error)=\"reportDetails.image = '../../../../../assets/default-Item.jpg'\" alt=\"{{reportDetails?.itemName}} Image\" />\n        </div>\n      </div>\n      <div class=\"col-12 col-sm-6 mx-auto\">\n        <div class=\"info-details\">\n          <ul class=\"list-unstyled\">\n            <li>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h4 class=\"text-info\">{{reportDetails?.itemName}}</h4>\n                </div>\n<!--                <div class=\"col align-self-center\">-->\n<!--                  <span class=\"border border-secondary rounded py-1 px-2\">{{reportDetails?.status}}</span>-->\n<!--                </div>-->\n              </div>\n            </li>\n            <li *ngIf=\"reportDetails?.userName\"><p class=\"mb-2\">{{'username' | translate }} : <span class=\"text-secondary\">{{reportDetails?.userName}}</span></p></li>\n            <li *ngIf=\"reportDetails?.entity\"><p class=\"mb-2\">{{'entity' | translate }} : <span class=\"text-secondary\">{{reportDetails?.entity}}</span></p></li>\n            <li *ngIf=\"reportDetails?.reason\"><p class=\"mb-2\">{{'reason' | translate }} : <span class=\"text-secondary\">{{reportDetails?.reason | currency}}</span></p></li>\n<!--            <li *ngIf=\"reportDetails?.yearOfRelease\"><p class=\"mb-2\">{{'yearOfRelease' | translate }} : <span class=\"text-secondary\">{{reportDetails?.yearOfRelease.timestamp * 1000 | date: 'yyyy-MM-dd'}}</span></p></li>-->\n          </ul>\n        </div><!--.info-details-->\n      </div><!--.col-12-->\n    </div><!--.row-->\n  </div>\n</div>\n<div *ngIf=\"!reportDetails\">\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllReportsComponent } from './components/all-reports/all-reports.component';\nimport {ReportDetailsComponent} from './components/report-details/report-details.component';\n\nconst routes: Routes = [\n  { path: '', component: AllReportsComponent },\n  { path: ':id', component: ReportDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from 'src/app/@theme/theme.module';\n\nimport { ReportsRoutingModule } from './reports-routing.module';\nimport { AllReportsComponent } from './components/all-reports/all-reports.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromReport from './store/report.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ReportEffects } from './store/report.effects';\nimport { ReportDetailsComponent } from './components/report-details/report-details.component';\n\n\n@NgModule({\n  declarations: [AllReportsComponent, ReportDetailsComponent],\n  imports: [\n    ThemeModule,\n    ReportsRoutingModule,\n    StoreModule.forFeature(fromReport.reportsFeatureKey, fromReport.reducer),\n    EffectsModule.forFeature([ReportEffects])\n  ]\n})\nexport class ReportsModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TokenService } from '../../admin-service/token/token.service';\nimport { AdminConfig } from '../../AdminConfig';\nimport { ReportsResponse } from '../model/reports-response';\nimport {ReportDetailsResponse} from '../model/report-details-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportsService {\n\n\n  constructor(private httpClient: HttpClient,\n              private tokenService: TokenService) { }\n\n  private static errorHandler(error: HttpErrorResponse) {\n    return throwError(error || 'Server Error');\n  }\n\n  getReports(): Observable<ReportsResponse> {\n    return this.httpClient.get<ReportsResponse>(\n      AdminConfig.reportsAPI,\n      this.tokenService.httpOptions()\n    ).pipe(catchError(ReportsService.errorHandler));\n  }\n\n  getReportDetails(reportId: number): Observable<ReportDetailsResponse> {\n    return this.httpClient.get<ReportDetailsResponse>(\n      `${AdminConfig.reportAPI}/${reportId}`\n    ).pipe(catchError(ReportsService.errorHandler));\n  }\n\n  deleteReport(reportId: string): Observable<any> {\n    return this.httpClient.get<any>(\n      `${AdminConfig.deleteReportAPI}/${reportId}`\n    ).pipe(catchError(ReportsService.errorHandler));\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { Reports } from '../model/reports.model';\nimport {ReportDetails} from '../model/report-details';\n\nexport const loadReports = createAction(\n  '[Report/API] Load Reports',\n);\n\nexport const loadReportsSuccess = createAction(\n  '[Report/API] Leoad Reports Success',\n  props<{ Data: Reports[]}>()\n);\n\nexport const loadReportsFailure = createAction(\n  '[Report/API] Load Reports Failure',\n  props<{ error: string }>()\n);\n\nexport const loadReport = createAction(\n  '[Report Components/API] Load Report',\n  props<{ id: number }>()\n);\n\nexport const loadReportSuccess = createAction(\n  '[Report Effect/API] Load Report Success',\n  props<{ Data: ReportDetails }>()\n);\n\nexport const loadReportFailure = createAction(\n  '[Report Effect/API] Load Report Failure',\n  props<{ error: string }>()\n);\n\nexport const deleteReport = createAction(\n  '[Report Component/API] Delete Report',\n  props<{ id: string }>()\n);\n\nexport const deleteReportSuccess = createAction(\n  '[Report Effect/API] Delete Report Success',\n  props<{ id: string }>()\n);\n\nexport const deleteReportFailure = createAction(\n  '[Report Effect/API] Delete Report Failure',\n  props<{ error: string }>()\n);\n\n","import { Injectable } from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {ReportsService} from '../services/reports.service';\nimport * as reportsAction from './report.actions';\nimport {catchError, map, mergeMap, tap} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Injectable()\nexport class ReportEffects {\n\n  constructor(private actions$: Actions, \n              private reportService: ReportsService,\n              private toaster: ToastrService) {}\n\n  // Effects Get Reports\n  loadReports$ = createEffect(() => this.actions$.pipe(\n    ofType(reportsAction.loadReports),\n    mergeMap(() => this.reportService.getReports()\n      .pipe(\n        map(response => reportsAction.loadReportsSuccess(response)),\n        catchError(error => of(reportsAction.loadReportsFailure(error)))\n      )\n    )\n  ));\n\n  // Effects Get Reports\n  loadReport$ = createEffect(() => this.actions$.pipe(\n    ofType(reportsAction.loadReport),\n    mergeMap(action => this.reportService.getReportDetails(action.id)\n      .pipe(\n        map(response => reportsAction.loadReportSuccess(response)),\n        catchError(error => of(reportsAction.loadReportFailure(error)))\n      )\n    )\n  ));\n\n  // Effect Delete Report\n  deleteReport$ = createEffect(() => this.actions$.pipe(\n    ofType(reportsAction.deleteReport),\n    mergeMap(action => this.reportService.deleteReport(action.id)\n      .pipe(\n        map(response => reportsAction.deleteReportSuccess({id: action.id})),\n        catchError(error => of(reportsAction.deleteReportFailure(error)))\n      )\n    )\n  ));\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport * as ReportActions from './report.actions';\nimport {Reports} from '../model/reports.model';\nimport {ReportDetails} from '../model/report-details';\n\nexport const reportsFeatureKey = 'reports';\n\nexport interface ReportState extends EntityState<Reports> {\n  // additional entities state properties\n  Data: Reports[];\n  selectedReport: ReportDetails;\n  error: string;\n}\n\nexport const adapter: EntityAdapter<Reports> = createEntityAdapter<Reports>();\n\nexport const initialState: ReportState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  selectedReport: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(ReportActions.loadReportsSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(ReportActions.loadReportsFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(ReportActions.loadReportSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        selectedReport: action.Data\n      };\n    }\n  ),\n  on(ReportActions.loadReportFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(ReportActions.deleteReportSuccess,\n    (state, action) => adapter.removeOne(action.id, state)\n  ),\n  on(ReportActions.deleteReportFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {reportsFeatureKey, ReportState, selectAll} from './report.reducer';\r\n\r\nconst reportsFeatureState = createFeatureSelector<ReportState>(reportsFeatureKey);\r\n\r\n// Reports Selector\r\nexport const reportsSelector = createSelector(reportsFeatureState, selectAll);\r\n\r\n// Report Selector\r\nexport const reportSelector = createSelector(reportsFeatureState, (state: ReportState) => state.selectedReport);\r\n\r\nexport const getReportsError = createSelector(reportsFeatureState, (state: ReportState) => state.error);\r\n"],"sourceRoot":"webpack:///"}