{"version":3,"sources":["./src/app/pages/devices/components/all-devices/all-devices.component.ts","./src/app/pages/devices/components/all-devices/all-devices.component.html","./src/app/pages/devices/components/device-details/device-details.component.ts","./src/app/pages/devices/components/device-details/device-details.component.html","./src/app/pages/devices/devices-routing.module.ts","./src/app/pages/devices/devices.module.ts","./src/app/pages/devices/services/devices.service.ts","./src/app/pages/devices/store/device.actions.ts","./src/app/pages/devices/store/device.effects.ts","./src/app/pages/devices/store/device.reducer.ts","./src/app/pages/devices/store/device.selector.ts"],"names":[],"mappings":"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","file":"devices-devices-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { DevicesService } from '../../services/devices.service';\nimport { DeviceState } from '../../store/device.reducer';\nimport * as deviceAction from '../../store/device.actions';\nimport * as deviceSelector from '../../store/device.selector';\nimport { Device } from '../../model/device';\n\n@Component({\n  selector: 'app-all-devices',\n  templateUrl: './all-devices.component.html',\n  styleUrls: ['./all-devices.component.scss']\n})\nexport class AllDevicesComponent implements OnInit {\n  devices: Device[];\n  devicesList: Device[] = [];\n  devicesFilterList: Device[] = [];                     // We Create It Second For Filter\n  error$: Observable<string>;\n  isDeleted = false;\n  config: any;                                          // Config Variable For Pagination Configuration\n  name: string;\n\n  constructor(private store: Store<DeviceState>,\n              private toaster: ToastrService) { }\n\n  ngOnInit() {\n    this.store.dispatch(deviceAction.loadDevices());\n    // Get All devices\n    this.getDevices();\n    // Dispatch Error\n    this.store.pipe(select(deviceSelector.getDevicesError)).subscribe(\n      error => console.log('error', error)\n    );\n  }\n\n  // Get All devices\n  getDevices() {\n    this.store.pipe(select(deviceSelector.allDevicesSelector)).subscribe(\n      (alldevices: any) => {\n        console.log('all devices', alldevices);\n        this.devices = alldevices;\n        this.devicesList = alldevices;\n        this.devicesFilterList = this.devicesList;\n        this.isDeleted = false;\n      }\n    );\n    this.config = {\n      itemsPerPage: 5,\n      currentPage: 1,\n      totalItems: this.devicesList.length\n    };\n  }\n\n  // Handle Response Error\n  handleError(error) {\n    console.log('error : ', error);\n    if (error) {\n      if (error.error.error) {\n        this.toaster.error(error.error.error);\n      }\n      if (error.error.msg) {\n        this.toaster.error(error.error.msg);\n      } else {\n        this.toaster.error('Server Error');\n      }\n    }\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  // Delete The Device\n  delete(deviceId: number) {\n    if (confirm('Are You Sure You Want To Delete This Device')) {\n      this.isDeleted = true;\n      this.store.dispatch(deviceAction.deleteDevice({id: deviceId}));\n      this.toaster.success('Device Successfully Deleted');\n      setTimeout(() => { this.isDeleted = false; }, 1000);\n    } else {\n      return false;\n    }\n  }\n\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.devicesFilterList = [...this.devicesList];\n    } else {\n      this.devicesFilterList = [];\n      this.devicesFilterList = this.devicesList.filter(res => {\n        if (res.userName) {\n          const username = res.userName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (username) {\n            // display the Name Column\n            return username;\n          }\n        }\n        if (res.brand) {\n          const brand = res.brand.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (brand) {\n            // display the Name Column\n            return brand;\n          }\n        }\n        if (res.cpu) {\n          const cpu = res.cpu.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (cpu) {\n            // display the Name Column\n            return cpu;\n          }\n        }\n        if (res.price) {\n          const price = res.price.toString().toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (price) {\n            // display the Name Column\n            return price;\n          }\n        }\n        if (res.type) {\n          const type = res.type.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (type) {\n            // display the Name Column\n            return type;\n          }\n        }\n      });\n    }\n  }\n\n}\n","<div *ngIf=\"devices != null\">\r\n    <div *ngIf=\"devices.length !== 0\">\r\n      <!-- <div class=\"container-fluid\"> -->\r\n        <h1 class=\"text-center details-title my-4\">{{'manage-devices-page' | translate}}</h1>\r\n          <div class=\"row\">\r\n              <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\r\n                  <div class=\"form-group mb-4\">\r\n                      <input\r\n                        id=\"exampleFormControlInput2\"\r\n                        [(ngModel)]=\"name\"\r\n                        (keyup)=\"applyFilter()\"\r\n                        type=\"text\"\r\n                        placeholder=\"{{'device-search-input' | translate}}\"\r\n                        title=\"{{'device-search-input' | translate}}\"\r\n                        class=\"form-control form-control-underlined border-primary search-input\">\r\n                  </div>\r\n              </div>\r\n              <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\r\n                <!-- <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/devices/add\">\r\n                  <i class=\"fa fa-plus\"></i>\r\n                  {{'add-new-car' | translate}}\r\n                </a> -->\r\n              </div>\r\n          </div>\r\n        <div class=\"table-responsive text-center\">\r\n            <table class=\"table table-bordered main-table\">\r\n                <tr class=\"bg-dark text-white\">\r\n                    <td>{{'image' | translate}}</td>\r\n                    <td>{{'username' | translate}}</td>\r\n                    <td>{{'brand' | translate}}</td>\r\n                    <td>{{'type' | translate}}</td>\r\n                    <td>{{'description' | translate}}</td>\r\n                      <td>{{'country' | translate}}</td>\r\n                    <td>{{'city' | translate}}</td>\r\n                    <td>{{'price' | translate}}</td>\r\n                    <!-- <td style=\"white-space: nowrap;\">{{'yearOfRelease' | translate}}</td> -->\r\n                    <td>{{'control' | translate}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let device of devicesFilterList | paginate: config\">\r\n                  <td><img src=\"{{device?.image}}\" alt=\"{{device.brand}} Image\" class=\"img-thumbnail img-custom\"></td>\r\n                  <td>{{device?.userName ? device?.userName : '-'}}</td>\r\n                  <td>{{device?.brand ? device?.brand : '-'}}</td>\r\n                  <td>{{device?.type ? device?.type : '-'}}</td>\r\n                  <td class=\"td-custom\">{{device?.description ? device?.description : '-'}}</td>\r\n                  <td>{{device?.country ? device?.country : '-'}}</td>\r\n                  <td>{{device?.city ? device?.city : '-'}}</td>\r\n                  <td>{{device?.price ? (device?.price | currency) : '-'}}</td>\r\n                  <!-- <td style=\"white-space: nowrap;\">{{device.yearOfRelease.timestamp * 1000 | date: 'yyyy-MM-dd'}}</td> -->\r\n                  <!-- <td>\r\n                    <a (click)=\"suggest(device.id, (device.suggest ? false : true))\"\r\n                       class=\"text-primary mr-1 mb-1\"\r\n                       title=\"Change To {{device.suggest ? 'Not Recommended' : 'Recommended' }}\"\r\n\r\n                       style=\"cursor: pointer; {{ suggestProgress ? 'pointer-events: none;' : '' }}\">\r\n                      {{ device.suggest ? 'Recommended' : 'Not Recommended' }}\r\n                    </a>\r\n                  </td> -->\r\n                  <td>\r\n                      <a routerLink=\"/devices/{{device.id}}\" class=\"btn btn-success btn-sm mr-1 mb-1\">\r\n                        {{'view' | translate}}\r\n                    </a>\r\n                    <a (click)=\"delete(device.id)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\r\n                        {{'delete' | translate}}\r\n                      </a>\r\n                  </td>\r\n                </tr>\r\n            </table>\r\n            <pagination-controls class=\"my-pagination\"\r\n                                 (pageChange)=\"pageChanged($event)\"\r\n                                 autoHide=\"true\"\r\n                                 maxSize=\"5\"\r\n                                 responsive=\"true\"\r\n                                 previousLabel=\"{{'prev' | translate}}\"\r\n                                 nextLabel=\"{{'next' | translate}}\"\r\n                                 screenReaderPaginationLabel=\"Pagination\"\r\n                                 screenReaderPageLabel=\"page\"\r\n                                 screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\r\n            </pagination-controls>\r\n        </div>\r\n      <!-- </div> -->\r\n    </div>\r\n    <!-- <div *ngIf=\"devicesFilterList.length === 0\">\r\n        <div class=\"container\">\r\n            <div class=\"alert alert-primary text-center mt-5\">{{'devices-not-found' | translate}}</div>\r\n            <a routerLink=\"/devices/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\r\n                <i class=\"fa fa-plus\"></i>\r\n                {{'add-new-device' | translate}}\r\n            </a>\r\n        </div>\r\n    </div> -->\r\n</div>\r\n<div *ngIf=\"devices.length === 0\">\r\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n</div>\r\n","import {Component, Inject, OnInit, Renderer2} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {DeviceState} from '../../store/device.reducer';\nimport {ActivatedRoute} from '@angular/router';\nimport * as deviceAction from '../../store/device.actions';\nimport { deviceDetailsSelector } from '../../store/device.selector';\nimport {DeviceDetails} from '../../model/device-details';\nimport {DOCUMENT} from '@angular/common';\n\n@Component({\n  selector: 'app-device-details',\n  templateUrl: './device-details.component.html',\n  styleUrls: ['./device-details.component.scss']\n})\nexport class DeviceDetailsComponent implements OnInit {\n  device: DeviceDetails;\n  rendering = false;\n  imagesRendering = false;\n\n  constructor(private store: Store<DeviceState>,\n              private activatedRoute: ActivatedRoute,\n              @Inject(DOCUMENT) private document: Document,\n              private render: Renderer2) { }\n\n  ngOnInit(): void {\n    const deviceID = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.store.dispatch(deviceAction.loadDevice({ id: deviceID }));\n    this.deviceDetails();\n  }\n\n  // Get Device Details\n  deviceDetails() {\n    this.store.pipe(select(deviceDetailsSelector)).subscribe(data => {\n      this.device = data;\n      console.log(data);\n    });\n  }\n\n  viewImage(element: HTMLDivElement) {\n    const mainImage = this.document.querySelector('.image-details img');\n    const mainImageLink = mainImage.getAttribute('src');\n    const currentImage = element.firstChild as HTMLImageElement;\n    const currentImageLink = currentImage.getAttribute('src');\n    // force user to click on the same image for one time\n    // if (mainImageLink != currentImageLink) {\n    this.rendering = true;\n    this.imagesRendering = true;\n    this.render.setAttribute(currentImage, 'src', mainImageLink);\n    this.render.setAttribute(mainImage, 'src', currentImageLink);\n    // }\n  }\n\n  // Check If main image is rendering\n  checkImageloaded()  {\n    console.log('main Image rendered');\n    this.rendering = false;\n  }\n\n  // Check if all second images is rendering\n  checkSecondImagesloaded(customId: number) {\n    // check if last second image is rendering finished\n    if ((customId + 1) == this.device.images.length) {\n      // Check If the main image is rendering finish\n      if (!this.render) {\n        console.log('rendering all image');\n        this.imagesRendering = false;\n      }\n    }\n  }\n}\n","<div class=\"device-details\" *ngIf=\"device\">\n  <div class=\"container\">\n    <h1 class=\"my-3 details-title\">{{'device-details-page' | translate}}</h1>\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-6 mx-auto text-center\">\n        <div class=\"image-details mb-3\">\n          <img (load)=\"checkImageloaded()\" class=\"img-fluid img-thumbnail\" src=\"{{device?.image}}\" (error)=\"device.image = '../../../../../assets/default-Item.jpg'\" alt=\"{{device?.brand}} Image\" />\n        </div>\n        <div class=\"row w-100 mx-auto\" *ngIf=\"device.images.length != 0\">\n          <div class=\"col-4 mx-auto px-0 mb-1\" *ngFor=\"let img of device.images; let i = index\">\n            <div #secondImageDetails class=\"second-images-details\" (click)=\"viewImage(secondImageDetails)\">\n              <img (load)=\"checkSecondImagesloaded(i)\" class=\"img-fluid\" src=\"{{img?.image}}\" (error)=\"img.image = '../../../../../assets/default-Item.jpg'\" alt=\"Second Images\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"overlay\" *ngIf=\"rendering && imagesRendering\">\n          <div class=\"overlay-lds-ring\"><div></div><div></div><div></div><div></div></div>\n        </div>\n      </div>\n      <div class=\"col-12 col-sm-6 mx-auto\">\n        <div class=\"info-details\">\n          <ul class=\"list-unstyled\">\n            <li>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h4 class=\"text-info\">{{device?.brand}}</h4>\n                </div>\n                <div class=\"col align-self-center text-right\">\n                  <span class=\"status border border-secondary rounded py-1 px-2\">{{device?.status}}</span>\n                </div>\n              </div>\n            </li>\n            <li class=\"my-2\" *ngIf=\"device?.userImage && device?.username\">\n              <div class=\"row\">\n                <div class=\"col-4 col-xl-3 text-center\">\n                  <img class=\"img-fluid img-thumbnail\" src=\"{{device?.userImage}}\" alt=\"{{device?.username}} Image\" />\n                </div>\n                <div class=\"col-7 align-self-center\">\n                  <h4 class=\"mb-2 text-secondary\">{{device?.username}}</h4>\n                </div>\n              </div>\n            </li>\n            <li *ngIf=\"device?.type\"><p class=\"mb-2\">{{'type' | translate }} : <span class=\"text-secondary\">{{device?.type}}</span></p></li>\n            <li *ngIf=\"device?.country\"><p class=\"mb-2\">{{'country' | translate }} : <span class=\"text-secondary\">{{device?.country}}</span></p></li>\n            <li *ngIf=\"device?.price\"><p class=\"mb-2\">{{'price' | translate }} : <span class=\"text-secondary\">{{device?.price | currency}}</span></p></li>\n            <li *ngIf=\"device?.yearOfRelease\"><p class=\"mb-2\">{{'yearOfRelease' | translate }} : <span class=\"text-secondary\">{{device?.yearOfRelease.timestamp * 1000 | date: 'yyyy-MM-dd'}}</span></p></li>\n          </ul>\n        </div><!--.info-details-->\n      </div><!--.col-12-->\n      <div class=\"col-12\">\n        <hr class=\"w-50 mx-auto\">\n      </div>\n      <div class=\"col-12\">\n        <h3 class=\"\">{{'more-info' | translate}} :</h3>\n      </div>\n      <div class=\"col-12 col-sm-6 mx-auto\">\n        <ul class=\"list-unstyled\">\n          <li *ngIf=\"device?.city\"><p class=\"mb-2\">{{'city' | translate }} : {{device?.city}}</p></li>\n<!--          <li *ngIf=\"device?.distance\"><p class=\"mb-2\">{{'distance' | translate }} : {{device?.distance}}</p></li>-->\n        </ul>\n      </div><!--.col-12-->\n      <div class=\"col-12 col-sm-6 mx-auto\">\n        <ul class=\"list-unstyled\">\n          <li *ngIf=\"device?.createdBy\"><p class=\"mb-2\">{{'createdBy' | translate }} : {{device?.createdBy}}</p></li>\n          <li *ngIf=\"device?.createdAt\"><p class=\"mb-2\">{{'createdAt' | translate }} : {{device?.createdAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</p></li>\n          <li *ngIf=\"device?.updatedAt\"><p class=\"mb-2\">{{'updatedAt' | translate }} : {{device?.updatedAt.timestamp * 1000 | date: 'yyyy-MM-dd'}}</p></li>\n        </ul>\n      </div><!--.col-12-->\n      <div class=\"col-12\" *ngIf=\"device?.description\">\n        <h5>{{'description' | translate }} : </h5>\n        <p>{{device?.description}}</p>\n      </div>\n    </div><!--.row-->\n  </div>\n</div>\n<div *ngIf=\"!device\">\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllDevicesComponent } from './components/all-devices/all-devices.component';\nimport {DeviceDetailsComponent} from './components/device-details/device-details.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AllDevicesComponent },\n  { path: ':id', component: DeviceDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DevicesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from 'src/app/@theme/theme.module';\n\nimport { DevicesRoutingModule } from './devices-routing.module';\nimport { AllDevicesComponent } from './components/all-devices/all-devices.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromDevice from './store/device.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { DeviceEffects } from './store/device.effects';\nimport { DeviceDetailsComponent } from './components/device-details/device-details.component';\n\n\n@NgModule({\n  declarations: [AllDevicesComponent, DeviceDetailsComponent],\n  imports: [\n    ThemeModule,\n    DevicesRoutingModule,\n    StoreModule.forFeature(fromDevice.devicesFeatureKey, fromDevice.reducer),\n    EffectsModule.forFeature([DeviceEffects])\n  ]\n})\nexport class DevicesModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AdminConfig } from '../../AdminConfig';\nimport { DeviceResponse } from '../model/device-response';\nimport {DeviceDetailsResponse} from '../model/device-details-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DevicesService {\n\n\n  constructor(private httpClient: HttpClient) { }\n\n  private static errorHandler(error: HttpErrorResponse) {\n    return throwError(error || 'Server Error');\n  }\n\n\n  // all Devices\n  getDevices(): Observable<DeviceResponse> {\n    return this.httpClient.get<DeviceResponse>(\n      AdminConfig.allDevicesAPI\n    ).pipe(catchError(DevicesService.errorHandler));\n  }\n\n  // Car Details\n  deviceDetails(deviceID: number): Observable<DeviceDetailsResponse> {\n    return this.httpClient.get<DeviceDetailsResponse>(\n      `${AdminConfig.getDeviceAPI}/${deviceID}`\n    );\n  }\n\n  // Delete Device\n  deleteDevice(deviceId: number): Observable<any> {\n    return this.httpClient.delete<any>(\n      `${AdminConfig.deleteDeviceAPI}/${deviceId}`\n    ).pipe(catchError(DevicesService.errorHandler));\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Device } from '../model/device';\nimport {DeviceDetails} from '../model/device-details';\n\n\nexport const loadDevices = createAction(\n  '[Device/API] Load Devices'\n);\n\nexport const loadDevicesSuccess = createAction(\n  '[Device/API] Load Devices Success',\n  props<{ Data: Device[] }>()\n);\n\nexport const loadDevicesFailure = createAction(\n  '[Device/API] Load Devices Failure',\n  props<{ error: string }>()\n);\n\nexport const loadDevice = createAction(\n  '[Device Components/API] Load Device',\n  props<{ id: number }>()\n);\n\nexport const loadDeviceSuccess = createAction(\n  '[Device Effect/API] Load Device Success',\n  props<{ Data: DeviceDetails }>()\n);\n\nexport const loadDeviceFailure = createAction(\n  '[Device Effect/API] Load Device Failure',\n  props<{ error: string }>()\n);\n\nexport const deleteDevice = createAction(\n  '[Device Component/API] Delete Device',\n  props<{ id: number }>()\n);\n\nexport const deleteDeviceSuccess = createAction(\n  '[Device Effect/API] Delete Device Success',\n  props<{ id: number }>()\n);\n\nexport const deleteDeviceFailure = createAction(\n  '[Device Effect/API] Delete Device Failure',\n  props<{ error: string }>()\n);\n\nexport const addDevice = createAction(\n  '[Device/API] Add Device',\n  props<{ device: Device }>()\n);\n\nexport const upsertDevice = createAction(\n  '[Device/API] Upsert Device',\n  props<{ device: Device }>()\n);\n\nexport const addDevices = createAction(\n  '[Device/API] Add Devices',\n  props<{ devices: Device[] }>()\n);\n\nexport const upsertDevices = createAction(\n  '[Device/API] Upsert Devices',\n  props<{ devices: Device[] }>()\n);\n\nexport const updateDevice = createAction(\n  '[Device/API] Update Device',\n  props<{ device: Update<Device> }>()\n);\n\nexport const updateDevices = createAction(\n  '[Device/API] Update Devices',\n  props<{ devices: Update<Device>[] }>()\n);\n\nexport const deleteDevices = createAction(\n  '[Device/API] Delete Devices',\n  props<{ ids: string[] }>()\n);\n\nexport const clearDevices = createAction(\n  '[Device/API] Clear Devices'\n);\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ToastrService } from 'ngx-toastr';\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, tap } from 'rxjs/operators';\nimport { DevicesService } from '../services/devices.service';\nimport * as deviceActions from './device.actions';\n\n\n@Injectable()\nexport class DeviceEffects {\n\n  constructor(private actions$: Actions,\n              private toaster: ToastrService,\n              private deviceService: DevicesService) {}\n\n\n  loadDevices$ = createEffect(() => this.actions$.pipe(\n    ofType(deviceActions.loadDevices),\n    mergeMap(() => this.deviceService.getDevices()\n      .pipe(\n        map(devicesResponse => deviceActions.loadDevicesSuccess(devicesResponse)),\n        catchError(error => of(deviceActions.loadDevicesFailure(error)))\n      )\n    )\n  ));\n\n  // Load Device Effect\n  loadDevice$ = createEffect(() => this.actions$.pipe(\n    ofType(deviceActions.loadDevice),\n    mergeMap(action => this.deviceService.deviceDetails(action.id)\n      .pipe(\n        map(response => deviceActions.loadDeviceSuccess(response)),\n        catchError(error => of(deviceActions.loadDeviceFailure(error)))\n      ))\n  ));\n\n  // Delete Device Effect\n  deleteDevice$ = createEffect(() => this.actions$.pipe(\n    ofType(deviceActions.deleteDevice),\n    mergeMap(action => this.deviceService.deleteDevice(action.id)\n      .pipe(\n        map(response => deviceActions.deleteDeviceSuccess({id: action.id})),\n        catchError(error => of(deviceActions.deleteDeviceFailure(error)))\n      )\n    )\n  ));\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport * as DeviceActions from './device.actions';\nimport { Device } from '../model/device';\nimport {DeviceDetails} from '../model/device-details';\n\nexport const devicesFeatureKey = 'devices';\n\nexport interface DeviceState extends EntityState<Device> {\n  // additional entities state properties\n  Data: Device[];\n  selectedDevice: DeviceDetails;\n  error: string;\n}\n\nexport const adapter: EntityAdapter<Device> = createEntityAdapter<Device>();\n\nexport const initialState: DeviceState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  selectedDevice: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(DeviceActions.loadDevicesSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(DeviceActions.loadDevicesFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(DeviceActions.loadDeviceSuccess,\n  (state, action) => {\n      return {\n        ...state,\n        selectedDevice: action.Data\n      };\n    }\n  ),\n  on(DeviceActions.loadDeviceFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(DeviceActions.deleteDevice,\n    (state, action) => adapter.removeOne(action.id, state)\n  ),\n  on(DeviceActions.deleteDeviceFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      }\n    }\n  ),\n  on(DeviceActions.addDevice,\n    (state, action) => adapter.addOne(action.device, state)\n  ),\n  on(DeviceActions.upsertDevice,\n    (state, action) => adapter.upsertOne(action.device, state)\n  ),\n  on(DeviceActions.addDevices,\n    (state, action) => adapter.addMany(action.devices, state)\n  ),\n  on(DeviceActions.upsertDevices,\n    (state, action) => adapter.upsertMany(action.devices, state)\n  ),\n  on(DeviceActions.updateDevice,\n    (state, action) => adapter.updateOne(action.device, state)\n  ),\n  on(DeviceActions.updateDevices,\n    (state, action) => adapter.updateMany(action.devices, state)\n  ),\n  on(DeviceActions.deleteDevices,\n    (state, action) => adapter.removeMany(action.ids, state)\n  ),\n  on(DeviceActions.clearDevices,\n    state => adapter.removeAll(state)\n  ),\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { devicesFeatureKey, DeviceState, selectAll } from \"./device.reducer\";\r\nimport {carsFeatureKey} from '../../cars/store/car.reducer';\r\n\r\nconst deviceFeatureState = createFeatureSelector<DeviceState>(devicesFeatureKey);\r\n\r\nexport const allDevicesSelector = createSelector(deviceFeatureState, selectAll);\r\nexport const allDevicesAndCarsSelector = createSelector(\r\n  deviceFeatureState, selectAll);\r\n\r\nexport const deviceDetailsSelector = createSelector(deviceFeatureState, (state: DeviceState) => state.selectedDevice);\r\n\r\nexport const getDevicesError = createSelector(deviceFeatureState, (state: DeviceState) => state.error);\r\n\r\n"],"sourceRoot":"webpack:///"}